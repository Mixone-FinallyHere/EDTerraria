/*
  _____                 ____                 
 | ____|_ __ ___  _   _|  _ \  _____   _____ 
 |  _| | '_ ` _ \| | | | | | |/ _ \ \ / / __|
 | |___| | | | | | |_| | |_| |  __/\ V /\__ \
 |_____|_| |_| |_|\__,_|____/ \___| \_/ |___/
          <http://emudevs.com>
             Terraria 1.3
*/

using Microsoft.Xna.Framework;
using System;
using Terraria.GameContent;
using Terraria.GameContent.Achievements;
using Terraria.Graphics.Shaders;
using Terraria.ID;

namespace Terraria
{
    public class Projectile : Entity
    {
        public static int maxAI = 2;
        public float scale = 1f;
        public int owner = (int)byte.MaxValue;
        public float[] ai = new float[Projectile.maxAI];
        public float[] localAI = new float[Projectile.maxAI];
        public float stepSpeed = 1f;
        public int spriteDirection = 1;
        public int penetrate = 1;
        private int[] npcImmune = new int[200];
        public int maxPenetrate = 1;
        public Vector2[] oldPos = new Vector2[10];
        public float[] oldRot = new float[10];
        public int[] oldSpriteDirection = new int[10];
        public int[] playerImmune = new int[(int)byte.MaxValue];
        public string miscText = "";
        public bool arrow;
        public int numHits;
        public bool bobber;
        public bool netImportant;
        public bool noDropItem;
        public bool counterweight;
        public float rotation;
        public int type;
        public int alpha;
        public short glowMask;
        public float gfxOffY;
        public int aiStyle;
        public int timeLeft;
        public int soundDelay;
        public int damage;
        public bool hostile;
        public float knockBack;
        public bool friendly;
        private bool updatedNPCImmunity;
        public int identity;
        public float light;
        public bool netUpdate;
        public bool netUpdate2;
        public int netSpam;
        public bool minion;
        public float minionSlots;
        public int minionPos;
        public int restrikeDelay;
        public bool tileCollide;
        public int extraUpdates;
        public int numUpdates;
        public bool ignoreWater;
        public bool hide;
        public bool ownerHitCheck;
        public bool melee;
        public bool ranged;
        public bool thrown;
        public bool magic;
        public bool coldDamage;
        public bool noEnchantments;
        public bool trap;
        public bool npcProj;
        public int frameCounter;
        public int frame;
        public bool manualDirectionChange;

        public float Opacity
        {
            get
            {
                return (float)(1.0 - (double)this.alpha / (double)byte.MaxValue);
            }
            set
            {
                this.alpha = (int)MathHelper.Clamp((float)((1.0 - (double)value) * (double)byte.MaxValue), 0.0f, (float)byte.MaxValue);
            }
        }

        public int MaxUpdates
        {
            get
            {
                return this.extraUpdates + 1;
            }
            set
            {
                this.extraUpdates = value - 1;
            }
        }

        public void SetDefaults(int Type)
        {
            this.counterweight = false;
            this.arrow = false;
            this.bobber = false;
            this.numHits = 0;
            this.netImportant = false;
            this.manualDirectionChange = false;
            int newSize = 10;
            if (Type >= 0)
                newSize = ProjectileID.Sets.TrailCacheLength[Type];
            if (newSize != this.oldPos.Length)
            {
                Array.Resize<Vector2>(ref this.oldPos, newSize);
                Array.Resize<float>(ref this.oldRot, newSize);
                Array.Resize<int>(ref this.oldSpriteDirection, newSize);
            }
            for (int index = 0; index < this.oldPos.Length; ++index)
            {
                this.oldPos[index].X = 0.0f;
                this.oldPos[index].Y = 0.0f;
                this.oldRot[index] = 0.0f;
                this.oldSpriteDirection[index] = 0;
            }
            for (int index = 0; index < Projectile.maxAI; ++index)
            {
                this.ai[index] = 0.0f;
                this.localAI[index] = 0.0f;
            }
            for (int index = 0; index < (int)byte.MaxValue; ++index)
                this.playerImmune[index] = 0;
            for (int index = 0; index < 200; ++index)
                this.npcImmune[index] = 0;
            this.noDropItem = false;
            this.minion = false;
            this.minionSlots = 0.0f;
            this.soundDelay = 0;
            this.spriteDirection = 1;
            this.melee = false;
            this.ranged = false;
            this.thrown = false;
            this.magic = false;
            this.ownerHitCheck = false;
            this.hide = false;
            this.lavaWet = false;
            this.wetCount = (byte)0;
            this.wet = false;
            this.ignoreWater = false;
            this.hostile = false;
            this.netUpdate = false;
            this.netUpdate2 = false;
            this.netSpam = 0;
            this.numUpdates = 0;
            this.extraUpdates = 0;
            this.identity = 0;
            this.restrikeDelay = 0;
            this.light = 0.0f;
            this.penetrate = 1;
            this.tileCollide = true;
            this.position = Vector2.Zero;
            this.velocity = Vector2.Zero;
            this.aiStyle = 0;
            this.alpha = 0;
            this.glowMask = (short)-1;
            this.type = Type;
            this.active = true;
            this.rotation = 0.0f;
            this.scale = 1f;
            this.owner = (int)byte.MaxValue;
            this.timeLeft = 3600;
            this.name = "";
            this.friendly = false;
            this.damage = 0;
            this.knockBack = 0.0f;
            this.miscText = "";
            this.coldDamage = false;
            this.noEnchantments = false;
            this.trap = false;
            this.npcProj = false;
            this.frame = 0;
            this.frameCounter = 0;
            if (this.type == 1)
            {
                this.arrow = true;
                this.name = "Wooden Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.ranged = true;
            }
            else if (this.type == 2)
            {
                this.arrow = true;
                this.name = "Fire Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.light = 1f;
                this.ranged = true;
            }
            else if (this.type == 3)
            {
                this.name = "Shuriken";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 4;
                this.thrown = true;
            }
            else if (this.type == 4)
            {
                this.arrow = true;
                this.name = "Unholy Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.light = 0.35f;
                this.penetrate = 5;
                this.ranged = true;
            }
            else if (this.type == 5)
            {
                this.arrow = true;
                this.name = "Jester's Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.light = 0.4f;
                this.penetrate = -1;
                this.timeLeft = 120;
                this.alpha = 100;
                this.ignoreWater = true;
                this.ranged = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 6)
            {
                this.name = "Enchanted Boomerang";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 3;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
                this.light = 0.4f;
            }
            else if (this.type == 7 || this.type == 8)
            {
                this.name = "Vilethorn";
                this.width = 28;
                this.height = 28;
                this.aiStyle = 4;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.magic = true;
            }
            else if (this.type == 9)
            {
                this.name = "Starfury";
                this.width = 24;
                this.height = 24;
                this.aiStyle = 5;
                this.friendly = true;
                this.penetrate = 2;
                this.alpha = 50;
                this.scale = 0.8f;
                this.tileCollide = false;
                this.melee = true;
            }
            else if (this.type == 10)
            {
                this.name = "Purification Powder";
                this.width = 64;
                this.height = 64;
                this.aiStyle = 6;
                this.friendly = true;
                this.tileCollide = false;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
            }
            else if (this.type == 11)
            {
                this.name = "Vile Powder";
                this.width = 48;
                this.height = 48;
                this.aiStyle = 6;
                this.friendly = true;
                this.tileCollide = false;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
            }
            else if (this.type == 12)
            {
                this.name = "Falling Star";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 5;
                this.friendly = true;
                this.penetrate = -1;
                this.alpha = 50;
                this.light = 1f;
            }
            else if (this.type == 13)
            {
                this.netImportant = true;
                this.name = "Hook";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 7;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft *= 10;
            }
            else if (this.type == 14)
            {
                this.name = "Bullet";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 1;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.scale = 1.2f;
                this.timeLeft = 600;
                this.ranged = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 15)
            {
                this.name = "Ball of Fire";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 8;
                this.friendly = true;
                this.light = 0.8f;
                this.alpha = 100;
                this.magic = true;
            }
            else if (this.type == 16)
            {
                this.name = "Magic Missile";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 9;
                this.friendly = true;
                this.light = 0.8f;
                this.alpha = 100;
                this.magic = true;
            }
            else if (this.type == 17)
            {
                this.name = "Dirt Ball";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 10;
                this.friendly = true;
                this.ignoreWater = true;
            }
            else if (this.type == 18)
            {
                this.netImportant = true;
                this.name = "Shadow Orb";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 11;
                this.friendly = true;
                this.light = 0.9f;
                this.alpha = 150;
                this.tileCollide = false;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.ignoreWater = true;
                this.scale = 0.8f;
            }
            else if (this.type == 19)
            {
                this.name = "Flamarang";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 3;
                this.friendly = true;
                this.penetrate = -1;
                this.light = 1f;
                this.melee = true;
            }
            else if (this.type == 20)
            {
                this.name = "Green Laser";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 3;
                this.light = 0.75f;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
                this.scale = 1.4f;
                this.timeLeft = 600;
                this.magic = true;
            }
            else if (this.type == 21)
            {
                this.name = "Bone";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 2;
                this.scale = 1.2f;
                this.friendly = true;
                this.thrown = true;
            }
            else if (this.type == 22)
            {
                this.name = "Water Stream";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 12;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.extraUpdates = 2;
                this.ignoreWater = true;
                this.magic = true;
            }
            else if (this.type == 23)
            {
                this.name = "Harpoon";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 13;
                this.friendly = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.ranged = true;
            }
            else if (this.type == 24)
            {
                this.name = "Spiky Ball";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 14;
                this.friendly = true;
                this.penetrate = 6;
                this.thrown = true;
            }
            else if (this.type == 25)
            {
                this.name = "Ball 'O Hurt";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 15;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
                this.scale = 0.8f;
            }
            else if (this.type == 26)
            {
                this.name = "Blue Moon";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 15;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
                this.scale = 0.8f;
            }
            else if (this.type == 27)
            {
                this.name = "Water Bolt";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 8;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft /= 2;
                this.penetrate = 10;
                this.magic = true;
            }
            else if (this.type == 28)
            {
                this.name = "Bomb";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
            }
            else if (this.type == 29)
            {
                this.name = "Dynamite";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
            }
            else if (this.type == 30)
            {
                this.name = "Grenade";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.thrown = true;
            }
            else if (this.type == 31)
            {
                this.name = "Sand Ball";
                this.knockBack = 6f;
                this.width = 10;
                this.height = 10;
                this.aiStyle = 10;
                this.friendly = true;
                this.hostile = true;
                this.penetrate = -1;
            }
            else if (this.type == 32)
            {
                this.name = "Ivy Whip";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 7;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft *= 10;
            }
            else if (this.type == 33)
            {
                this.name = "Thorn Chakram";
                this.width = 38;
                this.height = 38;
                this.aiStyle = 3;
                this.friendly = true;
                this.scale = 0.9f;
                this.penetrate = -1;
                this.melee = true;
            }
            else if (this.type == 34)
            {
                this.name = "Flamelash";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 9;
                this.friendly = true;
                this.light = 0.8f;
                this.alpha = 100;
                this.penetrate = 1;
                this.magic = true;
            }
            else if (this.type == 35)
            {
                this.name = "Sunfury";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 15;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
                this.scale = 0.8f;
            }
            else if (this.type == 36)
            {
                this.name = "Meteor Shot";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 2;
                this.light = 0.6f;
                this.alpha = (int)byte.MaxValue;
                this.scale = 1.4f;
                this.timeLeft = 600;
                this.ranged = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 37)
            {
                this.name = "Sticky Bomb";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
            }
            else if (this.type == 38)
            {
                this.name = "Harpy Feather";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 0;
                this.hostile = true;
                this.penetrate = -1;
                this.aiStyle = 1;
                this.tileCollide = true;
            }
            else if (this.type == 39)
            {
                this.name = "Mud Ball";
                this.knockBack = 6f;
                this.width = 10;
                this.height = 10;
                this.aiStyle = 10;
                this.friendly = true;
                this.hostile = true;
                this.penetrate = -1;
            }
            else if (this.type == 40)
            {
                this.name = "Ash Ball";
                this.knockBack = 6f;
                this.width = 10;
                this.height = 10;
                this.aiStyle = 10;
                this.friendly = true;
                this.hostile = true;
                this.penetrate = -1;
            }
            else if (this.type == 41)
            {
                this.arrow = true;
                this.name = "Hellfire Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = -1;
                this.ranged = true;
                this.light = 0.3f;
            }
            else if (this.type == 42)
            {
                this.name = "Sand Ball";
                this.knockBack = 8f;
                this.width = 10;
                this.height = 10;
                this.aiStyle = 10;
                this.friendly = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 43)
            {
                this.name = "Tombstone";
                this.knockBack = 12f;
                this.width = 24;
                this.height = 24;
                this.aiStyle = 17;
                this.penetrate = -1;
            }
            else if (this.type == 44)
            {
                this.name = "Demon Sickle";
                this.width = 48;
                this.height = 48;
                this.alpha = 100;
                this.light = 0.2f;
                this.aiStyle = 18;
                this.hostile = true;
                this.penetrate = -1;
                this.tileCollide = true;
                this.scale = 0.9f;
            }
            else if (this.type == 45)
            {
                this.name = "Demon Scythe";
                this.width = 48;
                this.height = 48;
                this.alpha = 100;
                this.light = 0.2f;
                this.aiStyle = 18;
                this.friendly = true;
                this.penetrate = 5;
                this.tileCollide = true;
                this.scale = 0.9f;
                this.magic = true;
            }
            else if (this.type == 46)
            {
                this.name = "Dark Lance";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 19;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.scale = 1.1f;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 47)
            {
                this.name = "Trident";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 19;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.scale = 1.1f;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 48)
            {
                this.name = "Throwing Knife";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 2;
                this.thrown = true;
            }
            else if (this.type == 49)
            {
                this.name = "Spear";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 19;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.scale = 1.2f;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 50)
            {
                this.netImportant = true;
                this.name = "Glowstick";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 14;
                this.penetrate = -1;
                this.alpha = 75;
                this.light = 1f;
                this.timeLeft *= 5;
            }
            else if (this.type == 51)
            {
                this.name = "Seed";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 1;
                this.friendly = true;
            }
            else if (this.type == 52)
            {
                this.name = "Wooden Boomerang";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 3;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
            }
            else if (this.type == 53)
            {
                this.netImportant = true;
                this.name = "Sticky Glowstick";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 14;
                this.penetrate = -1;
                this.alpha = 75;
                this.light = 1f;
                this.timeLeft *= 5;
                this.tileCollide = false;
            }
            else if (this.type == 54)
            {
                this.name = "Poisoned Knife";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 2;
                this.thrown = true;
            }
            else if (this.type == 55)
            {
                this.name = "Stinger";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 0;
                this.hostile = true;
                this.penetrate = -1;
                this.aiStyle = 1;
                this.tileCollide = true;
            }
            else if (this.type == 56)
            {
                this.name = "Ebonsand Ball";
                this.knockBack = 6f;
                this.width = 10;
                this.height = 10;
                this.aiStyle = 10;
                this.friendly = true;
                this.hostile = true;
                this.penetrate = -1;
            }
            else if (this.type == 57)
            {
                this.name = "Cobalt Chainsaw";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 58)
            {
                this.name = "Mythril Chainsaw";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.scale = 1.08f;
            }
            else if (this.type == 59)
            {
                this.name = "Cobalt Drill";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.scale = 0.9f;
            }
            else if (this.type == 60)
            {
                this.name = "Mythril Drill";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.scale = 0.9f;
            }
            else if (this.type == 61)
            {
                this.name = "Adamantite Chainsaw";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.scale = 1.16f;
            }
            else if (this.type == 62)
            {
                this.name = "Adamantite Drill";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.scale = 0.9f;
            }
            else if (this.type == 63)
            {
                this.name = "The Dao of Pow";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 15;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
            }
            else if (this.type == 64)
            {
                this.name = "Mythril Halberd";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 19;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.scale = 1.25f;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 65)
            {
                this.name = "Ebonsand Ball";
                this.knockBack = 6f;
                this.width = 10;
                this.height = 10;
                this.aiStyle = 10;
                this.friendly = true;
                this.penetrate = -1;
                this.extraUpdates = 1;
            }
            else if (this.type == 66)
            {
                this.name = "Adamantite Glaive";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 19;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.scale = 1.27f;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 67)
            {
                this.name = "Pearl Sand Ball";
                this.knockBack = 6f;
                this.width = 10;
                this.height = 10;
                this.aiStyle = 10;
                this.friendly = true;
                this.hostile = true;
                this.penetrate = -1;
            }
            else if (this.type == 68)
            {
                this.name = "Pearl Sand Ball";
                this.knockBack = 6f;
                this.width = 10;
                this.height = 10;
                this.aiStyle = 10;
                this.friendly = true;
                this.penetrate = -1;
                this.extraUpdates = 1;
            }
            else if (this.type == 69)
            {
                this.name = "Holy Water";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 1;
            }
            else if (this.type == 70)
            {
                this.name = "Unholy Water";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 1;
            }
            else if (this.type == 621)
            {
                this.name = "Blood Water";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 1;
            }
            else if (this.type == 71)
            {
                this.name = "Silt Ball";
                this.knockBack = 6f;
                this.width = 10;
                this.height = 10;
                this.aiStyle = 10;
                this.friendly = true;
                this.hostile = true;
                this.penetrate = -1;
            }
            else if (this.type == 72)
            {
                this.netImportant = true;
                this.name = "Blue Fairy";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 11;
                this.friendly = true;
                this.light = 0.9f;
                this.tileCollide = false;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.ignoreWater = true;
                this.scale = 0.8f;
            }
            else if (this.type == 73 || this.type == 74)
            {
                this.netImportant = true;
                this.name = "Hook";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 7;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft *= 10;
                this.light = 0.4f;
            }
            else if (this.type == 75)
            {
                this.name = "Happy Bomb";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 16;
                this.hostile = true;
                this.penetrate = -1;
            }
            else if (this.type == 76 || this.type == 77 || this.type == 78)
            {
                if (this.type == 76)
                {
                    this.width = 10;
                    this.height = 22;
                }
                else if (this.type == 77)
                {
                    this.width = 18;
                    this.height = 24;
                }
                else
                {
                    this.width = 22;
                    this.height = 24;
                }
                this.name = "Note";
                this.aiStyle = 21;
                this.friendly = true;
                this.ranged = true;
                this.alpha = 100;
                this.light = 0.3f;
                this.penetrate = -1;
                this.timeLeft = 180;
                this.magic = true;
            }
            else if (this.type == 79)
            {
                this.name = "Rainbow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 9;
                this.friendly = true;
                this.light = 0.8f;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
            }
            else if (this.type == 80)
            {
                this.name = "Ice Block";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 22;
                this.friendly = true;
                this.magic = true;
                this.tileCollide = false;
                this.light = 0.5f;
                this.coldDamage = true;
            }
            else if (this.type == 81)
            {
                this.name = "Wooden Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.hostile = true;
                this.ranged = true;
            }
            else if (this.type == 82)
            {
                this.name = "Flaming Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.hostile = true;
                this.ranged = true;
            }
            else if (this.type == 83)
            {
                this.name = "Eye Laser";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.hostile = true;
                this.penetrate = 3;
                this.light = 0.75f;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
                this.scale = 1.7f;
                this.timeLeft = 600;
                this.magic = true;
            }
            else if (this.type == 84)
            {
                this.name = "Pink Laser";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.hostile = true;
                this.penetrate = 3;
                this.light = 0.75f;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
                this.scale = 1.2f;
                this.timeLeft = 600;
                this.magic = true;
            }
            else if (this.type == 85)
            {
                this.name = "Flames";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 23;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = 3;
                this.extraUpdates = 2;
                this.ranged = true;
            }
            else if (this.type == 86)
            {
                this.netImportant = true;
                this.name = "Pink Fairy";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 11;
                this.friendly = true;
                this.light = 0.9f;
                this.tileCollide = false;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.ignoreWater = true;
                this.scale = 0.8f;
            }
            else if (this.type == 87)
            {
                this.netImportant = true;
                this.name = "Pink Fairy";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 11;
                this.friendly = true;
                this.light = 0.9f;
                this.tileCollide = false;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.ignoreWater = true;
                this.scale = 0.8f;
            }
            else if (this.type == 88)
            {
                this.name = "Purple Laser";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 3;
                this.light = 0.75f;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 4;
                this.scale = 1.4f;
                this.timeLeft = 600;
                this.magic = true;
            }
            else if (this.type == 89)
            {
                this.name = "Crystal Bullet";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 1;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.scale = 1.2f;
                this.timeLeft = 600;
                this.ranged = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 90)
            {
                this.name = "Crystal Shard";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 24;
                this.friendly = true;
                this.penetrate = 1;
                this.light = 0.5f;
                this.alpha = 50;
                this.scale = 1.2f;
                this.timeLeft = 600;
                this.ranged = true;
                this.tileCollide = false;
            }
            else if (this.type == 91)
            {
                this.arrow = true;
                this.name = "Holy Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.ranged = true;
            }
            else if (this.type == 92)
            {
                this.name = "Hallow Star";
                this.width = 24;
                this.height = 24;
                this.aiStyle = 5;
                this.friendly = true;
                this.penetrate = 2;
                this.alpha = 50;
                this.scale = 0.8f;
                this.tileCollide = false;
                this.magic = true;
            }
            else if (this.type == 93)
            {
                this.light = 0.15f;
                this.name = "Magic Dagger";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 2;
                this.magic = true;
            }
            else if (this.type == 94)
            {
                this.ignoreWater = true;
                this.name = "Crystal Storm";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 24;
                this.friendly = true;
                this.light = 0.5f;
                this.alpha = 50;
                this.scale = 1.2f;
                this.timeLeft = 600;
                this.magic = true;
                this.tileCollide = true;
                this.penetrate = 1;
            }
            else if (this.type == 95)
            {
                this.name = "Cursed Flame";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 8;
                this.friendly = true;
                this.light = 0.8f;
                this.alpha = 100;
                this.magic = true;
                this.penetrate = 2;
            }
            else if (this.type == 96)
            {
                this.name = "Cursed Flame";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 8;
                this.hostile = true;
                this.light = 0.8f;
                this.alpha = 100;
                this.magic = true;
                this.penetrate = -1;
                this.scale = 0.9f;
                this.scale = 1.3f;
            }
            else if (this.type == 97)
            {
                this.name = "Cobalt Naginata";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 19;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.scale = 1.1f;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 98)
            {
                this.name = "Poison Dart";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.hostile = true;
                this.penetrate = -1;
                this.trap = true;
            }
            else if (this.type == 99)
            {
                this.name = "Boulder";
                this.width = 31;
                this.height = 31;
                this.aiStyle = 25;
                this.friendly = true;
                this.hostile = true;
                this.ranged = true;
                this.penetrate = -1;
                this.trap = true;
            }
            else if (this.type == 100)
            {
                this.name = "Death Laser";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.hostile = true;
                this.penetrate = 3;
                this.light = 0.75f;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
                this.scale = 1.8f;
                this.timeLeft = 2700;
                this.magic = true;
            }
            else if (this.type == 101)
            {
                this.name = "Eye Fire";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 23;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.extraUpdates = 3;
                this.magic = true;
            }
            else if (this.type == 102)
            {
                this.name = "Bomb";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 16;
                this.hostile = true;
                this.penetrate = -1;
                this.ranged = true;
            }
            else if (this.type == 103)
            {
                this.arrow = true;
                this.name = "Cursed Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.light = 1f;
                this.ranged = true;
            }
            else if (this.type == 104)
            {
                this.name = "Cursed Bullet";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 1;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.scale = 1.2f;
                this.timeLeft = 600;
                this.ranged = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 105)
            {
                this.name = "Gungnir";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 19;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.scale = 1.3f;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 106)
            {
                this.name = "Light Disc";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 3;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
                this.light = 0.4f;
            }
            else if (this.type == 107)
            {
                this.name = "Hamdrax";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.scale = 1.1f;
            }
            else if (this.type == 108)
            {
                this.name = "Explosives";
                this.width = 260;
                this.height = 260;
                this.aiStyle = 16;
                this.friendly = true;
                this.hostile = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 2;
                this.trap = true;
            }
            else if (this.type == 109)
            {
                this.name = "Snow Ball";
                this.knockBack = 6f;
                this.width = 10;
                this.height = 10;
                this.aiStyle = 10;
                this.hostile = true;
                this.scale = 0.9f;
                this.penetrate = -1;
                this.coldDamage = true;
                this.thrown = true;
            }
            else if (this.type == 110)
            {
                this.name = "Bullet";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.hostile = true;
                this.penetrate = -1;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.scale = 1.2f;
                this.timeLeft = 600;
                this.ranged = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 111)
            {
                this.netImportant = true;
                this.name = "Bunny";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 112)
            {
                this.netImportant = true;
                this.name = "Penguin";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 113)
            {
                this.name = "Ice Boomerang";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 3;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
                this.light = 0.4f;
                this.coldDamage = true;
            }
            else if (this.type == 114)
            {
                this.name = "Unholy Trident";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 27;
                this.magic = true;
                this.penetrate = 3;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.friendly = true;
            }
            else if (this.type == 115)
            {
                this.name = "Unholy Trident";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 27;
                this.hostile = true;
                this.magic = true;
                this.penetrate = -1;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
            }
            else if (this.type == 116)
            {
                this.name = "Sword Beam";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 27;
                this.melee = true;
                this.penetrate = 1;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.friendly = true;
            }
            else if (this.type == 117)
            {
                this.arrow = true;
                this.name = "Bone Arrow";
                this.extraUpdates = 2;
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.ranged = true;
            }
            else if (this.type == 118)
            {
                this.name = "Ice Bolt";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 28;
                this.alpha = (int)byte.MaxValue;
                this.melee = true;
                this.penetrate = 1;
                this.friendly = true;
                this.coldDamage = true;
            }
            else if (this.type == 119)
            {
                this.name = "Frost Bolt";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 28;
                this.alpha = (int)byte.MaxValue;
                this.melee = true;
                this.penetrate = 2;
                this.friendly = true;
            }
            else if (this.type == 120)
            {
                this.arrow = true;
                this.name = "Frost Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.ranged = true;
                this.coldDamage = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 121)
            {
                this.name = "Amethyst Bolt";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 29;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.penetrate = 1;
                this.friendly = true;
            }
            else if (this.type == 122)
            {
                this.name = "Topaz Bolt";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 29;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.penetrate = 1;
                this.friendly = true;
            }
            else if (this.type == 123)
            {
                this.name = "Sapphire Bolt";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 29;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.penetrate = 1;
                this.friendly = true;
            }
            else if (this.type == 124)
            {
                this.name = "Emerald Bolt";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 29;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.penetrate = 2;
                this.friendly = true;
            }
            else if (this.type == 125)
            {
                this.name = "Ruby Bolt";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 29;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.penetrate = 2;
                this.friendly = true;
            }
            else if (this.type == 126)
            {
                this.name = "Diamond Bolt";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 29;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.penetrate = 2;
                this.friendly = true;
            }
            else if (this.type == (int)sbyte.MaxValue)
            {
                this.netImportant = true;
                this.name = "Turtle";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 128)
            {
                this.name = "Frost Blast";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 28;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.friendly = false;
                this.hostile = true;
                this.coldDamage = true;
            }
            else if (this.type == 129)
            {
                this.name = "Rune Blast";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 28;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.friendly = false;
                this.hostile = true;
                this.tileCollide = false;
            }
            else if (this.type == 130)
            {
                this.name = "Mushroom Spear";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 19;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.scale = 1.2f;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 131)
            {
                this.name = "Mushroom";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 30;
                this.friendly = true;
                this.penetrate = 1;
                this.tileCollide = false;
                this.melee = true;
                this.light = 0.5f;
            }
            else if (this.type == 132)
            {
                this.name = "Terra Beam";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 27;
                this.melee = true;
                this.penetrate = 3;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.friendly = true;
            }
            else if (this.type == 133)
            {
                this.name = "Grenade";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.ranged = true;
            }
            else if (this.type == 134)
            {
                this.name = "Rocket";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.ranged = true;
            }
            else if (this.type == 135)
            {
                this.name = "Proximity Mine";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.ranged = true;
            }
            else if (this.type == 136)
            {
                this.name = "Grenade";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.ranged = true;
            }
            else if (this.type == 137)
            {
                this.name = "Rocket";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.ranged = true;
            }
            else if (this.type == 138)
            {
                this.name = "Proximity Mine";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.ranged = true;
            }
            else if (this.type == 139)
            {
                this.name = "Grenade";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.ranged = true;
            }
            else if (this.type == 140)
            {
                this.name = "Rocket";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.ranged = true;
            }
            else if (this.type == 141)
            {
                this.name = "Proximity Mine";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.ranged = true;
            }
            else if (this.type == 142)
            {
                this.name = "Grenade";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.ranged = true;
            }
            else if (this.type == 143)
            {
                this.name = "Rocket";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.ranged = true;
            }
            else if (this.type == 144)
            {
                this.name = "Proximity Mine";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.ranged = true;
            }
            else if (this.type == 145)
            {
                this.name = "Pure Spray";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 31;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.extraUpdates = 2;
                this.tileCollide = false;
                this.ignoreWater = true;
            }
            else if (this.type == 146)
            {
                this.name = "Hallow Spray";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 31;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.extraUpdates = 2;
                this.tileCollide = false;
                this.ignoreWater = true;
            }
            else if (this.type == 147)
            {
                this.name = "Corrupt Spray";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 31;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.extraUpdates = 2;
                this.tileCollide = false;
                this.ignoreWater = true;
            }
            else if (this.type == 148)
            {
                this.name = "Mushroom Spray";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 31;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.extraUpdates = 2;
                this.tileCollide = false;
                this.ignoreWater = true;
            }
            else if (this.type == 149)
            {
                this.name = "Crimson Spray";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 31;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.extraUpdates = 2;
                this.tileCollide = false;
                this.ignoreWater = true;
            }
            else if (this.type == 150 || this.type == 151 || this.type == 152)
            {
                this.name = "Nettle Burst";
                this.width = 28;
                this.height = 28;
                this.aiStyle = 4;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.magic = true;
            }
            else if (this.type == 153)
            {
                this.name = "The Rotted Fork";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 19;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.scale = 1.1f;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 154)
            {
                this.name = "The Meatball";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 15;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
                this.scale = 0.8f;
            }
            else if (this.type == 155)
            {
                this.netImportant = true;
                this.name = "Beach Ball";
                this.width = 44;
                this.height = 44;
                this.aiStyle = 32;
                this.friendly = true;
            }
            else if (this.type == 156)
            {
                this.name = "Light Beam";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 27;
                this.melee = true;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.friendly = true;
            }
            else if (this.type == 157)
            {
                this.name = "Night Beam";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 27;
                this.melee = true;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.friendly = true;
                this.scale = 1.2f;
            }
            else if (this.type == 158)
            {
                this.name = "Copper Coin";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 600;
                this.ranged = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 159)
            {
                this.name = "Silver Coin";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 600;
                this.ranged = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 160)
            {
                this.name = "Gold Coin";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 600;
                this.ranged = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 161)
            {
                this.name = "Platinum Coin";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 600;
                this.ranged = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 162)
            {
                this.name = "Cannonball";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 4;
                this.alpha = (int)byte.MaxValue;
            }
            else if (this.type == 163)
            {
                this.netImportant = true;
                this.name = "Flare";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 33;
                this.friendly = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 36000;
            }
            else if (this.type == 164)
            {
                this.name = "Landmine";
                this.width = 128;
                this.height = 128;
                this.aiStyle = 16;
                this.friendly = true;
                this.hostile = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 2;
            }
            else if (this.type == 165)
            {
                this.netImportant = true;
                this.name = "Web";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 7;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft *= 10;
            }
            else if (this.type == 166)
            {
                this.name = "Snow Ball";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 2;
                this.friendly = true;
                this.ranged = true;
                this.coldDamage = true;
            }
            else if (this.type == 167 || this.type == 168 || (this.type == 169 || this.type == 170))
            {
                this.name = "Rocket";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 34;
                this.friendly = true;
                this.ranged = true;
                this.timeLeft = 45;
            }
            else if (this.type == 171 || this.type == 505 || this.type == 506)
            {
                this.name = "Rope Coil";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 35;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft = 400;
            }
            else if (this.type == 172)
            {
                this.arrow = true;
                this.name = "Frostburn Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.light = 1f;
                this.ranged = true;
                this.coldDamage = true;
            }
            else if (this.type == 173)
            {
                this.name = "Enchanted Beam";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 27;
                this.melee = true;
                this.penetrate = 1;
                this.light = 0.2f;
                this.alpha = (int)byte.MaxValue;
                this.friendly = true;
            }
            else if (this.type == 174)
            {
                this.name = "Ice Spike";
                this.alpha = (int)byte.MaxValue;
                this.width = 6;
                this.height = 6;
                this.aiStyle = 1;
                this.hostile = true;
                this.penetrate = -1;
                this.coldDamage = true;
            }
            else if (this.type == 175)
            {
                this.name = "Baby Eater";
                this.width = 34;
                this.height = 34;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 176)
            {
                this.name = "Jungle Spike";
                this.alpha = (int)byte.MaxValue;
                this.width = 6;
                this.height = 6;
                this.aiStyle = 1;
                this.hostile = true;
                this.penetrate = -1;
            }
            else if (this.type == 177)
            {
                this.name = "Icewater Spit";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 28;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.friendly = false;
                this.hostile = true;
                this.coldDamage = true;
            }
            else if (this.type == 178)
            {
                this.name = "Confetti";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.timeLeft = 2;
            }
            else if (this.type == 179)
            {
                this.name = "Slush Ball";
                this.knockBack = 6f;
                this.width = 10;
                this.height = 10;
                this.aiStyle = 10;
                this.friendly = true;
                this.hostile = true;
                this.penetrate = -1;
            }
            else if (this.type == 180)
            {
                this.name = "Bullet";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.hostile = true;
                this.penetrate = -1;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.scale = 1.2f;
                this.timeLeft = 600;
                this.ranged = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 181)
            {
                this.name = "Bee";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 36;
                this.friendly = true;
                this.penetrate = 3;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 600;
                this.extraUpdates = 3;
            }
            else if (this.type == 182)
            {
                this.light = 0.15f;
                this.name = "Possessed Hatchet";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 3;
                this.friendly = true;
                this.penetrate = 10;
                this.melee = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 183)
            {
                this.name = "Beenade";
                this.width = 14;
                this.height = 22;
                this.aiStyle = 14;
                this.penetrate = 1;
                this.ranged = true;
                this.timeLeft = 180;
                this.thrown = true;
                this.friendly = true;
            }
            else if (this.type == 184)
            {
                this.name = "Poison Dart";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 1;
                this.friendly = true;
                this.hostile = true;
                this.penetrate = -1;
                this.trap = true;
            }
            else if (this.type == 185)
            {
                this.name = "Spiky Ball";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 14;
                this.friendly = true;
                this.hostile = true;
                this.penetrate = -1;
                this.timeLeft = 900;
                this.trap = true;
            }
            else if (this.type == 186)
            {
                this.name = "Spear";
                this.width = 10;
                this.height = 14;
                this.aiStyle = 37;
                this.friendly = true;
                this.tileCollide = false;
                this.ignoreWater = true;
                this.hostile = true;
                this.penetrate = -1;
                this.timeLeft = 300;
                this.trap = true;
            }
            else if (this.type == 187)
            {
                this.name = "Flamethrower";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 38;
                this.alpha = (int)byte.MaxValue;
                this.tileCollide = false;
                this.ignoreWater = true;
                this.timeLeft = 60;
                this.trap = true;
            }
            else if (this.type == 188)
            {
                this.name = "Flames";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 23;
                this.friendly = true;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.extraUpdates = 2;
                this.trap = true;
            }
            else if (this.type == 189)
            {
                this.name = "Wasp";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 36;
                this.friendly = true;
                this.penetrate = 4;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 600;
                this.magic = true;
                this.extraUpdates = 3;
            }
            else if (this.type == 190)
            {
                this.name = "Mechanical Piranha";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 39;
                this.friendly = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.ranged = true;
            }
            else if (this.type >= 191 && this.type <= 194)
            {
                this.netImportant = true;
                this.name = "Pygmy";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 26;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.minion = true;
                this.minionSlots = 1f;
                if (this.type == 192)
                    this.scale = 1.025f;
                if (this.type == 193)
                    this.scale = 1.05f;
                if (this.type == 194)
                    this.scale = 1.075f;
            }
            else if (this.type == 195)
            {
                this.tileCollide = false;
                this.name = "Pygmy";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
            }
            else if (this.type == 196)
            {
                this.name = "Smoke Bomb";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 14;
                this.penetrate = -1;
                this.scale = 0.8f;
            }
            else if (this.type == 197)
            {
                this.netImportant = true;
                this.name = "Baby Skeletron Head";
                this.width = 42;
                this.height = 42;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 198)
            {
                this.netImportant = true;
                this.name = "Baby Hornet";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 199)
            {
                this.netImportant = true;
                this.name = "Tiki Spirit";
                this.width = 28;
                this.height = 28;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 200)
            {
                this.netImportant = true;
                this.name = "Pet Lizard";
                this.width = 28;
                this.height = 28;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 201)
            {
                this.name = "Tombstone";
                this.knockBack = 12f;
                this.width = 24;
                this.height = 24;
                this.aiStyle = 17;
                this.penetrate = -1;
            }
            else if (this.type == 202)
            {
                this.name = "Tombstone";
                this.knockBack = 12f;
                this.width = 24;
                this.height = 24;
                this.aiStyle = 17;
                this.penetrate = -1;
            }
            else if (this.type == 203)
            {
                this.name = "Tombstone";
                this.knockBack = 12f;
                this.width = 24;
                this.height = 24;
                this.aiStyle = 17;
                this.penetrate = -1;
            }
            else if (this.type == 204)
            {
                this.name = "Tombstone";
                this.knockBack = 12f;
                this.width = 24;
                this.height = 24;
                this.aiStyle = 17;
                this.penetrate = -1;
            }
            else if (this.type == 205)
            {
                this.name = "Tombstone";
                this.knockBack = 12f;
                this.width = 24;
                this.height = 24;
                this.aiStyle = 17;
                this.penetrate = -1;
            }
            else if (this.type == 206)
            {
                this.name = "Leaf";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 40;
                this.friendly = true;
                this.penetrate = 1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 600;
                this.magic = true;
            }
            else if (this.type == 207)
            {
                this.name = "Bullet";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 1;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
                this.scale = 1.2f;
                this.timeLeft = 600;
                this.ranged = true;
            }
            else if (this.type == 208)
            {
                this.netImportant = true;
                this.name = "Parrot";
                this.width = 18;
                this.height = 36;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 209)
            {
                this.name = "Truffle";
                this.width = 12;
                this.height = 32;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.light = 0.5f;
            }
            else if (this.type == 210)
            {
                this.netImportant = true;
                this.name = "Sapling";
                this.width = 14;
                this.height = 30;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 211)
            {
                this.netImportant = true;
                this.name = "Wisp";
                this.width = 24;
                this.height = 24;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.light = 1f;
                this.ignoreWater = true;
            }
            else if (this.type == 212)
            {
                this.name = "Palladium Pike";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 19;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.scale = 1.12f;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 213)
            {
                this.name = "Palladium Drill";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.scale = 0.92f;
            }
            else if (this.type == 214)
            {
                this.name = "Palladium Chainsaw";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 215)
            {
                this.name = "Orichalcum Halberd";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 19;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.scale = 1.27f;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 216)
            {
                this.name = "Orichalcum Drill";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.scale = 0.93f;
            }
            else if (this.type == 217)
            {
                this.name = "Orichalcum Chainsaw";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.scale = 1.12f;
            }
            else if (this.type == 218)
            {
                this.name = "Titanium Trident";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 19;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.scale = 1.28f;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 219)
            {
                this.name = "Titanium Drill";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.scale = 0.95f;
            }
            else if (this.type == 220)
            {
                this.name = "Titanium Chainsaw";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.scale = 1.2f;
            }
            else if (this.type == 221)
            {
                this.name = "Flower Petal";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 41;
                this.friendly = true;
                this.tileCollide = false;
                this.ignoreWater = true;
                this.timeLeft = 120;
                this.penetrate = -1;
                this.scale = (float)(1.0 + (double)Main.rand.Next(30) * 0.00999999977648258);
                this.extraUpdates = 2;
            }
            else if (this.type == 222)
            {
                this.name = "Chlorophyte Partisan";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 19;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.scale = 1.3f;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 223)
            {
                this.name = "Chlorophyte Drill";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.scale = 1f;
            }
            else if (this.type == 224)
            {
                this.name = "Chlorophyte Chainsaw";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.scale = 1.1f;
            }
            else if (this.type == 225)
            {
                this.arrow = true;
                this.penetrate = 2;
                this.name = "Chlorophyte Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.ranged = true;
            }
            else if (this.type == 226)
            {
                this.netImportant = true;
                this.name = "Crystal Leaf";
                this.width = 22;
                this.height = 42;
                this.aiStyle = 42;
                this.friendly = true;
                this.tileCollide = false;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.light = 0.4f;
                this.ignoreWater = true;
            }
            else if (this.type == 227)
            {
                this.netImportant = true;
                this.tileCollide = false;
                this.light = 0.1f;
                this.name = "Crystal Leaf";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 43;
                this.friendly = true;
                this.penetrate = 1;
                this.timeLeft = 180;
            }
            else if (this.type == 228)
            {
                this.tileCollide = false;
                this.name = "Spore Cloud";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 44;
                this.friendly = true;
                this.scale = 1.1f;
                this.penetrate = -1;
            }
            else if (this.type == 229)
            {
                this.name = "Chlorophyte Orb";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 44;
                this.friendly = true;
                this.penetrate = -1;
                this.light = 0.2f;
            }
            else if (this.type >= 230 && this.type <= 235)
            {
                this.netImportant = true;
                this.name = "Gem Hook";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 7;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft *= 10;
            }
            else if (this.type == 236)
            {
                this.netImportant = true;
                this.name = "Baby Dino";
                this.width = 34;
                this.height = 34;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 237)
            {
                this.netImportant = true;
                this.name = "Rain Cloud";
                this.width = 28;
                this.height = 28;
                this.aiStyle = 45;
                this.penetrate = -1;
            }
            else if (this.type == 238)
            {
                this.tileCollide = false;
                this.ignoreWater = true;
                this.name = "Rain Cloud";
                this.width = 54;
                this.height = 28;
                this.aiStyle = 45;
                this.penetrate = -1;
            }
            else if (this.type == 239)
            {
                this.ignoreWater = true;
                this.name = "Rain";
                this.width = 4;
                this.height = 40;
                this.aiStyle = 45;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft = 300;
                this.scale = 1.1f;
                this.magic = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 240)
            {
                this.name = "Cannonball";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 2;
                this.hostile = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
            }
            else if (this.type == 241)
            {
                this.name = "Crimsand Ball";
                this.knockBack = 6f;
                this.width = 10;
                this.height = 10;
                this.aiStyle = 10;
                this.friendly = true;
                this.hostile = true;
                this.penetrate = -1;
            }
            else if (this.type == 242)
            {
                this.name = "Bullet";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 1;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 7;
                this.scale = 1.18f;
                this.timeLeft = 600;
                this.ranged = true;
                this.ignoreWater = true;
            }
            else if (this.type == 243)
            {
                this.name = "Blood Cloud";
                this.width = 28;
                this.height = 28;
                this.aiStyle = 45;
                this.penetrate = -1;
            }
            else if (this.type == 244)
            {
                this.tileCollide = false;
                this.ignoreWater = true;
                this.name = "Blood Cloud";
                this.width = 54;
                this.height = 28;
                this.aiStyle = 45;
                this.penetrate = -1;
            }
            else if (this.type == 245)
            {
                this.ignoreWater = true;
                this.name = "Blood Rain";
                this.width = 4;
                this.height = 40;
                this.aiStyle = 45;
                this.friendly = true;
                this.penetrate = 2;
                this.timeLeft = 300;
                this.scale = 1.1f;
                this.magic = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 246)
            {
                this.name = "Stynger";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.ranged = true;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 1;
            }
            else if (this.type == 247)
            {
                this.name = "Flower Pow";
                this.width = 34;
                this.height = 34;
                this.aiStyle = 15;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
            }
            else if (this.type == 248)
            {
                this.name = "Flower Pow";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 1;
                this.friendly = true;
                this.melee = true;
            }
            else if (this.type == 249)
            {
                this.name = "Stynger";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 2;
                this.friendly = true;
                this.ranged = true;
            }
            else if (this.type == 250)
            {
                this.name = "Rainbow";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 46;
                this.penetrate = -1;
                this.magic = true;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.scale = 1.25f;
            }
            else if (this.type == 251)
            {
                this.name = "Rainbow";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 46;
                this.friendly = true;
                this.penetrate = -1;
                this.magic = true;
                this.alpha = (int)byte.MaxValue;
                this.light = 0.3f;
                this.tileCollide = false;
                this.ignoreWater = true;
                this.scale = 1.25f;
            }
            else if (this.type == 252)
            {
                this.name = "Chlorophyte Jackhammer";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.scale = 1.1f;
            }
            else if (this.type == 253)
            {
                this.name = "Ball of Frost";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 8;
                this.friendly = true;
                this.light = 0.8f;
                this.alpha = 100;
                this.magic = true;
            }
            else if (this.type == 254)
            {
                this.name = "Magnet Sphere";
                this.width = 38;
                this.height = 38;
                this.aiStyle = 47;
                this.magic = true;
                this.timeLeft = 660;
                this.light = 0.5f;
            }
            else if (this.type == (int)byte.MaxValue)
            {
                this.name = "Magnet Sphere";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 48;
                this.friendly = true;
                this.magic = true;
                this.extraUpdates = 100;
                this.timeLeft = 100;
            }
            else if (this.type == 256)
            {
                this.netImportant = true;
                this.tileCollide = false;
                this.name = "Skeletron Hand";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 7;
                this.friendly = true;
                this.penetrate = -1;
                this.scale = 1f;
                this.timeLeft *= 10;
            }
            else if (this.type == 257)
            {
                this.name = "Frost Beam";
                this.ignoreWater = true;
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.hostile = true;
                this.penetrate = -1;
                this.light = 0.75f;
                this.alpha = (int)byte.MaxValue;
                this.scale = 1.2f;
                this.timeLeft = 600;
                this.magic = true;
                this.coldDamage = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 258)
            {
                this.name = "Fireball";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 8;
                this.hostile = true;
                this.penetrate = -1;
                this.alpha = 100;
                this.timeLeft = 300;
            }
            else if (this.type == 259)
            {
                this.name = "Eye Beam";
                this.ignoreWater = true;
                this.tileCollide = false;
                this.width = 8;
                this.height = 8;
                this.aiStyle = 1;
                this.hostile = true;
                this.penetrate = -1;
                this.light = 0.3f;
                this.scale = 1.1f;
                this.magic = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 260)
            {
                this.name = "Heat Ray";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 48;
                this.friendly = true;
                this.magic = true;
                this.extraUpdates = 100;
                this.timeLeft = 200;
                this.penetrate = -1;
            }
            else if (this.type == 261)
            {
                this.name = "Boulder";
                this.width = 32;
                this.height = 34;
                this.aiStyle = 14;
                this.friendly = true;
                this.penetrate = 6;
                this.magic = true;
                this.ignoreWater = true;
            }
            else if (this.type == 262)
            {
                this.name = "Golem Fist";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 13;
                this.friendly = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.melee = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 263)
            {
                this.name = "Ice Sickle";
                this.width = 34;
                this.height = 34;
                this.alpha = 100;
                this.light = 0.5f;
                this.aiStyle = 18;
                this.friendly = true;
                this.penetrate = 5;
                this.tileCollide = true;
                this.scale = 1f;
                this.melee = true;
                this.timeLeft = 180;
                this.coldDamage = true;
            }
            else if (this.type == 264)
            {
                this.ignoreWater = true;
                this.name = "Rain";
                this.width = 4;
                this.height = 40;
                this.aiStyle = 45;
                this.hostile = true;
                this.penetrate = -1;
                this.timeLeft = 120;
                this.scale = 1.1f;
                this.extraUpdates = 1;
            }
            else if (this.type == 265)
            {
                this.name = "Poison Fang";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 1;
                this.alpha = (int)byte.MaxValue;
                this.friendly = true;
                this.magic = true;
                this.penetrate = 4;
            }
            else if (this.type == 266)
            {
                this.netImportant = true;
                this.alpha = 75;
                this.name = "Baby Slime";
                this.width = 24;
                this.height = 16;
                this.aiStyle = 26;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.minion = true;
                this.minionSlots = 1f;
            }
            else if (this.type == 267)
            {
                this.alpha = (int)byte.MaxValue;
                this.name = "Poison Dart";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 1;
                this.friendly = true;
                this.ranged = true;
            }
            else if (this.type == 268)
            {
                this.netImportant = true;
                this.name = "Eye Spring";
                this.width = 18;
                this.height = 32;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 269)
            {
                this.netImportant = true;
                this.name = "Baby Snowman";
                this.width = 20;
                this.height = 26;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 270)
            {
                this.name = "Skull";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 1;
                this.alpha = (int)byte.MaxValue;
                this.friendly = true;
                this.magic = true;
                this.penetrate = 3;
            }
            else if (this.type == 271)
            {
                this.name = "Boxing Glove";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 13;
                this.friendly = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.melee = true;
                this.scale = 1.2f;
            }
            else if (this.type == 272)
            {
                this.name = "Bananarang";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 3;
                this.friendly = true;
                this.scale = 0.9f;
                this.penetrate = -1;
                this.melee = true;
            }
            else if (this.type == 273)
            {
                this.name = "Chain Knife";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 13;
                this.friendly = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.melee = true;
            }
            else if (this.type == 274)
            {
                this.name = "Death Sickle";
                this.width = 42;
                this.height = 42;
                this.alpha = 100;
                this.light = 0.5f;
                this.aiStyle = 18;
                this.friendly = true;
                this.penetrate = 5;
                this.tileCollide = false;
                this.scale = 1.1f;
                this.melee = true;
                this.timeLeft = 180;
            }
            else if (this.type == 275)
            {
                this.alpha = (int)byte.MaxValue;
                this.name = "Seed";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 1;
                this.hostile = true;
            }
            else if (this.type == 276)
            {
                this.alpha = (int)byte.MaxValue;
                this.name = "Poison Seed";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 1;
                this.hostile = true;
            }
            else if (this.type == 277)
            {
                this.alpha = (int)byte.MaxValue;
                this.name = "Thorn Ball";
                this.width = 38;
                this.height = 38;
                this.aiStyle = 14;
                this.hostile = true;
            }
            else if (this.type == 278)
            {
                this.arrow = true;
                this.name = "Ichor Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.light = 1f;
                this.ranged = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 279)
            {
                this.name = "Ichor Bullet";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 1;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
                this.scale = 1.25f;
                this.timeLeft = 600;
                this.ranged = true;
            }
            else if (this.type == 280)
            {
                this.name = "Golden Shower";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 12;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = 5;
                this.extraUpdates = 2;
                this.ignoreWater = true;
                this.magic = true;
            }
            else if (this.type == 281)
            {
                this.name = "Explosive Bunny";
                this.width = 28;
                this.height = 28;
                this.aiStyle = 49;
                this.friendly = true;
                this.penetrate = 1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 600;
            }
            else if (this.type == 282)
            {
                this.arrow = true;
                this.name = "Venom Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.ranged = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 283)
            {
                this.name = "Venom Bullet";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 1;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
                this.scale = 1.25f;
                this.timeLeft = 600;
                this.ranged = true;
            }
            else if (this.type == 284)
            {
                this.name = "Party Bullet";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 1;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
                this.scale = 1.3f;
                this.timeLeft = 600;
                this.ranged = true;
            }
            else if (this.type == 285)
            {
                this.name = "Nano Bullet";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 1;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
                this.scale = 1.3f;
                this.timeLeft = 600;
                this.ranged = true;
            }
            else if (this.type == 286)
            {
                this.name = "Explosive Bullet";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 1;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
                this.scale = 1.3f;
                this.timeLeft = 600;
                this.ranged = true;
            }
            else if (this.type == 287)
            {
                this.name = "Golden Bullet";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 1;
                this.light = 0.5f;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
                this.scale = 1.3f;
                this.timeLeft = 600;
                this.ranged = true;
            }
            else if (this.type == 288)
            {
                this.name = "Golden Shower";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 12;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.extraUpdates = 2;
                this.ignoreWater = true;
                this.magic = true;
            }
            else if (this.type == 289)
            {
                this.name = "Confetti";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.timeLeft = 2;
            }
            else if (this.type == 290)
            {
                this.name = "Shadow Beam";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 48;
                this.hostile = true;
                this.magic = true;
                this.extraUpdates = 100;
                this.timeLeft = 100;
                this.penetrate = -1;
            }
            else if (this.type == 291)
            {
                this.name = "Inferno";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 50;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.tileCollide = false;
                this.penetrate = -1;
            }
            else if (this.type == 292)
            {
                this.name = "Inferno";
                this.width = 130;
                this.height = 130;
                this.aiStyle = 50;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.tileCollide = false;
                this.penetrate = -1;
            }
            else if (this.type == 293)
            {
                this.name = "Lost Soul";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 51;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.tileCollide = false;
                this.penetrate = -1;
                this.extraUpdates = 1;
            }
            else if (this.type == 294)
            {
                this.name = "Shadow Beam";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 48;
                this.friendly = true;
                this.magic = true;
                this.extraUpdates = 100;
                this.timeLeft = 300;
                this.penetrate = -1;
            }
            else if (this.type == 295)
            {
                this.name = "Inferno";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 50;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.tileCollide = true;
            }
            else if (this.type == 296)
            {
                this.name = "Inferno";
                this.width = 150;
                this.height = 150;
                this.aiStyle = 50;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.tileCollide = false;
                this.penetrate = -1;
            }
            else if (this.type == 297)
            {
                this.name = "Lost Soul";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 51;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 298)
            {
                this.name = "Spirit Heal";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 52;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.tileCollide = false;
                this.extraUpdates = 3;
            }
            else if (this.type == 299)
            {
                this.name = "Shadowflames";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 1;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.extraUpdates = 2;
                this.magic = true;
                this.ignoreWater = true;
                this.tileCollide = false;
            }
            else if (this.type == 300)
            {
                this.name = "Paladin's Hammer";
                this.width = 38;
                this.height = 38;
                this.aiStyle = 2;
                this.hostile = true;
                this.penetrate = -1;
                this.ignoreWater = true;
                this.tileCollide = false;
            }
            else if (this.type == 301)
            {
                this.name = "Paladin's Hammer";
                this.width = 38;
                this.height = 38;
                this.aiStyle = 3;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
                this.extraUpdates = 2;
            }
            else if (this.type == 302)
            {
                this.name = "Sniper Bullet";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.hostile = true;
                this.penetrate = -1;
                this.light = 0.3f;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 7;
                this.scale = 1.18f;
                this.timeLeft = 300;
                this.ranged = true;
                this.ignoreWater = true;
            }
            else if (this.type == 303)
            {
                this.name = "Rocket";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.hostile = true;
                this.penetrate = -1;
                this.ranged = true;
            }
            else if (this.type == 304)
            {
                this.name = "Vampire Knife";
                this.alpha = (int)byte.MaxValue;
                this.width = 30;
                this.height = 30;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 1;
                this.melee = true;
                this.light = 0.2f;
                this.ignoreWater = true;
                this.extraUpdates = 0;
            }
            else if (this.type == 305)
            {
                this.name = "Vampire Heal";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 52;
                this.alpha = (int)byte.MaxValue;
                this.tileCollide = false;
                this.extraUpdates = 10;
            }
            else if (this.type == 306)
            {
                this.name = "Eater's Bite";
                this.alpha = (int)byte.MaxValue;
                this.width = 14;
                this.height = 14;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 1;
                this.melee = true;
                this.ignoreWater = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 307)
            {
                this.name = "Tiny Eater";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 36;
                this.penetrate = 1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 600;
                this.melee = true;
                this.extraUpdates = 3;
            }
            else if (this.type == 308)
            {
                this.name = "Frost Hydra";
                this.width = 80;
                this.height = 74;
                this.aiStyle = 53;
                this.timeLeft = 7200;
                this.light = 0.25f;
                this.ignoreWater = true;
                this.coldDamage = true;
            }
            else if (this.type == 309)
            {
                this.name = "Frost Blast";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 28;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = 1;
                this.friendly = true;
                this.extraUpdates = 3;
                this.coldDamage = true;
            }
            else if (this.type == 310)
            {
                this.netImportant = true;
                this.name = "Blue Flare";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 33;
                this.friendly = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 36000;
            }
            else if (this.type == 311)
            {
                this.name = "Candy Corn";
                this.width = 10;
                this.height = 12;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 3;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 600;
                this.ranged = true;
            }
            else if (this.type == 312)
            {
                this.name = "Jack 'O Lantern";
                this.alpha = (int)byte.MaxValue;
                this.width = 32;
                this.height = 32;
                this.aiStyle = 1;
                this.friendly = true;
                this.ranged = true;
                this.timeLeft = 300;
            }
            else if (this.type == 313)
            {
                this.netImportant = true;
                this.name = "Spider";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 314)
            {
                this.netImportant = true;
                this.name = "Squashling";
                this.width = 24;
                this.height = 40;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 315)
            {
                this.netImportant = true;
                this.name = "Bat Hook";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 7;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft *= 10;
            }
            else if (this.type == 316)
            {
                this.alpha = (int)byte.MaxValue;
                this.name = "Bat";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 36;
                this.friendly = true;
                this.penetrate = 1;
                this.timeLeft = 600;
                this.magic = true;
            }
            else if (this.type == 317)
            {
                this.netImportant = true;
                this.name = "Raven";
                this.width = 28;
                this.height = 28;
                this.aiStyle = 54;
                this.penetrate = 1;
                this.timeLeft *= 5;
                this.minion = true;
                this.minionSlots = 1f;
            }
            else if (this.type == 318)
            {
                this.name = "Rotten Egg";
                this.width = 12;
                this.height = 14;
                this.aiStyle = 2;
                this.friendly = true;
                this.thrown = true;
            }
            else if (this.type == 319)
            {
                this.netImportant = true;
                this.name = "Black Cat";
                this.width = 36;
                this.height = 30;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 320)
            {
                this.name = "Bloody Machete";
                this.width = 34;
                this.height = 34;
                this.aiStyle = 3;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
            }
            else if (this.type == 321)
            {
                this.name = "Flaming Jack";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 55;
                this.friendly = true;
                this.melee = true;
                this.tileCollide = false;
                this.ignoreWater = true;
            }
            else if (this.type == 322)
            {
                this.netImportant = true;
                this.name = "Wood Hook";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 7;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft *= 10;
            }
            else if (this.type == 323)
            {
                this.penetrate = 10;
                this.name = "Stake";
                this.extraUpdates = 3;
                this.width = 14;
                this.height = 14;
                this.aiStyle = 1;
                this.alpha = (int)byte.MaxValue;
                this.friendly = true;
                this.ranged = true;
                this.scale = 0.8f;
            }
            else if (this.type == 324)
            {
                this.netImportant = true;
                this.name = "Cursed Sapling";
                this.width = 26;
                this.height = 38;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 325)
            {
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.name = "Flaming Wood";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 1;
                this.hostile = true;
                this.tileCollide = false;
            }
            else if (this.type >= 326 && this.type <= 328)
            {
                this.name = "Greek Fire";
                if (this.type == 326)
                {
                    this.width = 14;
                    this.height = 16;
                }
                else if (this.type == 327)
                {
                    this.width = 12;
                    this.height = 14;
                }
                else
                {
                    this.width = 6;
                    this.height = 12;
                }
                this.aiStyle = 14;
                this.hostile = true;
                this.penetrate = -1;
                this.timeLeft = 360;
            }
            else if (this.type == 329)
            {
                this.name = "Flaming Scythe";
                this.width = 80;
                this.height = 80;
                this.light = 0.25f;
                this.aiStyle = 56;
                this.hostile = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft = 420;
            }
            else if (this.type == 330)
            {
                this.name = "Star Anise";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 6;
                this.thrown = true;
            }
            else if (this.type == 331)
            {
                this.netImportant = true;
                this.name = "Candy Cane Hook";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 7;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft *= 10;
            }
            else if (this.type == 332)
            {
                this.netImportant = true;
                this.name = "Christmas Hook";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 7;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft *= 10;
                this.light = 0.5f;
            }
            else if (this.type == 333)
            {
                this.name = "Fruitcake Chakram";
                this.width = 38;
                this.height = 38;
                this.aiStyle = 3;
                this.friendly = true;
                this.scale = 0.9f;
                this.penetrate = -1;
                this.melee = true;
            }
            else if (this.type == 334)
            {
                this.netImportant = true;
                this.name = "Puppy";
                this.width = 28;
                this.height = 28;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 335)
            {
                this.name = "Ornament";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 1;
                this.melee = true;
            }
            else if (this.type == 336)
            {
                this.name = "Pine Needle";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.magic = true;
                this.scale = 0.8f;
                this.extraUpdates = 1;
            }
            else if (this.type == 337)
            {
                this.name = "Blizzard";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.magic = true;
                this.tileCollide = false;
                this.coldDamage = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 338 || this.type == 339 || (this.type == 340 || this.type == 341))
            {
                this.name = "Rocket";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.penetrate = -1;
                this.friendly = true;
                this.ranged = true;
                this.scale = 0.9f;
            }
            else if (this.type == 342)
            {
                this.name = "North Pole";
                this.width = 22;
                this.height = 2;
                this.aiStyle = 19;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.scale = 1.1f;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.coldDamage = true;
            }
            else if (this.type == 343)
            {
                this.alpha = (int)byte.MaxValue;
                this.name = "North Pole";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 57;
                this.friendly = true;
                this.melee = true;
                this.scale = 1.1f;
                this.penetrate = 3;
                this.coldDamage = true;
            }
            else if (this.type == 344)
            {
                this.name = "North Pole";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 1;
                this.friendly = true;
                this.scale = 0.9f;
                this.alpha = (int)byte.MaxValue;
                this.melee = true;
                this.coldDamage = true;
            }
            else if (this.type == 345)
            {
                this.name = "Pine Needle";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.hostile = true;
                this.scale = 0.8f;
            }
            else if (this.type == 346)
            {
                this.name = "Ornament";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 14;
                this.hostile = true;
                this.penetrate = -1;
                this.timeLeft = 300;
            }
            else if (this.type == 347)
            {
                this.name = "Ornament";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 2;
                this.hostile = true;
                this.penetrate = -1;
            }
            else if (this.type == 348)
            {
                this.name = "Frost Wave";
                this.aiStyle = 1;
                this.width = 48;
                this.height = 48;
                this.hostile = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.coldDamage = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 349)
            {
                this.name = "Frost Shard";
                this.aiStyle = 1;
                this.width = 12;
                this.height = 12;
                this.hostile = true;
                this.penetrate = -1;
                this.coldDamage = true;
            }
            else if (this.type == 350)
            {
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.name = "Missile";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 1;
                this.hostile = true;
                this.tileCollide = false;
                this.timeLeft /= 2;
            }
            else if (this.type == 351)
            {
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.name = "Present";
                this.width = 24;
                this.height = 24;
                this.aiStyle = 58;
                this.hostile = true;
                this.tileCollide = false;
            }
            else if (this.type == 352)
            {
                this.name = "Spike";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 14;
                this.hostile = true;
                this.penetrate = -1;
                this.timeLeft /= 3;
            }
            else if (this.type == 353)
            {
                this.netImportant = true;
                this.name = "Baby Grinch";
                this.width = 18;
                this.height = 28;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 354)
            {
                this.name = "Crimsand Ball";
                this.knockBack = 6f;
                this.width = 10;
                this.height = 10;
                this.aiStyle = 10;
                this.friendly = true;
                this.penetrate = -1;
                this.extraUpdates = 1;
            }
            else if (this.type == 355)
            {
                this.name = "Venom Fang";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 1;
                this.alpha = (int)byte.MaxValue;
                this.friendly = true;
                this.magic = true;
                this.penetrate = 7;
            }
            else if (this.type == 356)
            {
                this.name = "Spectre Wrath";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 59;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.tileCollide = false;
                this.extraUpdates = 3;
            }
            else if (this.type == 357)
            {
                this.name = "Pulse Bolt";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 6;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
                this.scale = 1.2f;
                this.timeLeft = 600;
                this.ranged = true;
            }
            else if (this.type == 358)
            {
                this.name = "Water Gun";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 60;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.extraUpdates = 2;
                this.ignoreWater = true;
            }
            else if (this.type == 359)
            {
                this.name = "Frost Bolt";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 28;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.penetrate = 2;
                this.friendly = true;
                this.coldDamage = true;
            }
            else if (this.type >= 360 && this.type <= 366 || (this.type == 381 || this.type == 382))
            {
                this.name = "Bobber";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 61;
                this.penetrate = -1;
                this.bobber = true;
            }
            else if (this.type == 367)
            {
                this.name = "Obsidian Swordfish";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 19;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.scale = 1.1f;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 368)
            {
                this.name = "Swordfish";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 19;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 369)
            {
                this.name = "Sawtooth Shark";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 370)
            {
                this.name = "Love Potion";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 1;
            }
            else if (this.type == 371)
            {
                this.name = "Foul Potion";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 1;
            }
            else if (this.type == 372)
            {
                this.name = "Fish Hook";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 7;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft *= 10;
            }
            else if (this.type == 373)
            {
                this.netImportant = true;
                this.name = "Hornet";
                this.width = 24;
                this.height = 26;
                this.aiStyle = 62;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.minion = true;
                this.minionSlots = 1f;
                this.tileCollide = false;
                this.ignoreWater = true;
            }
            else if (this.type == 374)
            {
                this.name = "Hornet Stinger";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 0;
                this.friendly = true;
                this.penetrate = 1;
                this.aiStyle = 1;
                this.tileCollide = true;
                this.scale *= 0.9f;
            }
            else if (this.type == 375)
            {
                this.netImportant = true;
                this.name = "Flying Imp";
                this.width = 34;
                this.height = 26;
                this.aiStyle = 62;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.minion = true;
                this.minionSlots = 1f;
                this.tileCollide = false;
                this.ignoreWater = true;
            }
            else if (this.type == 376)
            {
                this.name = "Imp Fireball";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 0;
                this.friendly = true;
                this.penetrate = -1;
                this.aiStyle = 1;
                this.tileCollide = true;
                this.timeLeft = 100;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 1;
            }
            else if (this.type == 377)
            {
                this.name = "Spider Turret";
                this.width = 66;
                this.height = 50;
                this.aiStyle = 53;
                this.timeLeft = 7200;
                this.ignoreWater = true;
            }
            else if (this.type == 378)
            {
                this.name = "Spider Egg";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 14;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft = 60;
                this.scale = 0.9f;
            }
            else if (this.type == 379)
            {
                this.name = "Baby Spider";
                this.width = 14;
                this.height = 10;
                this.aiStyle = 63;
                this.friendly = true;
                this.timeLeft = 300;
                this.penetrate = 1;
            }
            else if (this.type == 380)
            {
                this.netImportant = true;
                this.name = "Zephyr Fish";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 383)
            {
                this.name = "Anchor";
                this.width = 34;
                this.height = 34;
                this.aiStyle = 3;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
            }
            else if (this.type == 384)
            {
                this.name = "Sharknado";
                this.width = 150;
                this.height = 42;
                this.hostile = true;
                this.penetrate = -1;
                this.aiStyle = 64;
                this.tileCollide = false;
                this.ignoreWater = true;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 540;
            }
            else if (this.type == 385)
            {
                this.name = "Sharknado Bolt";
                this.width = 30;
                this.height = 30;
                this.hostile = true;
                this.penetrate = -1;
                this.aiStyle = 65;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 300;
            }
            else if (this.type == 386)
            {
                this.name = "Cthulunado";
                this.width = 150;
                this.height = 42;
                this.hostile = true;
                this.penetrate = -1;
                this.aiStyle = 64;
                this.tileCollide = false;
                this.ignoreWater = true;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 840;
            }
            else if (this.type == 387)
            {
                this.netImportant = true;
                this.name = "Retanimini";
                this.width = 40;
                this.height = 20;
                this.aiStyle = 66;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.minion = true;
                this.minionSlots = 0.5f;
                this.tileCollide = false;
                this.ignoreWater = true;
                this.friendly = true;
            }
            else if (this.type == 388)
            {
                this.netImportant = true;
                this.name = "Spazmamini";
                this.width = 40;
                this.height = 20;
                this.aiStyle = 66;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.minion = true;
                this.minionSlots = 0.5f;
                this.tileCollide = false;
                this.ignoreWater = true;
                this.friendly = true;
            }
            else if (this.type == 389)
            {
                this.name = "Mini Retina Laser";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 3;
                this.light = 0.75f;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
                this.scale = 1.2f;
                this.timeLeft = 600;
            }
            else if (this.type == 390 || this.type == 391 || this.type == 392)
            {
                this.name = "Venom Spider";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 26;
                this.penetrate = -1;
                this.netImportant = true;
                this.timeLeft *= 5;
                this.minion = true;
                this.minionSlots = 0.75f;
                if (this.type == 391)
                    this.name = "Jumper Spider";
                if (this.type == 392)
                    this.name = "Dangerous Spider";
            }
            else if (this.type == 393 || this.type == 394 || this.type == 395)
            {
                this.name = "One Eyed Pirate";
                this.width = 20;
                this.height = 30;
                this.aiStyle = 67;
                this.penetrate = -1;
                this.netImportant = true;
                this.timeLeft *= 5;
                this.minion = true;
                this.minionSlots = 1f;
                if (this.type == 394)
                    this.name = "Soulscourge Pirate";
                if (this.type == 395)
                    this.name = "Pirate Captain";
            }
            else if (this.type == 396)
            {
                this.name = "Slime Hook";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 7;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft *= 10;
                this.alpha = 100;
            }
            else if (this.type == 397)
            {
                this.name = "Sticky Grenade";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.thrown = true;
                this.tileCollide = false;
            }
            else if (this.type == 398)
            {
                this.netImportant = true;
                this.name = "Mini Minotaur";
                this.width = 18;
                this.height = 38;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 399)
            {
                this.name = "Molotov Cocktail";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 68;
                this.friendly = true;
                this.penetrate = 1;
                this.alpha = (int)byte.MaxValue;
                this.thrown = true;
                this.noEnchantments = true;
            }
            else if (this.type >= 400 && this.type <= 402)
            {
                this.name = "Molotov Fire";
                if (this.type == 400)
                {
                    this.width = 14;
                    this.height = 16;
                }
                else if (this.type == 401)
                {
                    this.width = 12;
                    this.height = 14;
                }
                else
                {
                    this.width = 6;
                    this.height = 12;
                }
                this.penetrate = 3;
                this.aiStyle = 14;
                this.friendly = true;
                this.timeLeft = 360;
                this.ranged = true;
                this.noEnchantments = true;
            }
            else if (this.type == 403)
            {
                this.netImportant = true;
                this.name = "Track Hook";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 7;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft *= 10;
            }
            else if (this.type == 404)
            {
                this.name = "Flairon";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 69;
                this.friendly = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.melee = true;
            }
            else if (this.type == 405)
            {
                this.name = "Flairon Bubble";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 70;
                this.friendly = true;
                this.penetrate = 1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 90;
                this.melee = true;
                this.noEnchantments = true;
            }
            else if (this.type == 406)
            {
                this.name = "Slime Gun";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 60;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.extraUpdates = 2;
                this.ignoreWater = true;
            }
            else if (this.type == 407)
            {
                this.netImportant = true;
                this.name = "Tempest";
                this.width = 28;
                this.height = 40;
                this.aiStyle = 62;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.minion = true;
                this.friendly = true;
                this.minionSlots = 1f;
                this.tileCollide = false;
                this.ignoreWater = true;
            }
            else if (this.type == 408)
            {
                this.name = "Mini Sharkron";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
            }
            else if (this.type == 409)
            {
                this.name = "Typhoon";
                this.width = 30;
                this.height = 30;
                this.penetrate = -1;
                this.aiStyle = 71;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 360;
                this.friendly = true;
                this.tileCollide = true;
                this.extraUpdates = 2;
                this.magic = true;
                this.ignoreWater = true;
            }
            else if (this.type == 410)
            {
                this.name = "Bubble";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 72;
                this.friendly = true;
                this.penetrate = 1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 50;
                this.magic = true;
                this.ignoreWater = true;
            }
            else if (this.type >= 411 && this.type <= 414)
            {
                switch (this.type)
                {
                    case 411:
                        this.name = "Copper Coins";
                        break;
                    case 412:
                        this.name = "Silver Coins";
                        break;
                    case 413:
                        this.name = "Gold Coins";
                        break;
                    case 414:
                        this.name = "Platinum Coins";
                        break;
                }
                this.width = 10;
                this.height = 10;
                this.aiStyle = 10;
            }
            else if (this.type == 415 || this.type == 416 || (this.type == 417 || this.type == 418))
            {
                this.name = "Rocket";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 34;
                this.friendly = true;
                this.ranged = true;
                this.timeLeft = 45;
            }
            else if (this.type >= 419 && this.type <= 422)
            {
                this.name = "Firework Fountain";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 73;
                this.friendly = true;
            }
            else if (this.type == 423)
            {
                this.netImportant = true;
                this.name = "UFO";
                this.width = 28;
                this.height = 28;
                this.aiStyle = 62;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.minion = true;
                this.friendly = true;
                this.minionSlots = 1f;
                this.ignoreWater = true;
            }
            else if (this.type >= 424 && this.type <= 426)
            {
                this.name = "Meteor";
                this.width = 24;
                this.height = 24;
                this.aiStyle = 1;
                this.friendly = true;
                this.magic = true;
                this.tileCollide = false;
                this.extraUpdates = 2;
            }
            else if (this.type == 427)
            {
                this.name = "Vortex Chainsaw";
                this.width = 22;
                this.height = 56;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.glowMask = (short)2;
            }
            else if (this.type == 428)
            {
                this.name = "Vortex Drill";
                this.width = 26;
                this.height = 54;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.glowMask = (short)3;
            }
            else if (this.type == 429)
            {
                this.name = "Nebula Chainsaw";
                this.width = 18;
                this.height = 56;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.glowMask = (short)7;
            }
            else if (this.type == 430)
            {
                this.name = "Nebula Drill";
                this.width = 30;
                this.height = 54;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.glowMask = (short)8;
            }
            else if (this.type == 431)
            {
                this.name = "Solar Flare Chainsaw";
                this.width = 28;
                this.height = 64;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 432)
            {
                this.name = "Solar Flare Drill";
                this.width = 30;
                this.height = 54;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
            }
            else if (this.type == 610)
            {
                this.name = "Stardust Chainsaw";
                this.width = 28;
                this.height = 64;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.glowMask = (short)179;
            }
            else if (this.type == 609)
            {
                this.name = "Stardust Drill";
                this.width = 30;
                this.height = 54;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.glowMask = (short)180;
            }
            else if (this.type == 433)
            {
                this.name = "UFO Ray";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 48;
                this.friendly = true;
                this.extraUpdates = 100;
                this.timeLeft = 100;
                this.ignoreWater = true;
            }
            else if (this.type == 434)
            {
                this.name = "Scutlix Laser";
                this.width = 1;
                this.height = 1;
                this.aiStyle = 74;
                this.friendly = true;
                this.extraUpdates = 100;
                this.penetrate = -1;
            }
            else if (this.type == 435)
            {
                this.name = "Electric Bolt";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.hostile = true;
                this.ignoreWater = true;
            }
            else if (this.type == 436)
            {
                this.name = "Brain Scrambling Bolt";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.hostile = true;
                this.ignoreWater = true;
            }
            else if (this.type == 437)
            {
                this.name = "Gigazapper Spearhead";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.hostile = true;
                this.extraUpdates = 2;
                this.ignoreWater = true;
            }
            else if (this.type == 438)
            {
                this.name = "Laser Ray";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 1;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 3;
                this.ignoreWater = true;
            }
            else if (this.type == 439)
            {
                this.name = "Laser Machinegun";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 75;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.magic = true;
                this.ignoreWater = true;
            }
            else if (this.type == 440)
            {
                this.name = "Laser";
                this.width = 5;
                this.height = 5;
                this.aiStyle = 1;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
                this.scale = 1f;
                this.timeLeft = 600;
                this.magic = true;
                this.ignoreWater = true;
            }
            else if (this.type == 441)
            {
                this.name = "Scutlix Crosshair";
                this.width = 1;
                this.height = 1;
                this.aiStyle = 76;
                this.ignoreWater = true;
                this.tileCollide = false;
            }
            else if (this.type == 442)
            {
                this.name = "Electrosphere Missile";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 1;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.scale = 1f;
                this.timeLeft = 600;
                this.ranged = true;
            }
            else if (this.type == 443)
            {
                this.name = "Electrosphere";
                this.width = 80;
                this.height = 80;
                this.aiStyle = 77;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.scale = 1f;
                this.ranged = true;
                this.ignoreWater = true;
                this.tileCollide = false;
                this.penetrate = -1;
            }
            else if (this.type == 444)
            {
                this.name = "Xenopopper";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 78;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.scale = 1f;
                this.ranged = true;
                this.ignoreWater = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 445)
            {
                this.name = "Laser Drill";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 75;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.melee = true;
                this.ignoreWater = true;
                this.ownerHitCheck = true;
            }
            else if (this.type == 446)
            {
                this.netImportant = true;
                this.name = "Anti-Gravity Hook";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 7;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft *= 10;
                this.light = 0.7f;
            }
            else if (this.type == 447)
            {
                this.name = "Martian Deathray";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 79;
                this.hostile = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.ignoreWater = true;
                this.timeLeft = 240;
            }
            else if (this.type == 448)
            {
                this.name = "Martian Rocket";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 80;
                this.hostile = true;
                this.penetrate = -1;
                this.tileCollide = false;
            }
            else if (this.type == 449)
            {
                this.name = "Saucer Laser";
                this.width = 5;
                this.height = 5;
                this.aiStyle = 1;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 1;
                this.scale = 1f;
                this.timeLeft = 600;
                this.ignoreWater = true;
            }
            else if (this.type == 450)
            {
                this.name = "Saucer Scrap";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 14;
                this.hostile = true;
                this.penetrate = -1;
                this.timeLeft = 360;
            }
            else if (this.type == 451)
            {
                this.name = "Influx Waver";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 81;
                this.melee = true;
                this.penetrate = 3;
                this.light = 0.2f;
                this.alpha = (int)byte.MaxValue;
                this.friendly = true;
            }
            else if (this.type == 452)
            {
                this.name = "Phantasmal Eye";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 82;
                this.hostile = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 600;
            }
            else if (this.type == 453)
            {
                this.name = "Drill Crosshair";
                this.width = 1;
                this.height = 1;
                this.aiStyle = 76;
                this.ignoreWater = true;
                this.tileCollide = false;
            }
            else if (this.type == 454)
            {
                this.name = "Phantasmal Sphere";
                this.width = 46;
                this.height = 46;
                this.aiStyle = 83;
                this.hostile = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 600;
                this.tileCollide = false;
            }
            else if (this.type == 455)
            {
                this.name = "Phantasmal Deathray";
                this.width = 36;
                this.height = 36;
                this.aiStyle = 84;
                this.hostile = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 600;
                this.tileCollide = false;
            }
            else if (this.type == 456)
            {
                this.name = "Moon Leech";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 85;
                this.hostile = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 600;
                this.tileCollide = false;
            }
            else if (this.type == 459)
            {
                this.name = "Charged Blaster Orb";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 1;
                this.friendly = true;
                this.magic = true;
                this.alpha = (int)byte.MaxValue;
                this.scale = 1f;
                this.ignoreWater = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 460)
            {
                this.name = "Charged Blaster Cannon";
                this.width = 14;
                this.height = 18;
                this.aiStyle = 75;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.magic = true;
                this.ignoreWater = true;
            }
            else if (this.type == 461)
            {
                this.name = "Charged Blaster Laser";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 84;
                this.friendly = true;
                this.magic = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.tileCollide = false;
                this.hide = true;
            }
            else if (this.type == 462)
            {
                this.name = "Phantasmal Bolt";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 1;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 3;
                this.ignoreWater = true;
                this.tileCollide = false;
            }
            else if (this.type == 463)
            {
                this.name = "Vicious Powder";
                this.width = 48;
                this.height = 48;
                this.aiStyle = 6;
                this.friendly = true;
                this.tileCollide = false;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
            }
            else if (this.type == 464)
            {
                this.name = "Ice Mist";
                this.width = 60;
                this.height = 60;
                this.aiStyle = 86;
                this.hostile = true;
                this.tileCollide = false;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
            }
            else if (this.type == 467)
            {
                this.name = "Fireball";
                this.width = 40;
                this.height = 40;
                this.aiStyle = 1;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 468)
            {
                this.name = "Shadow Fireball";
                this.width = 40;
                this.height = 40;
                this.aiStyle = 1;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 465)
            {
                this.name = "Lightning Orb";
                this.width = 80;
                this.height = 80;
                this.aiStyle = 88;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.tileCollide = false;
            }
            else if (this.type == 466)
            {
                this.name = "Lightning Orb Arc";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 88;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.tileCollide = true;
                this.extraUpdates = 4;
                this.timeLeft = 120 * (this.extraUpdates + 1);
            }
            else if (this.type == 491)
            {
                this.name = "Flying Knife";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 9;
                this.friendly = true;
                this.melee = true;
                this.penetrate = -1;
            }
            else if (this.type == 500)
            {
                this.name = "Crimson Heart";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 67;
                this.penetrate = -1;
                this.netImportant = true;
                this.timeLeft *= 5;
                this.friendly = true;
                this.ignoreWater = true;
                this.scale = 0.8f;
            }
            else if (this.type == 499)
            {
                this.netImportant = true;
                this.name = "Baby Face Monster";
                this.width = 34;
                this.height = 34;
                this.aiStyle = 26;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 469)
            {
                this.alpha = (int)byte.MaxValue;
                this.arrow = true;
                this.name = "Bee Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.ranged = true;
            }
            else if (this.type == 470)
            {
                this.name = "Sticky Dynamite";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
            }
            else if (this.type == 471)
            {
                this.name = "Bone";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 2;
                this.scale = 1.2f;
                this.hostile = true;
                this.ranged = true;
            }
            else if (this.type == 472)
            {
                this.name = "Web spit";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 0;
                this.hostile = true;
                this.penetrate = -1;
                this.aiStyle = 1;
                this.tileCollide = true;
                this.timeLeft = 50;
            }
            else if (this.type == 474)
            {
                this.arrow = true;
                this.name = "Bone Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.ranged = true;
            }
            else if (this.type == 473)
            {
                this.netImportant = true;
                this.name = "Spelunker Glowstick";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 14;
                this.penetrate = -1;
                this.alpha = 75;
                this.light = 1f;
                this.timeLeft *= 2;
            }
            else if (this.type == 475)
            {
                this.name = "Vine Rope Coil";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 35;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft = 400;
            }
            else if (this.type == 476)
            {
                this.name = "Soul Drain";
                this.width = 200;
                this.height = 200;
                this.aiStyle = -1;
                this.friendly = true;
                this.tileCollide = false;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.timeLeft = 3;
            }
            else if (this.type == 477)
            {
                this.alpha = (int)byte.MaxValue;
                this.name = "Crystal Dart";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 7;
                this.extraUpdates = 1;
                this.ranged = true;
            }
            else if (this.type == 478)
            {
                this.alpha = (int)byte.MaxValue;
                this.name = "Cursed Dart";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 1;
                this.friendly = true;
                this.timeLeft = 300;
                this.ranged = true;
            }
            else if (this.type == 479)
            {
                this.alpha = (int)byte.MaxValue;
                this.name = "Ichor Dart";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 1;
                this.friendly = true;
                this.ranged = true;
            }
            else if (this.type == 480)
            {
                this.alpha = (int)byte.MaxValue;
                this.name = "Cursed Flame";
                this.width = 12;
                this.height = 12;
                this.penetrate = 3;
                this.aiStyle = 14;
                this.friendly = true;
                this.timeLeft = 120;
                this.ranged = true;
                this.noEnchantments = true;
            }
            else if (this.type == 481)
            {
                this.name = "Chain Guillotine";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 13;
                this.friendly = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.melee = true;
                this.extraUpdates = 0;
            }
            else if (this.type == 482)
            {
                this.name = "Cursed Flames";
                this.width = 16;
                this.height = 200;
                this.aiStyle = 87;
                this.friendly = true;
                this.tileCollide = false;
                this.penetrate = 20;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.timeLeft = 2700;
            }
            else if (this.type == 483)
            {
                this.arrow = true;
                this.name = "Seedler";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 14;
                this.friendly = true;
                this.ranged = true;
            }
            else if (this.type == 484)
            {
                this.arrow = true;
                this.name = "Seedler";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.ranged = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 485)
            {
                this.arrow = true;
                this.name = "Hellwing";
                this.width = 24;
                this.height = 24;
                this.aiStyle = 1;
                this.friendly = true;
                this.ranged = true;
                this.penetrate = -1;
            }
            else if (this.type >= 486 && this.type <= 489)
            {
                this.name = "Hook";
                if (this.type == 486)
                {
                    this.width = 12;
                    this.height = 12;
                }
                else if (this.type == 487)
                {
                    this.width = 22;
                    this.height = 22;
                }
                else if (this.type == 488)
                {
                    this.width = 12;
                    this.height = 12;
                    this.light = 0.3f;
                }
                else if (this.type == 489)
                {
                    this.width = 20;
                    this.height = 16;
                }
                this.aiStyle = 7;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft *= 10;
            }
            else if (this.type == 492)
            {
                this.netImportant = true;
                this.name = "Magic Lantern";
                this.width = 18;
                this.height = 32;
                this.aiStyle = 90;
                this.friendly = true;
                this.penetrate = -1;
                this.timeLeft *= 5;
            }
            else if (this.type == 490)
            {
                this.name = "Lightning Ritual";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 89;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.tileCollide = false;
                this.timeLeft = 600;
                this.netImportant = true;
            }
            else if (this.type == 493 || this.type == 494)
            {
                this.name = "Crystal Vile Shard";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 4;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.magic = true;
                this.light = 0.2f;
            }
            else if (this.type == 495)
            {
                this.arrow = true;
                this.name = "Shadowflame Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.ranged = true;
                this.penetrate = 3;
            }
            else if (this.type == 496)
            {
                this.alpha = (int)byte.MaxValue;
                this.name = "Shadowflame";
                this.width = 40;
                this.height = 40;
                this.aiStyle = 91;
                this.friendly = true;
                this.magic = true;
                this.MaxUpdates = 3;
                this.penetrate = 3;
            }
            else if (this.type == 497)
            {
                this.name = "Shadowflame Knife";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 3;
                this.melee = true;
            }
            else if (this.type == 498)
            {
                this.name = "Nail";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 1;
                this.hostile = true;
                this.penetrate = -1;
                this.timeLeft = 180;
            }
            else if (this.type == 501)
            {
                this.name = "Flask";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 2;
                this.scale = 1.1f;
                this.hostile = true;
                this.ranged = true;
            }
            else if (this.type == 502)
            {
                this.name = "Meowmere";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 8;
                this.friendly = true;
                this.melee = true;
                this.penetrate = 5;
            }
            else if (this.type == 503)
            {
                this.name = "Star Wrath";
                this.width = 24;
                this.height = 24;
                this.aiStyle = 5;
                this.friendly = true;
                this.penetrate = 2;
                this.alpha = (int)byte.MaxValue;
                this.tileCollide = false;
                this.melee = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 504)
            {
                this.name = "Spark";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 2;
                this.friendly = true;
                this.magic = true;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = 2;
            }
            else if (this.type == 507)
            {
                this.name = "Javelin";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 1;
                this.friendly = true;
                this.melee = true;
                this.penetrate = 3;
            }
            else if (this.type == 508)
            {
                this.name = "Javelin";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 1;
                this.hostile = true;
                this.melee = true;
                this.penetrate = -1;
            }
            else if (this.type == 509)
            {
                this.name = "Butcher's Chainsaw";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 20;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ownerHitCheck = true;
                this.melee = true;
                this.scale = 1.2f;
            }
            else if (this.type == 510)
            {
                this.name = "Toxic Flask";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 1;
                this.magic = true;
            }
            else if (this.type == 511)
            {
                this.name = "Toxic Cloud";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 92;
                this.friendly = true;
                this.penetrate = -1;
                this.scale = 1.1f;
                this.magic = true;
            }
            else if (this.type == 512)
            {
                this.name = "Toxic Cloud";
                this.width = 40;
                this.height = 38;
                this.aiStyle = 92;
                this.friendly = true;
                this.penetrate = -1;
                this.scale = 1.1f;
                this.magic = true;
            }
            else if (this.type == 513)
            {
                this.name = "Toxic Cloud";
                this.width = 30;
                this.height = 28;
                this.aiStyle = 92;
                this.friendly = true;
                this.penetrate = -1;
                this.scale = 1.1f;
                this.magic = true;
            }
            else if (this.type == 514)
            {
                this.name = "Nail";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 93;
                this.friendly = true;
                this.penetrate = 3;
                this.alpha = (int)byte.MaxValue;
                this.ranged = true;
            }
            else if (this.type == 515)
            {
                this.netImportant = true;
                this.name = "Bouncy Glowstick";
                this.width = 6;
                this.height = 6;
                this.aiStyle = 14;
                this.penetrate = -1;
                this.alpha = 75;
                this.light = 1f;
                this.timeLeft *= 5;
            }
            else if (this.type == 516)
            {
                this.name = "Bouncy Bomb";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
            }
            else if (this.type == 517)
            {
                this.name = "Bouncy Grenade";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.thrown = true;
            }
            else if (this.type == 518)
            {
                this.name = "Coin Portal";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 94;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.tileCollide = false;
                this.ignoreWater = true;
            }
            else if (this.type == 519)
            {
                this.name = "Bomb Fish";
                this.width = 24;
                this.height = 24;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
            }
            else if (this.type == 520)
            {
                this.name = "Frost Daggerfish";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 3;
                this.thrown = true;
            }
            else if (this.type == 521)
            {
                this.name = "Crystal Charge";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 29;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.penetrate = 1;
                this.friendly = true;
            }
            else if (this.type == 522)
            {
                this.name = "Crystal Charge";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 29;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.penetrate = 1;
                this.friendly = true;
            }
            else if (this.type == 523)
            {
                this.name = "Toxic Bubble";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 95;
                this.alpha = (int)byte.MaxValue;
                this.ranged = true;
                this.penetrate = 1;
                this.friendly = true;
            }
            else if (this.type == 524)
            {
                this.name = "Ichor Splash";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 96;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.ignoreWater = true;
                this.melee = true;
                this.extraUpdates = 5;
            }
            else if (this.type == 525)
            {
                this.name = "Flying Piggy Bank";
                this.width = 30;
                this.height = 24;
                this.aiStyle = 97;
                this.tileCollide = false;
                this.timeLeft = 10800;
            }
            else if (this.type == 526)
            {
                this.name = "Energy";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 98;
                this.tileCollide = false;
                this.timeLeft = 120;
                this.alpha = (int)byte.MaxValue;
            }
            else if (this.type >= 527 && this.type <= 531)
            {
                this.name = "Tombstone";
                this.knockBack = 12f;
                this.width = 24;
                this.height = 24;
                this.aiStyle = 17;
                this.penetrate = -1;
            }
            else if (this.type == 532)
            {
                this.name = "XBone";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 1;
                this.scale = 1f;
                this.friendly = true;
                this.thrown = true;
                this.penetrate = 3;
                this.extraUpdates = 1;
            }
            else if (this.type == 533)
            {
                this.netImportant = true;
                this.name = "Deadly Sphere";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 66;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.minion = true;
                this.minionSlots = 1f;
                this.tileCollide = false;
                this.ignoreWater = true;
                this.friendly = true;
            }
            else if (this.type == 534)
            {
                this.extraUpdates = 0;
                this.name = "Yoyo";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 99;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
                this.scale = 1f;
            }
            else if (this.type >= 541 && this.type <= 555)
            {
                this.extraUpdates = 0;
                this.name = "Yoyo";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 99;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
                this.scale = 1f;
                if (this.type == 547)
                    this.scale = 1.1f;
                if (this.type == 554)
                    this.scale = 1.2f;
                if (this.type == 555)
                    this.scale = 1.15f;
                if (this.type == 551 || this.type == 550)
                    this.scale = 1.1f;
            }
            else if (this.type >= 562 && this.type <= 564)
            {
                this.extraUpdates = 0;
                this.name = "Yoyo";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 99;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
                this.scale = 1f;
                if (this.type == 563)
                    this.scale = 1.05f;
                if (this.type == 564)
                    this.scale = 1.075f;
            }
            else if (this.type == 603)
            {
                this.extraUpdates = 0;
                this.name = "Terrarian";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 99;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
                this.scale = 1.15f;
            }
            else if (this.type == 604)
            {
                this.extraUpdates = 0;
                this.name = "Terrarian";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 115;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
                this.scale = 1.2f;
            }
            else if (this.type >= 556 && this.type <= 561)
            {
                this.extraUpdates = 0;
                this.name = "Counterweight";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 99;
                this.friendly = true;
                this.penetrate = -1;
                this.melee = true;
                this.scale = 1f;
                this.counterweight = true;
            }
            else if (this.type == 535)
            {
                this.name = "Medusa Ray";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 100;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.magic = true;
                this.ignoreWater = true;
            }
            else if (this.type == 536)
            {
                this.name = "Medusa Ray";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 101;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.magic = true;
                this.ignoreWater = true;
            }
            else if (this.type == 537)
            {
                this.name = "Stardust Laser";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 84;
                this.hostile = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 240;
                this.tileCollide = false;
            }
            else if (this.type == 538)
            {
                this.name = "Twinkle";
                this.width = 12;
                this.height = 12;
                this.aiStyle = 14;
                this.hostile = true;
                this.penetrate = -1;
                this.timeLeft = 120;
                this.extraUpdates = 1;
                this.alpha = (int)byte.MaxValue;
            }
            else if (this.type == 539)
            {
                this.name = "Flow Invader";
                this.width = 18;
                this.height = 30;
                this.aiStyle = 102;
                this.hostile = true;
                this.penetrate = -1;
                this.timeLeft = 600;
            }
            else if (this.type == 540)
            {
                this.name = "Starmark";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 103;
                this.hostile = true;
                this.penetrate = -1;
                this.timeLeft = 300;
                this.alpha = (int)byte.MaxValue;
            }
            else if (this.type == 565)
            {
                this.name = "Brain of Confusion";
                this.width = 28;
                this.height = 28;
                this.aiStyle = 104;
                this.penetrate = -1;
                this.tileCollide = false;
                this.ignoreWater = true;
                this.alpha = (int)byte.MaxValue;
                this.scale = 0.8f;
            }
            else if (this.type == 566)
            {
                this.name = "Bee";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 36;
                this.friendly = true;
                this.penetrate = 4;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 660;
                this.extraUpdates = 3;
            }
            else if (this.type == 567 || this.type == 568)
            {
                this.name = "Spore";
                if (this.type == 567)
                {
                    this.width = 14;
                    this.height = 14;
                }
                else
                {
                    this.width = 16;
                    this.height = 16;
                }
                this.aiStyle = 105;
                this.friendly = true;
                this.penetrate = 1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 3600;
                this.tileCollide = false;
                this.ignoreWater = true;
            }
            else if (this.type >= 569 && this.type <= 571)
            {
                this.name = "Spore";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 106;
                this.friendly = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 3600;
                this.tileCollide = false;
                this.ignoreWater = true;
            }
            else if (this.type == 575)
            {
                this.name = "Nebula Sphere";
                this.width = 24;
                this.height = 24;
                this.aiStyle = 107;
                this.hostile = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft = 420;
                this.alpha = (int)byte.MaxValue;
            }
            else if (this.type == 573)
            {
                this.name = "Nebula Piercer";
                this.width = 18;
                this.height = 30;
                this.aiStyle = 102;
                this.hostile = true;
                this.penetrate = -1;
                this.timeLeft = 600;
            }
            else if (this.type == 574)
            {
                this.name = "Nebula Eye";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 102;
                this.hostile = true;
                this.timeLeft = 600;
                this.tileCollide = false;
            }
            else if (this.type == 572)
            {
                this.name = "Poison Spit";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.friendly = false;
                this.hostile = true;
            }
            else if (this.type == 576)
            {
                this.name = "Nebula Laser";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.hostile = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
                this.scale = 1.2f;
                this.timeLeft = 600;
            }
            else if (this.type == 577)
            {
                this.name = "Vortex Laser";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.hostile = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
                this.scale = 1.2f;
                this.timeLeft = 600;
            }
            else if (this.type == 578 || this.type == 579)
            {
                this.name = "Vortex";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 108;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.tileCollide = false;
                this.ignoreWater = true;
                this.hostile = true;
                this.hide = true;
            }
            else if (this.type == 580)
            {
                this.name = "Vortex Lightning";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 88;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.tileCollide = true;
                this.extraUpdates = 4;
                this.timeLeft = 600;
            }
            else if (this.type == 581)
            {
                this.name = "Alien Goop";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = -1;
                this.friendly = false;
                this.hostile = true;
            }
            else if (this.type == 582)
            {
                this.name = "Mechanic's Wrench";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 109;
                this.friendly = true;
                this.penetrate = -1;
                this.MaxUpdates = 2;
            }
            else if (this.type == 583)
            {
                this.name = "Syringe";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 2;
                this.friendly = true;
                this.scale = 0.8f;
            }
            else if (this.type == 589)
            {
                this.name = "Christmas Ornament";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 2;
                this.friendly = true;
            }
            else if (this.type == 584)
            {
                this.name = "Syringe";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 110;
                this.friendly = true;
                this.scale = 0.8f;
                this.penetrate = 3;
            }
            else if (this.type == 585)
            {
                this.name = "Skull";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 1;
                this.alpha = (int)byte.MaxValue;
                this.friendly = true;
                this.penetrate = 3;
            }
            else if (this.type == 586)
            {
                this.name = "Dryad's ward";
                this.width = 26;
                this.height = 26;
                this.aiStyle = 111;
                this.alpha = (int)byte.MaxValue;
                this.friendly = true;
                this.penetrate = -1;
            }
            else if (this.type == 587)
            {
                this.name = "Paintball";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.alpha = (int)byte.MaxValue;
                this.friendly = true;
            }
            else if (this.type == 588)
            {
                this.name = "Confetti Grenade";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
            }
            else if (this.type == 590)
            {
                this.name = "Truffle Spore";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 112;
                this.friendly = true;
                this.penetrate = 1;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 900;
                this.tileCollide = false;
                this.ignoreWater = true;
            }
            else if (this.type == 591)
            {
                this.name = "Minecart Laser";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 101;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ignoreWater = true;
            }
            else if (this.type == 592)
            {
                this.name = "Laser Ray";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 1;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 3;
                this.ignoreWater = true;
            }
            else if (this.type == 593)
            {
                this.name = "Prophecy's End";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 1;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 1;
                this.ignoreWater = true;
            }
            else if (this.type == 594)
            {
                this.name = "Blowup Smoke";
                this.width = 40;
                this.height = 40;
                this.aiStyle = 1;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
            }
            else if (this.type == 595)
            {
                this.name = "Arkhalis";
                this.width = 68;
                this.height = 64;
                this.aiStyle = 75;
                this.friendly = true;
                this.tileCollide = false;
                this.melee = true;
                this.penetrate = -1;
                this.ownerHitCheck = true;
            }
            else if (this.type == 596)
            {
                this.name = "Desert Spirit's Curse";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 107;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.timeLeft = 180;
                this.tileCollide = false;
            }
            else if (this.type == 597)
            {
                this.name = "Ember Bolt";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 29;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.penetrate = 2;
                this.friendly = true;
            }
            else if (this.type == 598)
            {
                this.name = "Bone Javelin";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 113;
                this.friendly = true;
                this.melee = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.hide = true;
            }
            else if (this.type == 599)
            {
                this.name = "Bone Dagger";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 2;
                this.friendly = true;
                this.penetrate = 6;
                this.thrown = true;
            }
            else if (this.type == 600)
            {
                this.name = "Portal Gun";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 75;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ignoreWater = true;
            }
            else if (this.type == 601)
            {
                this.name = "Portal Bolt";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.alpha = (int)byte.MaxValue;
                this.friendly = true;
                this.extraUpdates = 7;
            }
            else if (this.type == 602)
            {
                this.name = "Portal Gate";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 114;
                this.alpha = (int)byte.MaxValue;
                this.friendly = true;
                this.tileCollide = false;
            }
            else if (this.type == 605)
            {
                this.name = "Slime Spike";
                this.alpha = (int)byte.MaxValue;
                this.width = 6;
                this.height = 6;
                this.aiStyle = 1;
                this.hostile = true;
                this.penetrate = -1;
            }
            else if (this.type == 606)
            {
                this.name = "Laser";
                this.width = 5;
                this.height = 5;
                this.aiStyle = 1;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
                this.scale = 1f;
                this.timeLeft = 600;
                this.ignoreWater = true;
            }
            else if (this.type == 607)
            {
                this.name = "Solar Flare";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 116;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 600;
                this.ignoreWater = true;
                this.tileCollide = false;
                this.penetrate = -1;
            }
            else if (this.type == 608)
            {
                this.name = "Solar Radiance";
                this.width = 160;
                this.height = 160;
                this.aiStyle = 117;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.timeLeft = 3;
                this.ignoreWater = true;
                this.tileCollide = false;
                this.penetrate = -1;
                this.hide = true;
            }
            else if (this.type == 611)
            {
                this.name = "Solar Eruption";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 75;
                this.friendly = true;
                this.melee = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.hide = true;
                this.tileCollide = false;
                this.ignoreWater = true;
                this.updatedNPCImmunity = true;
            }
            else if (this.type == 612)
            {
                this.name = "Solar Eruption";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 117;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.timeLeft = 60;
                this.tileCollide = false;
                this.penetrate = -1;
                this.updatedNPCImmunity = true;
            }
            else if (this.type == 613)
            {
                this.netImportant = true;
                this.name = "Stardust Cell";
                this.width = 24;
                this.height = 24;
                this.aiStyle = 62;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.minion = true;
                this.friendly = true;
                this.minionSlots = 1f;
                this.ignoreWater = true;
            }
            else if (this.type == 614)
            {
                this.name = "Stardust Cell";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 113;
                this.friendly = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
            }
            else if (this.type == 615)
            {
                this.name = "Vortex Beater";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 75;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ranged = true;
                this.ignoreWater = true;
            }
            else if (this.type == 616)
            {
                this.name = "Vortex Rocket";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 1;
                this.friendly = true;
                this.penetrate = 1;
                this.alpha = (int)byte.MaxValue;
                this.ranged = true;
                this.extraUpdates = 2;
                this.timeLeft = 90 * this.MaxUpdates;
            }
            else if (this.type == 617)
            {
                this.name = "Nebula Arcanum";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 118;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.hide = true;
                this.magic = true;
                this.penetrate = 3;
            }
            else if (this.type == 618)
            {
                this.name = "Nebula Arcanum";
                this.tileCollide = false;
                this.width = 18;
                this.height = 30;
                this.aiStyle = 119;
                this.penetrate = -1;
                this.timeLeft = 420;
                this.magic = true;
                this.friendly = true;
            }
            else if (this.type == 619)
            {
                this.name = "Nebula Arcanum";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 29;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.penetrate = 1;
                this.friendly = true;
            }
            else if (this.type == 620)
            {
                this.name = "Nebula Arcanum";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 29;
                this.alpha = (int)byte.MaxValue;
                this.magic = true;
                this.penetrate = 1;
                this.friendly = true;
            }
            else if (this.type == 622)
            {
                this.name = "Blowup Smoke";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 2;
            }
            else if (this.type == 623)
            {
                this.netImportant = true;
                this.name = "Stardust Guardian";
                this.width = 50;
                this.height = 80;
                this.aiStyle = 120;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.minion = true;
                this.friendly = true;
                this.minionSlots = 0.0f;
                this.ignoreWater = true;
                this.tileCollide = false;
            }
            else if (this.type == 624)
            {
                this.name = "Starburst";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 117;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.timeLeft = 60;
                this.tileCollide = false;
                this.penetrate = -1;
            }
            else if (this.type >= 625 && this.type <= 628)
            {
                if (this.type == 625 || this.type == 628)
                    this.netImportant = true;
                if (this.type == 626 || this.type == 627)
                    this.minionSlots = 0.5f;
                this.name = "Stardust Dragon";
                this.width = 24;
                this.height = 24;
                this.aiStyle = 121;
                this.penetrate = -1;
                this.timeLeft *= 5;
                this.minion = true;
                this.friendly = true;
                this.ignoreWater = true;
                this.tileCollide = false;
                this.alpha = (int)byte.MaxValue;
                this.hide = true;
            }
            else if (this.type == 629)
            {
                this.name = "Released Energy";
                this.width = 8;
                this.height = 8;
                this.aiStyle = 122;
                this.hostile = true;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.timeLeft = 3600;
                this.tileCollide = false;
                this.penetrate = -1;
                this.extraUpdates = 2;
            }
            else if (this.type == 630)
            {
                this.name = "Phantasm";
                this.width = 22;
                this.height = 22;
                this.aiStyle = 75;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.hide = true;
                this.ranged = true;
                this.ignoreWater = true;
            }
            else if (this.type == 631)
            {
                this.arrow = true;
                this.name = "Phantasm";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 122;
                this.friendly = true;
                this.ranged = true;
                this.tileCollide = false;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.extraUpdates = 1;
            }
            else if (this.type == 633)
            {
                this.name = "Last Prism";
                this.width = 14;
                this.height = 18;
                this.aiStyle = 75;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.magic = true;
                this.ignoreWater = true;
            }
            else if (this.type == 632)
            {
                this.name = "Last Prism";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 84;
                this.friendly = true;
                this.magic = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.tileCollide = false;
            }
            else if (this.type == 634)
            {
                this.name = "Nebula Blaze";
                this.width = 40;
                this.height = 40;
                this.aiStyle = 1;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.ignoreWater = true;
                this.extraUpdates = 2;
                this.magic = true;
            }
            else if (this.type == 635)
            {
                this.name = "Nebula Blaze Ex";
                this.width = 40;
                this.height = 40;
                this.aiStyle = 1;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.friendly = true;
                this.extraUpdates = 3;
                this.magic = true;
            }
            else if (this.type == 636)
            {
                this.name = "Daybreak";
                this.width = 16;
                this.height = 16;
                this.aiStyle = 113;
                this.friendly = true;
                this.melee = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.hide = true;
                this.MaxUpdates = 2;
            }
            else if (this.type == 637)
            {
                this.name = "Bouncy Dynamite";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 16;
                this.friendly = true;
                this.penetrate = -1;
            }
            else if (this.type == 638)
            {
                this.name = "Luminite Bullet";
                this.width = 4;
                this.height = 4;
                this.aiStyle = 1;
                this.friendly = true;
                this.alpha = (int)byte.MaxValue;
                this.extraUpdates = 5;
                this.timeLeft = 600;
                this.ranged = true;
                this.ignoreWater = true;
                this.updatedNPCImmunity = true;
                this.penetrate = -1;
            }
            else if (this.type == 639)
            {
                this.arrow = true;
                this.name = "Luminite Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.ranged = true;
                this.MaxUpdates = 2;
                this.timeLeft = this.MaxUpdates * 45;
                this.ignoreWater = true;
                this.updatedNPCImmunity = true;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = 4;
            }
            else if (this.type == 640)
            {
                this.name = "Luminite Arrow";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.ranged = true;
                this.MaxUpdates = 3;
                this.timeLeft = 90;
                this.ignoreWater = true;
                this.updatedNPCImmunity = true;
                this.alpha = (int)byte.MaxValue;
                this.penetrate = 4;
            }
            else if (this.type == 642)
            {
                this.name = "Lunar Portal Laser";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 84;
                this.friendly = true;
                this.penetrate = -1;
                this.alpha = (int)byte.MaxValue;
                this.tileCollide = false;
                this.updatedNPCImmunity = true;
            }
            else if (this.type == 641)
            {
                this.name = "Lunar Portal";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 123;
                this.timeLeft = 7200;
                this.ignoreWater = true;
                this.tileCollide = false;
                this.alpha = (int)byte.MaxValue;
                this.hide = true;
            }
            else if (this.type == 643)
            {
                this.name = "Rainbow Crystal";
                this.width = 32;
                this.height = 32;
                this.aiStyle = 123;
                this.timeLeft = 7200;
                this.ignoreWater = true;
                this.tileCollide = false;
                this.alpha = (int)byte.MaxValue;
            }
            else if (this.type == 644)
            {
                this.name = "Rainbow Explosion";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 112;
                this.penetrate = 1;
                this.timeLeft = 900;
                this.tileCollide = false;
                this.ignoreWater = true;
                this.alpha = (int)byte.MaxValue;
            }
            else if (this.type == 645)
            {
                this.name = "Lunar Flare";
                this.width = 10;
                this.height = 10;
                this.aiStyle = 1;
                this.friendly = true;
                this.magic = true;
                this.tileCollide = false;
                this.extraUpdates = 5;
                this.penetrate = -1;
                this.updatedNPCImmunity = true;
            }
            else if (this.type >= 646 && this.type <= 649)
            {
                this.name = "Lunar Hook";
                this.width = 18;
                this.height = 18;
                this.aiStyle = 7;
                this.friendly = true;
                this.penetrate = -1;
                this.tileCollide = false;
                this.timeLeft *= 10;
            }
            else if (this.type == 650)
            {
                this.name = "Suspicious Looking Tentacle";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 124;
                this.penetrate = -1;
                this.netImportant = true;
                this.timeLeft *= 5;
                this.friendly = true;
                this.ignoreWater = true;
                this.tileCollide = false;
                this.manualDirectionChange = true;
            }
            else
                this.active = false;
            this.width = (int)((double)this.width * (double)this.scale);
            this.height = (int)((double)this.height * (double)this.scale);
            this.maxPenetrate = this.penetrate;
        }

        public static int GetNextSlot()
        {
            int num = 1000;
            for (int index = 0; index < 1000; ++index)
            {
                if (!Main.projectile[index].active)
                {
                    num = index;
                    break;
                }
            }
            return num;
        }

        public static int NewProjectile(float X, float Y, float SpeedX, float SpeedY, int Type, int Damage, float KnockBack, int Owner = 255, float ai0 = 0.0f, float ai1 = 0.0f)
        {
            int number = 1000;
            for (int index = 0; index < 1000; ++index)
            {
                if (!Main.projectile[index].active)
                {
                    number = index;
                    break;
                }
            }
            if (number == 1000)
                return number;
            Projectile projectile = Main.projectile[number];
            projectile.SetDefaults(Type);
            projectile.position.X = X - (float)projectile.width * 0.5f;
            projectile.position.Y = Y - (float)projectile.height * 0.5f;
            projectile.owner = Owner;
            projectile.velocity.X = SpeedX;
            projectile.velocity.Y = SpeedY;
            projectile.damage = Damage;
            projectile.knockBack = KnockBack;
            projectile.identity = number;
            projectile.gfxOffY = 0.0f;
            projectile.stepSpeed = 1f;
            projectile.wet = Collision.WetCollision(projectile.position, projectile.width, projectile.height);
            if (projectile.ignoreWater)
                projectile.wet = false;
            projectile.honeyWet = Collision.honey;
            if (projectile.aiStyle == 1)
            {
                while ((double)projectile.velocity.X >= 16.0 || (double)projectile.velocity.X <= -16.0 || ((double)projectile.velocity.Y >= 16.0 || (double)projectile.velocity.Y < -16.0))
                {
                    projectile.velocity.X *= 0.97f;
                    projectile.velocity.Y *= 0.97f;
                }
            }
            if (Owner == Main.myPlayer)
            {
                if (Type == 206)
                {
                    projectile.ai[0] = (float)Main.rand.Next(-100, 101) * 0.0005f;
                    projectile.ai[1] = (float)Main.rand.Next(-100, 101) * 0.0005f;
                }
                else if (Type == 335)
                    projectile.ai[1] = (float)Main.rand.Next(4);
                else if (Type == 358)
                    projectile.ai[1] = (float)Main.rand.Next(10, 31) * 0.1f;
                else if (Type == 406)
                {
                    projectile.ai[1] = (float)Main.rand.Next(10, 21) * 0.1f;
                }
                else
                {
                    projectile.ai[0] = ai0;
                    projectile.ai[1] = ai1;
                }
            }
            if (Type == 434)
            {
                projectile.ai[0] = projectile.position.X;
                projectile.ai[1] = projectile.position.Y;
            }
            if (Main.netMode != 0 && Owner == Main.myPlayer)
                NetMessage.SendData(27, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
            if (Owner == Main.myPlayer)
            {
                if (Type == 28)
                    projectile.timeLeft = 180;
                if (Type == 516)
                    projectile.timeLeft = 180;
                if (Type == 519)
                    projectile.timeLeft = 180;
                if (Type == 29)
                    projectile.timeLeft = 300;
                if (Type == 470)
                    projectile.timeLeft = 300;
                if (Type == 637)
                    projectile.timeLeft = 300;
                if (Type == 30)
                    projectile.timeLeft = 180;
                if (Type == 517)
                    projectile.timeLeft = 180;
                if (Type == 37)
                    projectile.timeLeft = 180;
                if (Type == 75)
                    projectile.timeLeft = 180;
                if (Type == 133)
                    projectile.timeLeft = 180;
                if (Type == 136)
                    projectile.timeLeft = 180;
                if (Type == 139)
                    projectile.timeLeft = 180;
                if (Type == 142)
                    projectile.timeLeft = 180;
                if (Type == 397)
                    projectile.timeLeft = 180;
                if (Type == 419)
                    projectile.timeLeft = 600;
                if (Type == 420)
                    projectile.timeLeft = 600;
                if (Type == 421)
                    projectile.timeLeft = 600;
                if (Type == 422)
                    projectile.timeLeft = 600;
                if (Type == 588)
                    projectile.timeLeft = 180;
                if (Type == 443)
                    projectile.timeLeft = 300;
            }
            if (Type == 249)
                projectile.frame = Main.rand.Next(5);
            return number;
        }

        public void StatusNPC(int i)
        {
            if (this.melee && (int)Main.player[this.owner].meleeEnchant > 0 && !this.noEnchantments)
            {
                int num = (int)Main.player[this.owner].meleeEnchant;
                if (num == 1)
                    Main.npc[i].AddBuff(70, 60 * Main.rand.Next(5, 10), false);
                if (num == 2)
                    Main.npc[i].AddBuff(39, 60 * Main.rand.Next(3, 7), false);
                if (num == 3)
                    Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 7), false);
                if (num == 5)
                    Main.npc[i].AddBuff(69, 60 * Main.rand.Next(10, 20), false);
                if (num == 6)
                    Main.npc[i].AddBuff(31, 60 * Main.rand.Next(1, 4), false);
                if (num == 8)
                    Main.npc[i].AddBuff(20, 60 * Main.rand.Next(5, 10), false);
                if (num == 4)
                    Main.npc[i].AddBuff(72, 120, false);
            }
            if (this.type == 195)
            {
                if (Main.rand.Next(3) == 0)
                    Main.npc[i].AddBuff(70, 60 * Main.rand.Next(10, 21), false);
                else
                    Main.npc[i].AddBuff(20, 60 * Main.rand.Next(10, 21), false);
            }
            if (this.type == 567 || this.type == 568)
                Main.npc[i].AddBuff(20, 60 * Main.rand.Next(5, 11), false);
            if (this.type == 598)
                Main.npc[i].AddBuff(169, 900, false);
            if (this.type == 636)
                Main.npc[i].AddBuff(189, 300, false);
            if (this.type == 611)
                Main.npc[i].AddBuff(189, 300, false);
            if (this.type == 612)
                Main.npc[i].AddBuff(189, 300, false);
            if (this.type == 614)
                Main.npc[i].AddBuff(183, 900, false);
            if (this.type == 585)
                Main.npc[i].AddBuff(153, 60 * Main.rand.Next(5, 11), false);
            if (this.type == 583)
                Main.npc[i].AddBuff(20, 60 * Main.rand.Next(3, 6), false);
            if (this.type == 524)
                Main.npc[i].AddBuff(69, 60 * Main.rand.Next(3, 8), false);
            if (this.type == 504 && Main.rand.Next(3) == 0)
            {
                if (Main.rand.Next(3) == 0)
                    Main.npc[i].AddBuff(24, Main.rand.Next(60, 180), false);
                else
                    Main.npc[i].AddBuff(24, Main.rand.Next(30, 120), false);
            }
            if (this.type == 545 && Main.rand.Next(3) == 0)
                Main.npc[i].AddBuff(24, Main.rand.Next(60, 240), false);
            if (this.type == 553)
                Main.npc[i].AddBuff(24, Main.rand.Next(180, 480), false);
            if (this.type == 552 && Main.rand.Next(3) != 0)
                Main.npc[i].AddBuff(44, Main.rand.Next(120, 320), false);
            if (this.type == 495)
                Main.npc[i].AddBuff(153, Main.rand.Next(120, 300), false);
            if (this.type == 497)
                Main.npc[i].AddBuff(153, Main.rand.Next(60, 180), false);
            if (this.type == 496)
                Main.npc[i].AddBuff(153, Main.rand.Next(240, 480), false);
            if (this.type == 476)
                Main.npc[i].AddBuff(151, 30, false);
            if (this.type == 523)
                Main.npc[i].AddBuff(20, 60 * Main.rand.Next(10, 30), false);
            if (this.type == 478 || this.type == 480)
                Main.npc[i].AddBuff(39, 60 * Main.rand.Next(3, 7), false);
            if (this.type == 479)
                Main.npc[i].AddBuff(69, 60 * Main.rand.Next(7, 15), false);
            if (this.type == 379)
                Main.npc[i].AddBuff(70, 60 * Main.rand.Next(4, 7), false);
            if (this.type >= 390 && this.type <= 392)
                Main.npc[i].AddBuff(70, 60 * Main.rand.Next(2, 5), false);
            if (this.type == 374)
                Main.npc[i].AddBuff(20, 60 * Main.rand.Next(4, 7), false);
            if (this.type == 376)
                Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 7), false);
            if (this.type >= 399 && this.type <= 402)
                Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 7), false);
            if (this.type == 295 || this.type == 296)
                Main.npc[i].AddBuff(24, 60 * Main.rand.Next(8, 16), false);
            if ((this.melee || this.ranged) && (Main.player[this.owner].frostBurn && !this.noEnchantments))
                Main.npc[i].AddBuff(44, 60 * Main.rand.Next(5, 15), false);
            if (this.melee && Main.player[this.owner].magmaStone && !this.noEnchantments)
            {
                if (Main.rand.Next(7) == 0)
                    Main.npc[i].AddBuff(24, 360, false);
                else if (Main.rand.Next(3) == 0)
                    Main.npc[i].AddBuff(24, 120, false);
                else
                    Main.npc[i].AddBuff(24, 60, false);
            }
            if (this.type == 287)
                Main.npc[i].AddBuff(72, 120, false);
            if (this.type == 285)
            {
                if (Main.rand.Next(3) == 0)
                    Main.npc[i].AddBuff(31, 180, false);
                else
                    Main.npc[i].AddBuff(31, 60, false);
            }
            if (this.type == 2 && Main.rand.Next(3) == 0)
                Main.npc[i].AddBuff(24, 180, false);
            if (this.type == 172)
            {
                if (Main.rand.Next(3) == 0)
                    Main.npc[i].AddBuff(44, 180, false);
            }
            else if (this.type == 15)
            {
                if (Main.rand.Next(2) == 0)
                    Main.npc[i].AddBuff(24, 300, false);
            }
            else if (this.type == 253)
            {
                if (Main.rand.Next(2) == 0)
                    Main.npc[i].AddBuff(44, 480, false);
            }
            else if (this.type == 19)
            {
                if (Main.rand.Next(5) == 0)
                    Main.npc[i].AddBuff(24, 180, false);
            }
            else if (this.type == 33)
            {
                if (Main.rand.Next(5) == 0)
                    Main.npc[i].AddBuff(20, 420, false);
            }
            else if (this.type == 34)
            {
                if (Main.rand.Next(2) == 0)
                    Main.npc[i].AddBuff(24, Main.rand.Next(240, 480), false);
            }
            else if (this.type == 35)
            {
                if (Main.rand.Next(4) == 0)
                    Main.npc[i].AddBuff(24, 180, false);
            }
            else if (this.type == 54)
            {
                if (Main.rand.Next(2) == 0)
                    Main.npc[i].AddBuff(20, 600, false);
            }
            else if (this.type == 267)
            {
                if (Main.rand.Next(3) == 0)
                    Main.npc[i].AddBuff(20, 3600, false);
                else
                    Main.npc[i].AddBuff(20, 1800, false);
            }
            else if (this.type == 63)
            {
                if (Main.rand.Next(5) != 0)
                    Main.npc[i].AddBuff(31, 60 * Main.rand.Next(2, 5), false);
            }
            else if (this.type == 85 || this.type == 188)
                Main.npc[i].AddBuff(24, 1200, false);
            else if (this.type == 95 || this.type == 103 || this.type == 104)
                Main.npc[i].AddBuff(39, 420, false);
            else if (this.type == 278 || this.type == 279 || this.type == 280)
                Main.npc[i].AddBuff(69, 600, false);
            else if (this.type == 282 || this.type == 283)
                Main.npc[i].AddBuff(70, 600, false);
            if (this.type == 163 || this.type == 310)
            {
                if (Main.rand.Next(3) == 0)
                    Main.npc[i].AddBuff(24, 600, false);
                else
                    Main.npc[i].AddBuff(24, 300, false);
            }
            else if (this.type == 98)
                Main.npc[i].AddBuff(20, 600, false);
            else if (this.type == 184)
                Main.npc[i].AddBuff(20, 900, false);
            else if (this.type == 265)
            {
                Main.npc[i].AddBuff(20, 1800, false);
            }
            else
            {
                if (this.type != 355)
                    return;
                Main.npc[i].AddBuff(70, 1800, false);
            }
        }

        public void StatusPvP(int i)
        {
            if (this.melee && (int)Main.player[this.owner].meleeEnchant > 0 && !this.noEnchantments)
            {
                int num = (int)Main.player[this.owner].meleeEnchant;
                if (num == 1)
                    Main.player[i].AddBuff(70, 60 * Main.rand.Next(5, 10), true);
                if (num == 2)
                    Main.player[i].AddBuff(39, 60 * Main.rand.Next(3, 7), true);
                if (num == 3)
                    Main.player[i].AddBuff(24, 60 * Main.rand.Next(3, 7), true);
                if (num == 5)
                    Main.player[i].AddBuff(69, 60 * Main.rand.Next(10, 20), true);
                if (num == 6)
                    Main.player[i].AddBuff(31, 60 * Main.rand.Next(1, 4), true);
                if (num == 8)
                    Main.player[i].AddBuff(20, 60 * Main.rand.Next(5, 10), true);
            }
            if (this.type == 295 || this.type == 296)
                Main.player[i].AddBuff(24, 60 * Main.rand.Next(8, 16), true);
            if (this.type == 478 || this.type == 480)
                Main.player[i].AddBuff(39, 60 * Main.rand.Next(3, 7), true);
            if ((this.melee || this.ranged) && (Main.player[this.owner].frostBurn && !this.noEnchantments))
                Main.player[i].AddBuff(44, 60 * Main.rand.Next(1, 8), false);
            if (this.melee && Main.player[this.owner].magmaStone && !this.noEnchantments)
            {
                if (Main.rand.Next(4) == 0)
                    Main.player[i].AddBuff(24, 360, true);
                else if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(24, 240, true);
                else
                    Main.player[i].AddBuff(24, 120, true);
            }
            if (this.type == 2 && Main.rand.Next(3) == 0)
                Main.player[i].AddBuff(24, 180, false);
            if (this.type == 172)
            {
                if (Main.rand.Next(3) == 0)
                    Main.player[i].AddBuff(44, 240, false);
            }
            else if (this.type == 15)
            {
                if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(24, 300, false);
            }
            else if (this.type == 253)
            {
                if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(44, 480, false);
            }
            else if (this.type == 19)
            {
                if (Main.rand.Next(5) == 0)
                    Main.player[i].AddBuff(24, 180, false);
            }
            else if (this.type == 33)
            {
                if (Main.rand.Next(5) == 0)
                    Main.player[i].AddBuff(20, 420, false);
            }
            else if (this.type == 34)
            {
                if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(24, 240, false);
            }
            else if (this.type == 35)
            {
                if (Main.rand.Next(4) == 0)
                    Main.player[i].AddBuff(24, 180, false);
            }
            else if (this.type == 54)
            {
                if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(20, 600, false);
            }
            else if (this.type == 267)
            {
                if (Main.rand.Next(3) == 0)
                    Main.player[i].AddBuff(20, 3600, true);
                else
                    Main.player[i].AddBuff(20, 1800, true);
            }
            else if (this.type == 63)
            {
                if (Main.rand.Next(3) != 0)
                    Main.player[i].AddBuff(31, 120, true);
            }
            else if (this.type == 85 || this.type == 188)
                Main.player[i].AddBuff(24, 1200, false);
            else if (this.type == 95 || this.type == 103 || this.type == 104)
                Main.player[i].AddBuff(39, 420, true);
            else if (this.type == 278 || this.type == 279 || this.type == 280)
                Main.player[i].AddBuff(69, 900, true);
            else if (this.type == 282 || this.type == 283)
                Main.player[i].AddBuff(70, 600, true);
            if (this.type == 163 || this.type == 310)
            {
                if (Main.rand.Next(3) == 0)
                    Main.player[i].AddBuff(24, 600, true);
                else
                    Main.player[i].AddBuff(24, 300, true);
            }
            else if (this.type == 265)
            {
                Main.player[i].AddBuff(20, 1200, true);
            }
            else
            {
                if (this.type != 355)
                    return;
                Main.player[i].AddBuff(70, 1800, true);
            }
        }

        public void ghostHurt(int dmg, Vector2 Position)
        {
            if (!this.magic)
                return;
            int Damage = this.damage / 2;
            if (dmg / 2 <= 1)
                return;
            int num1 = 1000;
            if ((double)Main.player[Main.myPlayer].ghostDmg > (double)num1)
                return;
            Main.player[Main.myPlayer].ghostDmg += (float)Damage;
            int[] numArray = new int[200];
            int maxValue1 = 0;
            int maxValue2 = 0;
            for (int index = 0; index < 200; ++index)
            {
                if (Main.npc[index].CanBeChasedBy((object)this, false))
                {
                    float num2 = Math.Abs(Main.npc[index].position.X + (float)(Main.npc[index].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.npc[index].position.Y + (float)(Main.npc[index].height / 2) - this.position.Y + (float)(this.height / 2));
                    if ((double)num2 < 800.0)
                    {
                        if (Collision.CanHit(this.position, 1, 1, Main.npc[index].position, Main.npc[index].width, Main.npc[index].height) && (double)num2 > 50.0)
                        {
                            numArray[maxValue2] = index;
                            ++maxValue2;
                        }
                        else if (maxValue2 == 0)
                        {
                            numArray[maxValue1] = index;
                            ++maxValue1;
                        }
                    }
                }
            }
            if (maxValue1 == 0 && maxValue2 == 0)
                return;
            int num3 = maxValue2 <= 0 ? numArray[Main.rand.Next(maxValue1)] : numArray[Main.rand.Next(maxValue2)];
            float num4 = 4f;
            float num5 = (float)Main.rand.Next(-100, 101);
            float num6 = (float)Main.rand.Next(-100, 101);
            float num7 = (float)Math.Sqrt((double)num5 * (double)num5 + (double)num6 * (double)num6);
            float num8 = num4 / num7;
            float SpeedX = num5 * num8;
            float SpeedY = num6 * num8;
            Projectile.NewProjectile(Position.X, Position.Y, SpeedX, SpeedY, 356, Damage, 0.0f, this.owner, (float)num3, 0.0f);
        }

        public void ghostHeal(int dmg, Vector2 Position)
        {
            float num1 = 0.2f - (float)this.numHits * 0.05f;
            if ((double)num1 <= 0.0)
                return;
            float ai1 = (float)dmg * num1;
            if ((int)ai1 <= 0 || (double)Main.player[Main.myPlayer].lifeSteal <= 0.0)
                return;
            Main.player[Main.myPlayer].lifeSteal -= ai1;
            if (!this.magic)
                return;
            float num2 = 0.0f;
            int num3 = this.owner;
            for (int index = 0; index < (int)byte.MaxValue; ++index)
            {
                if (Main.player[index].active && !Main.player[index].dead && (!Main.player[this.owner].hostile && !Main.player[index].hostile || Main.player[this.owner].team == Main.player[index].team) && ((double)(Math.Abs(Main.player[index].position.X + (float)(Main.player[index].width / 2) - this.position.X + (float)(this.width / 2)) + Math.Abs(Main.player[index].position.Y + (float)(Main.player[index].height / 2) - this.position.Y + (float)(this.height / 2))) < 1200.0 && (double)(Main.player[index].statLifeMax2 - Main.player[index].statLife) > (double)num2))
                {
                    num2 = (float)(Main.player[index].statLifeMax2 - Main.player[index].statLife);
                    num3 = index;
                }
            }
            Projectile.NewProjectile(Position.X, Position.Y, 0.0f, 0.0f, 298, 0, 0.0f, this.owner, (float)num3, ai1);
        }

        public void vampireHeal(int dmg, Vector2 Position)
        {
            float ai1 = (float)dmg * 0.075f;
            if ((int)ai1 == 0 || (double)Main.player[Main.myPlayer].lifeSteal <= 0.0)
                return;
            Main.player[Main.myPlayer].lifeSteal -= ai1;
            int num = this.owner;
            Projectile.NewProjectile(Position.X, Position.Y, 0.0f, 0.0f, 305, 0, 0.0f, this.owner, (float)num, ai1);
        }

        public void StatusPlayer(int i)
        {
            if (this.type == 472)
                Main.player[i].AddBuff(149, Main.rand.Next(30, 150), true);
            if (this.type == 467)
                Main.player[i].AddBuff(24, Main.rand.Next(30, 150), true);
            if (this.type == 581)
            {
                if (Main.expertMode)
                    Main.player[i].AddBuff(164, Main.rand.Next(300, 540), true);
                else if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(164, Main.rand.Next(360, 720), true);
            }
            if (this.type == 572 && Main.rand.Next(3) != 0)
                Main.player[i].AddBuff(20, Main.rand.Next(120, 240), true);
            if (this.type == 276)
            {
                if (Main.expertMode)
                    Main.player[i].AddBuff(20, Main.rand.Next(120, 540), true);
                else if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(20, Main.rand.Next(180, 420), true);
            }
            if (this.type == 436 && Main.rand.Next(5) >= 2)
                Main.player[i].AddBuff(31, 300, true);
            if (this.type == 435 && Main.rand.Next(3) != 0)
                Main.player[i].AddBuff(144, 300, true);
            if (this.type == 437)
                Main.player[i].AddBuff(144, 60 * Main.rand.Next(4, 9), true);
            if (this.type == 348)
            {
                if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(46, 600, true);
                else
                    Main.player[i].AddBuff(46, 300, true);
                if (Main.rand.Next(3) != 0)
                {
                    if (Main.rand.Next(16) == 0)
                        Main.player[i].AddBuff(47, 60, true);
                    else if (Main.rand.Next(12) == 0)
                        Main.player[i].AddBuff(47, 40, true);
                    else if (Main.rand.Next(8) == 0)
                        Main.player[i].AddBuff(47, 20, true);
                }
            }
            if (this.type == 349)
            {
                if (Main.rand.Next(3) == 0)
                    Main.player[i].AddBuff(46, 600, true);
                else if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(46, 300, true);
            }
            if (this.type >= 399 && this.type <= 402)
                Main.npc[i].AddBuff(24, 60 * Main.rand.Next(3, 7), false);
            if (this.type == 55)
            {
                if (Main.rand.Next(3) == 0)
                    Main.player[i].AddBuff(20, 600, true);
                else if (Main.expertMode)
                    Main.player[i].AddBuff(20, Main.rand.Next(60, 300), true);
            }
            if (this.type == 44 && Main.rand.Next(3) == 0)
                Main.player[i].AddBuff(22, 900, true);
            if (this.type == 293)
                Main.player[i].AddBuff(80, 60 * Main.rand.Next(2, 7), true);
            if (this.type == 82 && Main.rand.Next(3) == 0)
                Main.player[i].AddBuff(24, 420, true);
            if (this.type == 285)
            {
                if (Main.rand.Next(3) == 0)
                    Main.player[i].AddBuff(31, 180, true);
                else
                    Main.player[i].AddBuff(31, 60, true);
            }
            if (this.type == 96 || this.type == 101)
            {
                if (Main.rand.Next(6) == 0)
                    Main.player[i].AddBuff(39, 480, true);
                else if (Main.rand.Next(4) == 0)
                    Main.player[i].AddBuff(39, 300, true);
                else if (Main.rand.Next(2) == 0)
                    Main.player[i].AddBuff(39, 180, true);
            }
            else if (this.type == 288)
                Main.player[i].AddBuff(69, 900, true);
            else if (this.type == 253 && Main.rand.Next(2) == 0)
                Main.player[i].AddBuff(44, 600, true);
            if (this.type == 291 || this.type == 292)
                Main.player[i].AddBuff(24, 60 * Main.rand.Next(8, 16), true);
            if (this.type == 98)
                Main.player[i].AddBuff(20, 600, true);
            if (this.type == 184)
                Main.player[i].AddBuff(20, 900, true);
            if (this.type == 290)
                Main.player[i].AddBuff(32, 60 * Main.rand.Next(5, 16), true);
            if (this.type == 174)
            {
                Main.player[i].AddBuff(46, 1200, true);
                if (!Main.player[i].frozen && Main.rand.Next(20) == 0)
                    Main.player[i].AddBuff(47, 90, true);
                else if (!Main.player[i].frozen && Main.expertMode && Main.rand.Next(20) == 0)
                    Main.player[i].AddBuff(47, 60, true);
            }
            if (this.type == 257)
            {
                Main.player[i].AddBuff(46, 2700, true);
                if (!Main.player[i].frozen && Main.rand.Next(5) == 0)
                    Main.player[i].AddBuff(47, 60, true);
            }
            if (this.type == 177)
            {
                Main.player[i].AddBuff(46, 1500, true);
                if (!Main.player[i].frozen && Main.rand.Next(10) == 0)
                    Main.player[i].AddBuff(47, Main.rand.Next(30, 120), true);
            }
            if (this.type != 176)
                return;
            if (Main.rand.Next(4) == 0)
            {
                Main.player[i].AddBuff(20, 1200, true);
            }
            else
            {
                if (Main.rand.Next(2) != 0)
                    return;
                Main.player[i].AddBuff(20, 300, true);
            }
        }

        public void Damage()
        {
            if (this.type == 18 || this.type == 72 || (this.type == 86 || this.type == 87) || (this.aiStyle == 31 || this.aiStyle == 32 || (this.type == 226 || this.type == 378)) || (this.type == 613 || this.type == 650 || this.type == 434 && (double)this.localAI[0] != 0.0 || (this.type == 439 || this.type == 444)) || (this.type == 451 && ((int)((double)this.ai[0] - 1.0) / this.penetrate == 0 || (double)this.ai[1] < 5.0) && (double)this.ai[0] != 0.0 || (this.type == 500 || this.type == 460 || (this.type == 633 || this.type == 600) || (this.type == 601 || this.type == 602 || this.type == 535))) || (this.type == 631 && (double)this.localAI[1] == 0.0 || this.aiStyle == 93 && (double)this.ai[0] != 0.0 && (double)this.ai[0] != 2.0 || this.aiStyle == 10 && (double)this.localAI[1] == -1.0) || Main.projPet[this.type] && this.type != 266 && (this.type != 407 && this.type != 317) && ((this.type != 388 || (double)this.ai[0] != 2.0) && (this.type < 390 || this.type > 392)) && ((this.type < 393 || this.type > 395) && (this.type != 533 || (double)this.ai[0] < 6.0 || (double)this.ai[0] > 8.0)) && (this.type < 625 || this.type > 628))
                return;
            Rectangle myRect = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
            if (this.type == 85 || this.type == 101)
            {
                int num = 30;
                myRect.X -= num;
                myRect.Y -= num;
                myRect.Width += num * 2;
                myRect.Height += num * 2;
            }
            if (this.type == 188)
            {
                int num = 20;
                myRect.X -= num;
                myRect.Y -= num;
                myRect.Width += num * 2;
                myRect.Height += num * 2;
            }
            if (this.aiStyle == 29)
            {
                int num = 4;
                myRect.X -= num;
                myRect.Y -= num;
                myRect.Width += num * 2;
                myRect.Height += num * 2;
            }
            if (this.friendly && this.owner == Main.myPlayer && !this.npcProj)
            {
                if (this.aiStyle == 16 && this.type != 338 && (this.type != 339 && this.type != 340) && this.type != 341 && (this.timeLeft <= 1 || this.type == 108 || this.type == 164) || this.type == 286 && (double)this.localAI[1] == -1.0)
                {
                    int index = Main.myPlayer;
                    if (Main.player[index].active && !Main.player[index].dead && !Main.player[index].immune && (!this.ownerHitCheck || Collision.CanHit(Main.player[this.owner].position, Main.player[this.owner].width, Main.player[this.owner].height, Main.player[index].position, Main.player[index].width, Main.player[index].height)))
                    {
                        Rectangle rectangle = new Rectangle((int)Main.player[index].position.X, (int)Main.player[index].position.Y, Main.player[index].width, Main.player[index].height);
                        if (myRect.Intersects(rectangle))
                        {
                            if ((double)Main.player[index].position.X + (double)(Main.player[index].width / 2) < (double)this.position.X + (double)(this.width / 2))
                                this.direction = -1;
                            else
                                this.direction = 1;
                            int Damage = Main.DamageVar((float)this.damage);
                            this.StatusPlayer(index);
                            Main.player[index].Hurt(Damage, this.direction, true, false, Lang.deathMsg(this.owner, -1, this.whoAmI, -1), false);
                            if (this.trap)
                            {
                                Main.player[index].trapDebuffSource = true;
                                if (Main.player[index].dead)
                                    AchievementsHelper.HandleSpecialEvent(Main.player[index], 4);
                            }
                            if (Main.netMode != 0)
                                NetMessage.SendData(26, -1, -1, Lang.deathMsg(this.owner, -1, this.whoAmI, -1), index, (float)this.direction, (float)Damage, 1f, 0, 0, 0);
                        }
                    }
                }
                if (this.aiStyle != 45 && this.aiStyle != 92 && (this.aiStyle != 105 && this.aiStyle != 106) && (this.type != 463 && this.type != 69 && (this.type != 70 && this.type != 621)) && (this.type != 10 && this.type != 11 && (this.type != 379 && this.type != 407) && (this.type != 476 && this.type != 623 && (this.type < 625 || this.type > 628))))
                {
                    int num1 = (int)((double)this.position.X / 16.0);
                    int num2 = (int)(((double)this.position.X + (double)this.width) / 16.0) + 1;
                    int num3 = (int)((double)this.position.Y / 16.0);
                    int num4 = (int)(((double)this.position.Y + (double)this.height) / 16.0) + 1;
                    if (num1 < 0)
                        num1 = 0;
                    if (num2 > Main.maxTilesX)
                        num2 = Main.maxTilesX;
                    if (num3 < 0)
                        num3 = 0;
                    if (num4 > Main.maxTilesY)
                        num4 = Main.maxTilesY;
                    AchievementsHelper.CurrentlyMining = true;
                    for (int i = num1; i < num2; ++i)
                    {
                        for (int j = num3; j < num4; ++j)
                        {
                            if (Main.tile[i, j] != null && Main.tileCut[(int)Main.tile[i, j].type] && (Main.tile[i, j + 1] != null && (int)Main.tile[i, j + 1].type != 78) && (int)Main.tile[i, j + 1].type != 380)
                            {
                                WorldGen.KillTile(i, j, false, false, false);
                                if (Main.netMode != 0)
                                    NetMessage.SendData(17, -1, -1, "", 0, (float)i, (float)j, 0.0f, 0, 0, 0);
                            }
                        }
                    }
                    if (this.type == 461 || this.type == 632 || this.type == 642)
                        Utils.PlotTileLine(this.Center, this.Center + this.velocity * this.localAI[1], (float)this.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CutTiles));
                    else if (this.type == 611)
                        Utils.PlotTileLine(this.Center, this.Center + this.velocity, (float)this.width * this.scale, new Utils.PerLinePoint(DelegateMethods.CutTiles));
                    AchievementsHelper.CurrentlyMining = false;
                }
            }
            if (this.owner == Main.myPlayer)
            {
                if (this.damage > 0)
                {
                    for (int index1 = 0; index1 < 200; ++index1)
                    {
                        bool flag1 = !this.updatedNPCImmunity || this.npcImmune[index1] == 0;
                        if (Main.npc[index1].active && !Main.npc[index1].dontTakeDamage && flag1 && (this.friendly && (!Main.npc[index1].friendly || this.type == 318 || Main.npc[index1].type == 22 && this.owner < (int)byte.MaxValue && Main.player[this.owner].killGuide || Main.npc[index1].type == 54 && this.owner < (int)byte.MaxValue && Main.player[this.owner].killClothier) || this.hostile && Main.npc[index1].friendly) && (this.owner < 0 || Main.npc[index1].immune[this.owner] == 0 || this.maxPenetrate == 1))
                        {
                            bool flag2 = false;
                            if (this.type == 11 && (Main.npc[index1].type == 47 || Main.npc[index1].type == 57))
                                flag2 = true;
                            else if (this.type == 31 && Main.npc[index1].type == 69)
                                flag2 = true;
                            else if (Main.npc[index1].trapImmune && this.trap)
                                flag2 = true;
                            else if (Main.npc[index1].immortal && this.npcProj)
                                flag2 = true;
                            if (!flag2 && (Main.npc[index1].noTileCollide || !this.ownerHitCheck || Collision.CanHit(Main.player[this.owner].position, Main.player[this.owner].width, Main.player[this.owner].height, Main.npc[index1].position, Main.npc[index1].width, Main.npc[index1].height)))
                            {
                                bool flag3;
                                if (Main.npc[index1].type == 414)
                                {
                                    Rectangle rect = Main.npc[index1].getRect();
                                    int num = 8;
                                    rect.X -= num;
                                    rect.Y -= num;
                                    rect.Width += num * 2;
                                    rect.Height += num * 2;
                                    flag3 = this.Colliding(myRect, rect);
                                }
                                else
                                    flag3 = this.Colliding(myRect, Main.npc[index1].getRect());
                                if (flag3)
                                {
                                    if (this.type == 604)
                                        Main.player[this.owner].Counterweight(Main.npc[index1].Center, this.damage, this.knockBack);
                                    if (Main.npc[index1].reflectingProjectiles && this.CanReflect())
                                    {
                                        Main.npc[index1].ReflectProjectile(this.whoAmI);
                                        return;
                                    }
                                    int Damage1 = Main.DamageVar((float)this.damage);
                                    if (this.type == 604)
                                    {
                                        this.friendly = false;
                                        this.ai[1] = 1000f;
                                    }
                                    if ((this.type == 400 || this.type == 401 || this.type == 402) && (Main.npc[index1].type >= 13 && Main.npc[index1].type <= 15))
                                    {
                                        Damage1 = (int)((double)Damage1 * 0.65);
                                        if (this.penetrate > 1)
                                            --this.penetrate;
                                    }
                                    if (this.type == 504)
                                        this.ai[0] += (float)((60.0 - (double)this.ai[0]) / 2.0);
                                    if (this.aiStyle == 3 && this.type != 301)
                                    {
                                        if ((double)this.ai[0] == 0.0)
                                        {
                                            this.velocity.X = -this.velocity.X;
                                            this.velocity.Y = -this.velocity.Y;
                                            this.netUpdate = true;
                                        }
                                        this.ai[0] = 1f;
                                    }
                                    else if (this.type == 582)
                                    {
                                        if ((double)this.ai[0] != 0.0)
                                            this.direction *= -1;
                                    }
                                    else if (this.type == 612)
                                        this.direction = Main.player[this.owner].direction;
                                    else if (this.type == 624)
                                    {
                                        float num = 1f;
                                        if ((double)Main.npc[index1].knockBackResist > 0.0)
                                            num = 1f / Main.npc[index1].knockBackResist;
                                        this.knockBack = 4f * num;
                                        if ((double)Main.npc[index1].Center.X < (double)this.Center.X)
                                            this.direction = 1;
                                        else
                                            this.direction = -1;
                                    }
                                    else if (this.aiStyle == 16)
                                    {
                                        if (this.timeLeft > 3)
                                            this.timeLeft = 3;
                                        if ((double)Main.npc[index1].position.X + (double)(Main.npc[index1].width / 2) < (double)this.position.X + (double)(this.width / 2))
                                            this.direction = -1;
                                        else
                                            this.direction = 1;
                                    }
                                    else if (this.aiStyle == 68)
                                    {
                                        if (this.timeLeft > 3)
                                            this.timeLeft = 3;
                                        if ((double)Main.npc[index1].position.X + (double)(Main.npc[index1].width / 2) < (double)this.position.X + (double)(this.width / 2))
                                            this.direction = -1;
                                        else
                                            this.direction = 1;
                                    }
                                    else if (this.aiStyle == 50)
                                    {
                                        if ((double)Main.npc[index1].position.X + (double)(Main.npc[index1].width / 2) < (double)this.position.X + (double)(this.width / 2))
                                            this.direction = -1;
                                        else
                                            this.direction = 1;
                                    }
                                    if (this.type == 509)
                                    {
                                        int num = Main.rand.Next(2, 6);
                                        for (int index2 = 0; index2 < num; ++index2)
                                        {
                                            Vector2 vector2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                                            vector2 += this.velocity * 3f;
                                            vector2.Normalize();
                                            vector2 *= (float)Main.rand.Next(35, 81) * 0.1f;
                                            int Damage2 = (int)((double)this.damage * 0.5);
                                            Projectile.NewProjectile(this.Center.X, this.Center.Y, vector2.X, vector2.Y, 504, Damage2, this.knockBack * 0.2f, this.owner, 0.0f, 0.0f);
                                        }
                                    }
                                    if (this.type == 598 || this.type == 636 || this.type == 614)
                                    {
                                        this.ai[0] = 1f;
                                        this.ai[1] = (float)index1;
                                        this.velocity = (Main.npc[index1].Center - this.Center) * 0.75f;
                                        this.netUpdate = true;
                                    }
                                    if (this.type >= 511 && this.type <= 513)
                                        this.timeLeft = 0;
                                    if (this.type == 524)
                                    {
                                        this.netUpdate = true;
                                        this.ai[0] += 50f;
                                    }
                                    if (this.aiStyle == 39)
                                    {
                                        if ((double)this.ai[1] == 0.0)
                                        {
                                            this.ai[1] = (float)(index1 + 1);
                                            this.netUpdate = true;
                                        }
                                        if ((double)Main.player[this.owner].position.X + (double)(Main.player[this.owner].width / 2) < (double)this.position.X + (double)(this.width / 2))
                                            this.direction = 1;
                                        else
                                            this.direction = -1;
                                    }
                                    if (this.type == 41 && this.timeLeft > 1)
                                        this.timeLeft = 1;
                                    bool crit = false;
                                    if (!this.npcProj && !this.trap)
                                    {
                                        if (this.melee && Main.rand.Next(1, 101) <= Main.player[this.owner].meleeCrit)
                                            crit = true;
                                        if (this.ranged && Main.rand.Next(1, 101) <= Main.player[this.owner].rangedCrit)
                                            crit = true;
                                        if (this.magic && Main.rand.Next(1, 101) <= Main.player[this.owner].magicCrit)
                                            crit = true;
                                        if (this.thrown && Main.rand.Next(1, 101) <= Main.player[this.owner].thrownCrit)
                                            crit = true;
                                    }
                                    if (this.aiStyle == 99)
                                    {
                                        Main.player[this.owner].Counterweight(Main.npc[index1].Center, this.damage, this.knockBack);
                                        if ((double)Main.npc[index1].Center.X < (double)Main.player[this.owner].Center.X)
                                            this.direction = -1;
                                        else
                                            this.direction = 1;
                                        if ((double)this.ai[0] >= 0.0)
                                        {
                                            Vector2 vector2_1 = this.Center - Main.npc[index1].Center;
                                            vector2_1.Normalize();
                                            float num = 16f;
                                            Projectile projectile1 = this;
                                            Vector2 vector2_2 = projectile1.velocity * -0.5f;
                                            projectile1.velocity = vector2_2;
                                            Projectile projectile2 = this;
                                            Vector2 vector2_3 = projectile2.velocity + vector2_1 * num;
                                            projectile2.velocity = vector2_3;
                                            this.netUpdate = true;
                                            this.localAI[0] += 20f;
                                            if (!Collision.CanHit(this.position, this.width, this.height, Main.player[this.owner].position, Main.player[this.owner].width, Main.player[this.owner].height))
                                            {
                                                this.localAI[0] += 40f;
                                                Damage1 = (int)((double)Damage1 * 0.75);
                                            }
                                        }
                                    }
                                    if (this.aiStyle == 93)
                                    {
                                        if ((double)this.ai[0] == 0.0)
                                        {
                                            this.ai[1] = 0.0f;
                                            this.ai[0] = (float)(-index1 - 1);
                                            this.velocity = Main.npc[index1].Center - this.Center;
                                        }
                                        Damage1 = (double)this.ai[0] != 2.0 ? (int)((double)Damage1 * 0.15) : (int)((double)Damage1 * 1.35);
                                    }
                                    if (!this.npcProj)
                                    {
                                        int num = Item.NPCtoBanner(Main.npc[index1].BannerID());
                                        if (num >= 0)
                                            Main.player[Main.myPlayer].lastCreatureHit = num;
                                    }
                                    if (Main.netMode != 2)
                                    {
                                        int index2 = Item.NPCtoBanner(Main.npc[index1].BannerID());
                                        if (index2 > 0 && Main.player[this.owner].NPCBannerBuff[index2])
                                        {
                                            if (Main.expertMode)
                                                Damage1 *= 2;
                                            else
                                                Damage1 = (int)((double)Damage1 * 1.5);
                                        }
                                    }
                                    if (Main.expertMode)
                                    {
                                        if ((this.type == 30 || this.type == 28 || (this.type == 29 || this.type == 470) || (this.type == 517 || this.type == 588 || this.type == 637)) && (Main.npc[index1].type >= 13 && Main.npc[index1].type <= 15))
                                            Damage1 /= 5;
                                        if (this.type == 280 && (Main.npc[index1].type >= 134 && Main.npc[index1].type <= 136 || Main.npc[index1].type == 139))
                                            Damage1 = (int)((double)Damage1 * 0.75);
                                    }
                                    if (Main.netMode != 2 && Main.npc[index1].type == 439 && (this.type >= 0 && this.type <= 651) && ProjectileID.Sets.Homing[this.type])
                                        Damage1 = (int)((double)Damage1 * 0.75);
                                    if (this.type == 497 && this.penetrate != 1)
                                    {
                                        this.ai[0] = 25f;
                                        float num = this.velocity.Length();
                                        Vector2 vector2 = Main.npc[index1].Center - this.Center;
                                        vector2.Normalize();
                                        this.velocity = -(vector2 * num) * 0.9f;
                                        this.netUpdate = true;
                                    }
                                    if (this.type == 323 && (Main.npc[index1].type == 158 || Main.npc[index1].type == 159))
                                        Damage1 *= 10;
                                    if (this.type == 294)
                                        this.damage = (int)((double)this.damage * 0.8);
                                    if (this.type == 477 && this.penetrate > 1)
                                    {
                                        int[] numArray = new int[10];
                                        int maxValue = 0;
                                        int num1 = 700;
                                        int num2 = 20;
                                        for (int index2 = 0; index2 < 200; ++index2)
                                        {
                                            if (index2 != index1 && Main.npc[index2].CanBeChasedBy((object)this, false))
                                            {
                                                float num3 = (this.Center - Main.npc[index2].Center).Length();
                                                if ((double)num3 > (double)num2 && (double)num3 < (double)num1 && Collision.CanHitLine(this.Center, 1, 1, Main.npc[index2].Center, 1, 1))
                                                {
                                                    numArray[maxValue] = index2;
                                                    ++maxValue;
                                                    if (maxValue >= 9)
                                                        break;
                                                }
                                            }
                                        }
                                        if (maxValue > 0)
                                        {
                                            int index2 = Main.rand.Next(maxValue);
                                            Vector2 vector2 = Main.npc[numArray[index2]].Center - this.Center;
                                            float num3 = this.velocity.Length();
                                            vector2.Normalize();
                                            this.velocity = vector2 * num3;
                                            this.netUpdate = true;
                                        }
                                    }
                                    if (this.type == 261)
                                    {
                                        float num = (float)Math.Sqrt((double)this.velocity.X * (double)this.velocity.X + (double)this.velocity.Y * (double)this.velocity.Y);
                                        if ((double)num < 1.0)
                                            num = 1f;
                                        Damage1 = (int)((double)Damage1 * (double)num / 8.0);
                                    }
                                    this.StatusNPC(index1);
                                    if (this.type != 221 && this.type != 227 && this.type != 614)
                                        Main.player[this.owner].OnHit(Main.npc[index1].Center.X, Main.npc[index1].Center.Y, (Entity)Main.npc[index1]);
                                    if (this.type == 317)
                                    {
                                        this.ai[1] = -1f;
                                        this.netUpdate = true;
                                    }
                                    if (!this.npcProj && !this.hostile && Main.player[this.owner].armorPenetration > 0)
                                        Damage1 += Main.npc[index1].checkArmorPenetration(Main.player[this.owner].armorPenetration);
                                    int dmg = this.npcProj ? (int)Main.npc[index1].StrikeNPCNoInteraction(Damage1, this.knockBack, this.direction, crit, false, false) : (int)Main.npc[index1].StrikeNPC(Damage1, this.knockBack, this.direction, crit, false, false);
                                    if (!this.npcProj && Main.player[this.owner].accDreamCatcher)
                                        Main.player[this.owner].addDPS(dmg);
                                    if (!this.npcProj && !Main.npc[index1].immortal)
                                    {
                                        if (this.type == 304 && dmg > 0 && (Main.npc[index1].lifeMax > 5 && !Main.player[this.owner].moonLeech))
                                            this.vampireHeal(dmg, new Vector2(Main.npc[index1].Center.X, Main.npc[index1].Center.Y));
                                        if ((double)Main.npc[index1].value > 0.0 && Main.player[this.owner].coins && Main.rand.Next(5) == 0)
                                        {
                                            int Type = 71;
                                            if (Main.rand.Next(10) == 0)
                                                Type = 72;
                                            if (Main.rand.Next(100) == 0)
                                                Type = 73;
                                            int number = Item.NewItem((int)Main.npc[index1].position.X, (int)Main.npc[index1].position.Y, Main.npc[index1].width, Main.npc[index1].height, Type, 1, false, 0, false);
                                            Main.item[number].stack = Main.rand.Next(1, 11);
                                            Main.item[number].velocity.Y = (float)Main.rand.Next(-20, 1) * 0.2f;
                                            Main.item[number].velocity.X = (float)Main.rand.Next(10, 31) * 0.2f * (float)this.direction;
                                            if (Main.netMode == 1)
                                                NetMessage.SendData(21, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                                        }
                                        if (dmg > 0 && Main.npc[index1].lifeMax > 5 && (this.friendly && !this.hostile) && this.aiStyle != 59)
                                        {
                                            if (Main.npc[index1].canGhostHeal)
                                            {
                                                if (Main.player[this.owner].ghostHeal && !Main.player[this.owner].moonLeech)
                                                    this.ghostHeal(dmg, new Vector2(Main.npc[index1].Center.X, Main.npc[index1].Center.Y));
                                                if (Main.player[this.owner].ghostHurt)
                                                    this.ghostHurt(dmg, new Vector2(Main.npc[index1].Center.X, Main.npc[index1].Center.Y));
                                                if (Main.player[this.owner].setNebula && Main.player[this.owner].nebulaCD == 0 && Main.rand.Next(3) == 0)
                                                {
                                                    Main.player[this.owner].nebulaCD = 30;
                                                    int Type = Utils.SelectRandom<int>(Main.rand, 3453, 3454, 3455);
                                                    int number = Item.NewItem((int)Main.npc[index1].position.X, (int)Main.npc[index1].position.Y, Main.npc[index1].width, Main.npc[index1].height, Type, 1, false, 0, false);
                                                    Main.item[number].velocity.Y = (float)Main.rand.Next(-20, 1) * 0.2f;
                                                    Main.item[number].velocity.X = (float)Main.rand.Next(10, 31) * 0.2f * (float)this.direction;
                                                    if (Main.netMode == 1)
                                                        NetMessage.SendData(21, -1, -1, "", number, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                                                }
                                            }
                                            if (this.melee && Main.player[this.owner].beetleOffense)
                                            {
                                                if (Main.player[this.owner].beetleOrbs == 0)
                                                    Main.player[this.owner].beetleCounter += (float)(dmg * 3);
                                                else if (Main.player[this.owner].beetleOrbs == 1)
                                                    Main.player[this.owner].beetleCounter += (float)(dmg * 2);
                                                else
                                                    Main.player[this.owner].beetleCounter += (float)dmg;
                                                Main.player[this.owner].beetleCountdown = 0;
                                            }
                                            if (this.arrow && this.type != 631 && Main.player[this.owner].phantasmTime > 0)
                                            {
                                                Vector2 Source = Main.player[this.owner].position + Main.player[this.owner].Size * Utils.RandomVector2(Main.rand, 0.0f, 1f);
                                                Vector2 vector2 = Main.npc[index1].DirectionFrom(Source) * 6f;
                                                Projectile.NewProjectile(Source.X, Source.Y, vector2.X, vector2.Y, 631, this.damage, 0.0f, this.owner, (float)index1, 0.0f);
                                                Projectile.NewProjectile(Source.X, Source.Y, vector2.X, vector2.Y, 631, this.damage, 0.0f, this.owner, (float)index1, 15f);
                                                Projectile.NewProjectile(Source.X, Source.Y, vector2.X, vector2.Y, 631, this.damage, 0.0f, this.owner, (float)index1, 30f);
                                            }
                                        }
                                    }
                                    if (!this.npcProj && this.melee && (int)Main.player[this.owner].meleeEnchant == 7)
                                        Projectile.NewProjectile(Main.npc[index1].Center.X, Main.npc[index1].Center.Y, Main.npc[index1].velocity.X, Main.npc[index1].velocity.Y, 289, 0, 0.0f, this.owner, 0.0f, 0.0f);
                                    if (Main.netMode != 0)
                                    {
                                        if (crit)
                                            NetMessage.SendData(28, -1, -1, "", index1, (float)Damage1, this.knockBack, (float)this.direction, 1, 0, 0);
                                        else
                                            NetMessage.SendData(28, -1, -1, "", index1, (float)Damage1, this.knockBack, (float)this.direction, 0, 0, 0);
                                    }
                                    if (this.type >= 390 && this.type <= 392)
                                        this.localAI[1] = 20f;
                                    if (this.type == 434)
                                        this.numUpdates = 0;
                                    else if (this.type == 598 || this.type == 636 || this.type == 614)
                                    {
                                        this.damage = 0;
                                        int length = 6;
                                        if (this.type == 614)
                                            length = 10;
                                        if (this.type == 636)
                                            length = 8;
                                        Point[] pointArray = new Point[length];
                                        int num = 0;
                                        for (int x = 0; x < 1000; ++x)
                                        {
                                            if (x != this.whoAmI && Main.projectile[x].active && (Main.projectile[x].owner == Main.myPlayer && Main.projectile[x].type == this.type) && ((double)Main.projectile[x].ai[0] == 1.0 && (double)Main.projectile[x].ai[1] == (double)index1))
                                            {
                                                pointArray[num++] = new Point(x, Main.projectile[x].timeLeft);
                                                if (num >= pointArray.Length)
                                                    break;
                                            }
                                        }
                                        if (num >= pointArray.Length)
                                        {
                                            int index2 = 0;
                                            for (int index3 = 1; index3 < pointArray.Length; ++index3)
                                            {
                                                if (pointArray[index3].Y < pointArray[index2].Y)
                                                    index2 = index3;
                                            }
                                            Main.projectile[pointArray[index2].X].Kill();
                                        }
                                    }
                                    else if (this.type == 632)
                                        Main.npc[index1].immune[this.owner] = 5;
                                    else if (this.type == 514)
                                        Main.npc[index1].immune[this.owner] = 1;
                                    else if (this.type == 617)
                                        Main.npc[index1].immune[this.owner] = 4;
                                    else if (this.type == 611)
                                    {
                                        if ((double)this.localAI[1] <= 0.0)
                                            Projectile.NewProjectile(Main.npc[index1].Center.X, Main.npc[index1].Center.Y, 0.0f, 0.0f, 612, this.damage, 10f, this.owner, 0.0f, (float)(0.850000023841858 + (double)Utils.NextFloat(Main.rand) * 1.14999997615814));
                                        this.localAI[1] = 4f;
                                    }
                                    else if (this.type == 595)
                                        Main.npc[index1].immune[this.owner] = 5;
                                    else if (this.type >= 625 && this.type <= 628)
                                        Main.npc[index1].immune[this.owner] = 6;
                                    else if (this.type == 286)
                                        Main.npc[index1].immune[this.owner] = 5;
                                    else if (this.type == 514)
                                        Main.npc[index1].immune[this.owner] = 3;
                                    else if (this.type == 443)
                                        Main.npc[index1].immune[this.owner] = 8;
                                    else if (this.type >= 424 && this.type <= 426)
                                        Main.npc[index1].immune[this.owner] = 5;
                                    else if (this.type == 634 || this.type == 635)
                                        Main.npc[index1].immune[this.owner] = 5;
                                    else if (this.type == 246)
                                        Main.npc[index1].immune[this.owner] = 7;
                                    else if (this.type == 249)
                                        Main.npc[index1].immune[this.owner] = 7;
                                    else if (this.type == 190)
                                        Main.npc[index1].immune[this.owner] = 8;
                                    else if (this.type == 409)
                                        Main.npc[index1].immune[this.owner] = 6;
                                    else if (this.type == 407)
                                        Main.npc[index1].immune[this.owner] = 20;
                                    else if (this.type == 311)
                                        Main.npc[index1].immune[this.owner] = 7;
                                    else if (this.type == 582)
                                    {
                                        Main.npc[index1].immune[this.owner] = 7;
                                        if ((double)this.ai[0] != 1.0)
                                        {
                                            this.ai[0] = 1f;
                                            this.netUpdate = true;
                                        }
                                    }
                                    else
                                    {
                                        if (this.type == 451)
                                        {
                                            if ((double)this.ai[0] == 0.0)
                                                this.ai[0] += (float)this.penetrate;
                                            else
                                                this.ai[0] -= (float)(this.penetrate + 1);
                                            this.ai[1] = 0.0f;
                                            this.netUpdate = true;
                                            break;
                                        }
                                        if (this.penetrate != 1)
                                            Main.npc[index1].immune[this.owner] = 10;
                                    }
                                    if (this.penetrate > 0 && this.type != 317)
                                    {
                                        if (this.type == 357)
                                            this.damage = (int)((double)this.damage * 0.9);
                                        --this.penetrate;
                                        if (this.penetrate == 0)
                                            break;
                                    }
                                    if (this.aiStyle == 7)
                                    {
                                        this.ai[0] = 1f;
                                        this.damage = 0;
                                        this.netUpdate = true;
                                    }
                                    else if (this.aiStyle == 13)
                                    {
                                        this.ai[0] = 1f;
                                        this.netUpdate = true;
                                    }
                                    else if (this.aiStyle == 69)
                                    {
                                        this.ai[0] = 1f;
                                        this.netUpdate = true;
                                    }
                                    else if (this.type == 607)
                                    {
                                        this.ai[0] = 1f;
                                        this.netUpdate = true;
                                        this.friendly = false;
                                    }
                                    else if (this.type == 638 || this.type == 639 || this.type == 640)
                                    {
                                        this.npcImmune[index1] = -1;
                                        Main.npc[index1].immune[this.owner] = 0;
                                        this.damage = (int)((double)this.damage * 0.96);
                                    }
                                    else if (this.type == 642)
                                    {
                                        this.npcImmune[index1] = 10;
                                        Main.npc[index1].immune[this.owner] = 0;
                                    }
                                    else if (this.type == 611 || this.type == 612)
                                    {
                                        this.npcImmune[index1] = 6;
                                        Main.npc[index1].immune[this.owner] = 4;
                                    }
                                    else if (this.type == 645)
                                    {
                                        this.npcImmune[index1] = -1;
                                        Main.npc[index1].immune[this.owner] = 0;
                                        if ((double)this.ai[1] != -1.0)
                                        {
                                            this.ai[0] = 0.0f;
                                            this.ai[1] = -1f;
                                            this.netUpdate = true;
                                        }
                                    }
                                    ++this.numHits;
                                }
                            }
                        }
                    }
                }
                if (this.damage > 0 && Main.player[Main.myPlayer].hostile)
                {
                    for (int index = 0; index < (int)byte.MaxValue; ++index)
                    {
                        if (index != this.owner && Main.player[index].active && (!Main.player[index].dead && !Main.player[index].immune) && (Main.player[index].hostile && this.playerImmune[index] <= 0 && (Main.player[Main.myPlayer].team == 0 || Main.player[Main.myPlayer].team != Main.player[index].team)) && ((!this.ownerHitCheck || Collision.CanHit(Main.player[this.owner].position, Main.player[this.owner].width, Main.player[this.owner].height, Main.player[index].position, Main.player[index].width, Main.player[index].height)) && this.Colliding(myRect, Main.player[index].getRect())))
                        {
                            if (this.aiStyle == 3)
                            {
                                if ((double)this.ai[0] == 0.0)
                                {
                                    this.velocity.X = -this.velocity.X;
                                    this.velocity.Y = -this.velocity.Y;
                                    this.netUpdate = true;
                                }
                                this.ai[0] = 1f;
                            }
                            else if (this.aiStyle == 16)
                            {
                                if (this.timeLeft > 3)
                                    this.timeLeft = 3;
                                if ((double)Main.player[index].position.X + (double)(Main.player[index].width / 2) < (double)this.position.X + (double)(this.width / 2))
                                    this.direction = -1;
                                else
                                    this.direction = 1;
                            }
                            else if (this.aiStyle == 68)
                            {
                                if (this.timeLeft > 3)
                                    this.timeLeft = 3;
                                if ((double)Main.player[index].position.X + (double)(Main.player[index].width / 2) < (double)this.position.X + (double)(this.width / 2))
                                    this.direction = -1;
                                else
                                    this.direction = 1;
                            }
                            if (this.type == 41 && this.timeLeft > 1)
                                this.timeLeft = 1;
                            bool Crit = false;
                            if (this.melee && Main.rand.Next(1, 101) <= Main.player[this.owner].meleeCrit)
                                Crit = true;
                            int Damage = Main.DamageVar((float)this.damage);
                            if (!Main.player[index].immune)
                                this.StatusPvP(index);
                            if (this.type != 221 && this.type != 227 && this.type != 614)
                                Main.player[this.owner].OnHit(Main.player[index].Center.X, Main.player[index].Center.Y, (Entity)Main.player[index]);
                            int dmg = (int)Main.player[index].Hurt(Damage, this.direction, true, false, Lang.deathMsg(this.owner, -1, this.whoAmI, -1), Crit);
                            if (dmg > 0 && Main.player[this.owner].ghostHeal && (this.friendly && !this.hostile))
                                this.ghostHeal(dmg, new Vector2(Main.player[index].Center.X, Main.player[index].Center.Y));
                            if (this.type == 304 && dmg > 0)
                                this.vampireHeal(dmg, new Vector2(Main.player[index].Center.X, Main.player[index].Center.Y));
                            if (this.melee && (int)Main.player[this.owner].meleeEnchant == 7)
                                Projectile.NewProjectile(Main.player[index].Center.X, Main.player[index].Center.Y, Main.player[index].velocity.X, Main.player[index].velocity.Y, 289, 0, 0.0f, this.owner, 0.0f, 0.0f);
                            if (Main.netMode != 0)
                            {
                                if (Crit)
                                    NetMessage.SendData(26, -1, -1, Lang.deathMsg(this.owner, -1, this.whoAmI, -1), index, (float)this.direction, (float)Damage, 1f, 1, 0, 0);
                                else
                                    NetMessage.SendData(26, -1, -1, Lang.deathMsg(this.owner, -1, this.whoAmI, -1), index, (float)this.direction, (float)Damage, 1f, 0, 0, 0);
                            }
                            this.playerImmune[index] = 40;
                            if (this.penetrate > 0)
                            {
                                --this.penetrate;
                                if (this.penetrate == 0)
                                    break;
                            }
                            if (this.aiStyle == 7)
                            {
                                this.ai[0] = 1f;
                                this.damage = 0;
                                this.netUpdate = true;
                            }
                            else if (this.aiStyle == 13)
                            {
                                this.ai[0] = 1f;
                                this.netUpdate = true;
                            }
                            else if (this.aiStyle == 69)
                            {
                                this.ai[0] = 1f;
                                this.netUpdate = true;
                            }
                        }
                    }
                }
            }
            if (this.type == 10 && Main.netMode != 1)
            {
                for (int index = 0; index < 200; ++index)
                {
                    if (Main.npc[index].active && Main.npc[index].type == 534)
                    {
                        Rectangle rectangle = new Rectangle((int)Main.npc[index].position.X, (int)Main.npc[index].position.Y, Main.npc[index].width, Main.npc[index].height);
                        if (myRect.Intersects(rectangle))
                            Main.npc[index].Transform(441);
                    }
                }
            }
            if (this.type == 11 && Main.netMode != 1)
            {
                for (int index = 0; index < 200; ++index)
                {
                    if (Main.npc[index].active)
                    {
                        if (Main.npc[index].type == 46 || Main.npc[index].type == 303)
                        {
                            Rectangle rectangle = new Rectangle((int)Main.npc[index].position.X, (int)Main.npc[index].position.Y, Main.npc[index].width, Main.npc[index].height);
                            if (myRect.Intersects(rectangle))
                                Main.npc[index].Transform(47);
                        }
                        else if (Main.npc[index].type == 55)
                        {
                            Rectangle rectangle = new Rectangle((int)Main.npc[index].position.X, (int)Main.npc[index].position.Y, Main.npc[index].width, Main.npc[index].height);
                            if (myRect.Intersects(rectangle))
                                Main.npc[index].Transform(57);
                        }
                        else if (Main.npc[index].type == 148 || Main.npc[index].type == 149)
                        {
                            Rectangle rectangle = new Rectangle((int)Main.npc[index].position.X, (int)Main.npc[index].position.Y, Main.npc[index].width, Main.npc[index].height);
                            if (myRect.Intersects(rectangle))
                                Main.npc[index].Transform(168);
                        }
                    }
                }
            }
            if (this.type == 463 && Main.netMode != 1)
            {
                for (int index = 0; index < 200; ++index)
                {
                    if (Main.npc[index].active)
                    {
                        if (Main.npc[index].type == 46 || Main.npc[index].type == 303)
                        {
                            Rectangle rectangle = new Rectangle((int)Main.npc[index].position.X, (int)Main.npc[index].position.Y, Main.npc[index].width, Main.npc[index].height);
                            if (myRect.Intersects(rectangle))
                                Main.npc[index].Transform(464);
                        }
                        else if (Main.npc[index].type == 55)
                        {
                            Rectangle rectangle = new Rectangle((int)Main.npc[index].position.X, (int)Main.npc[index].position.Y, Main.npc[index].width, Main.npc[index].height);
                            if (myRect.Intersects(rectangle))
                                Main.npc[index].Transform(465);
                        }
                        else if (Main.npc[index].type == 148 || Main.npc[index].type == 149)
                        {
                            Rectangle rectangle = new Rectangle((int)Main.npc[index].position.X, (int)Main.npc[index].position.Y, Main.npc[index].width, Main.npc[index].height);
                            if (myRect.Intersects(rectangle))
                                Main.npc[index].Transform(470);
                        }
                    }
                }
            }
            if (Main.netMode == 2 || !this.hostile || (Main.myPlayer >= (int)byte.MaxValue || this.damage <= 0))
                return;
            int i1 = Main.myPlayer;
            if (!Main.player[i1].active || Main.player[i1].dead || (Main.player[i1].immune || !this.Colliding(myRect, Main.player[i1].getRect())))
                return;
            int num5 = this.direction;
            int hitDirection = (double)Main.player[i1].position.X + (double)(Main.player[i1].width / 2) >= (double)this.position.X + (double)(this.width / 2) ? 1 : -1;
            int num6 = Main.DamageVar((float)this.damage);
            if (!Main.player[i1].immune)
                this.StatusPlayer(i1);
            if (Main.player[i1].resistCold && this.coldDamage)
                num6 = (int)((double)num6 * 0.699999988079071);
            if (Main.expertMode)
                num6 = (int)((double)num6 * (double)Main.expertDamage);
            Main.player[i1].Hurt(num6 * 2, hitDirection, false, false, Lang.deathMsg(-1, -1, this.whoAmI, -1), false);
            if (this.trap)
            {
                Main.player[i1].trapDebuffSource = true;
                if (Main.player[i1].dead)
                    AchievementsHelper.HandleSpecialEvent(Main.player[i1], 4);
            }
            if (this.type == 435)
                --this.penetrate;
            if (this.type == 436)
                --this.penetrate;
            if (this.type != 437)
                return;
            --this.penetrate;
        }

        public bool Colliding(Rectangle myRect, Rectangle targetRect)
        {
            if (this.type == 598 && targetRect.Width > 8 && targetRect.Height > 8)
                targetRect.Inflate(-targetRect.Width / 8, -targetRect.Height / 8);
            else if (this.type == 614 && targetRect.Width > 8 && targetRect.Height > 8)
                targetRect.Inflate(-targetRect.Width / 8, -targetRect.Height / 8);
            else if (this.type == 636 && targetRect.Width > 8 && targetRect.Height > 8)
                targetRect.Inflate(-targetRect.Width / 8, -targetRect.Height / 8);
            else if (this.type == 607)
            {
                myRect.X += (int)this.velocity.X;
                myRect.Y += (int)this.velocity.Y;
            }
            if (myRect.Intersects(targetRect))
                return true;
            if (this.type == 461)
            {
                float collisionPoint = 0.0f;
                if (Collision.CheckAABBvLineCollision(Utils.TopLeft(targetRect), Utils.Size(targetRect), this.Center, this.Center + this.velocity * this.localAI[1], 22f * this.scale, ref collisionPoint))
                    return true;
            }
            else if (this.type == 642)
            {
                float collisionPoint = 0.0f;
                if (Collision.CheckAABBvLineCollision(Utils.TopLeft(targetRect), Utils.Size(targetRect), this.Center, this.Center + this.velocity * this.localAI[1], 30f * this.scale, ref collisionPoint))
                    return true;
            }
            else if (this.type == 632)
            {
                float collisionPoint = 0.0f;
                if (Collision.CheckAABBvLineCollision(Utils.TopLeft(targetRect), Utils.Size(targetRect), this.Center, this.Center + this.velocity * this.localAI[1], 22f * this.scale, ref collisionPoint))
                    return true;
            }
            else if (this.type == 455)
            {
                float collisionPoint = 0.0f;
                if (Collision.CheckAABBvLineCollision(Utils.TopLeft(targetRect), Utils.Size(targetRect), this.Center, this.Center + this.velocity * this.localAI[1], 36f * this.scale, ref collisionPoint))
                    return true;
            }
            else if (this.type == 611)
            {
                float collisionPoint = 0.0f;
                if (Collision.CheckAABBvLineCollision(Utils.TopLeft(targetRect), Utils.Size(targetRect), this.Center, this.Center + this.velocity, 16f * this.scale, ref collisionPoint))
                    return true;
            }
            else if (this.type == 537)
            {
                float collisionPoint = 0.0f;
                if (Collision.CheckAABBvLineCollision(Utils.TopLeft(targetRect), Utils.Size(targetRect), this.Center, this.Center + this.velocity * this.localAI[1], 22f * this.scale, ref collisionPoint))
                    return true;
            }
            else if (this.type == 466 || this.type == 580)
            {
                for (int index = 0; index < this.oldPos.Length; ++index)
                {
                    myRect.X = (int)this.oldPos[index].X;
                    myRect.Y = (int)this.oldPos[index].Y;
                    if (myRect.Intersects(targetRect))
                        return true;
                }
            }
            else if (this.type == 464 && (double)this.ai[1] != 1.0)
            {
                Vector2 spinningpoint = Utils.RotatedBy(new Vector2(0.0f, -720f), (double)Utils.ToRotation(this.velocity), new Vector2()) * (float)((double)this.ai[0] % 45.0 / 45.0);
                for (int index = 0; index < 6; ++index)
                {
                    float num = (float)((double)index * 6.28318548202515 / 6.0);
                    if (Utils.CenteredRectangle(this.Center + Utils.RotatedBy(spinningpoint, (double)num, new Vector2()), new Vector2(30f, 30f)).Intersects(targetRect))
                        return true;
                }
            }
            return false;
        }

        public void ProjLight()
        {
            if ((double)this.light <= 0.0)
                return;
            float R = this.light;
            float G = this.light;
            float B = this.light;
            if (this.type == 446)
            {
                R *= 0.0f;
                B *= 0.8f;
            }
            else if (this.type == 493 || this.type == 494)
                G *= 0.3f;
            else if (this.type == 332)
            {
                B *= 0.1f;
                G *= 0.6f;
            }
            else if (this.type == 259)
                B *= 0.1f;
            else if (this.type == 329)
            {
                B *= 0.1f;
                G *= 0.9f;
            }
            else if (this.type == 2 || this.type == 82)
            {
                G *= 0.75f;
                B *= 0.55f;
            }
            else if (this.type == 172)
            {
                G *= 0.55f;
                R *= 0.35f;
            }
            else if (this.type == 308)
            {
                G *= 0.7f;
                R *= 0.1f;
            }
            else if (this.type == 304)
            {
                G *= 0.2f;
                B *= 0.1f;
            }
            else if (this.type == 263)
            {
                G *= 0.7f;
                R *= 0.1f;
            }
            else if (this.type == 274)
            {
                G *= 0.1f;
                R *= 0.7f;
            }
            else if (this.type == 254)
                R *= 0.1f;
            else if (this.type == 94)
            {
                R *= 0.5f;
                G *= 0.0f;
            }
            else if (this.type == 95 || this.type == 96 || (this.type == 103 || this.type == 104))
            {
                R *= 0.35f;
                G *= 1f;
                B *= 0.0f;
            }
            else if (this.type == 4)
            {
                G *= 0.1f;
                R *= 0.5f;
            }
            else if (this.type == 257)
            {
                G *= 0.9f;
                R *= 0.1f;
            }
            else if (this.type == 9)
            {
                G *= 0.1f;
                B *= 0.6f;
            }
            else if (this.type == 488)
            {
                R = 0.3f;
                B = 0.25f;
                G = 0.0f;
            }
            else if (this.type == 92)
            {
                G *= 0.6f;
                R *= 0.8f;
            }
            else if (this.type == 93)
            {
                G *= 1f;
                R *= 1f;
                B *= 0.01f;
            }
            else if (this.type == 12)
            {
                R *= 0.9f;
                G *= 0.8f;
                B *= 0.1f;
            }
            else if (this.type == 14 || this.type == 110 || (this.type == 180 || this.type == 242) || this.type == 302)
            {
                G *= 0.7f;
                B *= 0.1f;
            }
            else if (this.type == 15)
            {
                G *= 0.4f;
                B *= 0.1f;
                R = 1f;
            }
            else if (this.type == 16)
            {
                R *= 0.1f;
                G *= 0.4f;
                B = 1f;
            }
            else if (this.type == 18)
            {
                G *= 0.1f;
                R *= 0.6f;
            }
            else if (this.type == 19)
            {
                G *= 0.5f;
                B *= 0.1f;
            }
            else if (this.type == 20)
            {
                R *= 0.1f;
                B *= 0.3f;
            }
            else if (this.type == 22)
            {
                R = 0.0f;
                G = 0.0f;
            }
            else if (this.type == 27)
            {
                R *= 0.0f;
                G *= 0.3f;
                B = 1f;
            }
            else if (this.type == 34)
            {
                G *= 0.1f;
                B *= 0.1f;
            }
            else if (this.type == 36)
            {
                R = 0.8f;
                G *= 0.2f;
                B *= 0.6f;
            }
            else if (this.type == 41)
            {
                G *= 0.8f;
                B *= 0.6f;
            }
            else if (this.type == 44 || this.type == 45)
            {
                B = 1f;
                R *= 0.6f;
                G *= 0.1f;
            }
            else if (this.type == 50)
            {
                R *= 0.7f;
                B *= 0.8f;
            }
            else if (this.type == 515)
            {
                G *= 0.6f;
                B *= 0.85f;
            }
            else if (this.type == 53)
            {
                R *= 0.7f;
                G *= 0.8f;
            }
            else if (this.type == 473)
            {
                R *= 1.05f;
                G *= 0.95f;
                B *= 0.55f;
            }
            else if (this.type == 72)
            {
                R *= 0.45f;
                G *= 0.75f;
                B = 1f;
            }
            else if (this.type == 86)
            {
                R *= 1f;
                G *= 0.45f;
                B = 0.75f;
            }
            else if (this.type == 87)
            {
                R *= 0.45f;
                G = 1f;
                B *= 0.75f;
            }
            else if (this.type == 73)
            {
                R *= 0.4f;
                G *= 0.6f;
                B *= 1f;
            }
            else if (this.type == 74)
            {
                R *= 1f;
                G *= 0.4f;
                B *= 0.6f;
            }
            else if (this.type == 284)
            {
                R *= 1f;
                G *= 0.1f;
                B *= 0.8f;
            }
            else if (this.type == 285)
            {
                R *= 0.1f;
                G *= 0.5f;
                B *= 1f;
            }
            else if (this.type == 286)
            {
                R *= 1f;
                G *= 0.5f;
                B *= 0.1f;
            }
            else if (this.type == 287)
            {
                R *= 0.9f;
                G *= 1f;
                B *= 0.4f;
            }
            else if (this.type == 283)
            {
                R *= 0.8f;
                G *= 0.1f;
            }
            else if (this.type == 76 || this.type == 77 || this.type == 78)
            {
                R *= 1f;
                G *= 0.3f;
                B *= 0.6f;
            }
            else if (this.type == 79)
            {
                R = (float)Main.DiscoR / (float)byte.MaxValue;
                G = (float)Main.DiscoG / (float)byte.MaxValue;
                B = (float)Main.DiscoB / (float)byte.MaxValue;
            }
            else if (this.type == 80)
            {
                R *= 0.0f;
                G *= 0.8f;
                B *= 1f;
            }
            else if (this.type == 83 || this.type == 88)
            {
                R *= 0.7f;
                G *= 0.0f;
                B *= 1f;
            }
            else if (this.type == 100)
            {
                R *= 1f;
                G *= 0.5f;
                B *= 0.0f;
            }
            else if (this.type == 84 || this.type == 389)
            {
                R *= 0.8f;
                G *= 0.0f;
                B *= 0.5f;
            }
            else if (this.type == 89 || this.type == 90)
            {
                G *= 0.2f;
                B *= 1f;
                R *= 0.05f;
            }
            else if (this.type == 106)
            {
                R *= 0.0f;
                G *= 0.5f;
                B *= 1f;
            }
            else if (this.type == 113)
            {
                R *= 0.25f;
                G *= 0.75f;
                B *= 1f;
            }
            else if (this.type == 114 || this.type == 115)
            {
                R *= 0.5f;
                G *= 0.05f;
                B *= 1f;
            }
            else if (this.type == 116)
                B *= 0.25f;
            else if (this.type == 131)
            {
                R *= 0.1f;
                G *= 0.4f;
            }
            else if (this.type == 132 || this.type == 157)
            {
                R *= 0.2f;
                B *= 0.6f;
            }
            else if (this.type == 156)
            {
                R *= 1f;
                B *= 0.6f;
                G = 0.0f;
            }
            else if (this.type == 173)
            {
                R *= 0.3f;
                B *= 1f;
                G = 0.4f;
            }
            else if (this.type == 207)
            {
                R *= 0.4f;
                B *= 0.4f;
            }
            else if (this.type == 253)
            {
                R = 0.0f;
                G *= 0.4f;
            }
            else if (this.type == 211)
            {
                R *= 0.5f;
                G *= 0.9f;
                B *= 1f;
                this.light = (double)this.localAI[0] != 0.0 ? 1f : 1.5f;
            }
            else if (this.type == 209)
            {
                float num1 = (float)(((double)byte.MaxValue - (double)this.alpha) / (double)byte.MaxValue);
                float num2 = R * 0.3f;
                float num3 = G * 0.4f;
                B = B * 1.75f * num1;
                R = num2 * num1;
                G = num3 * num1;
            }
            else if (this.type == 226 || this.type == 227 | this.type == 229)
            {
                R *= 0.25f;
                G *= 1f;
                B *= 0.5f;
            }
            else if (this.type == 251)
            {
                float num1 = (float)Main.DiscoR / (float)byte.MaxValue;
                float num2 = (float)Main.DiscoG / (float)byte.MaxValue;
                float num3 = (float)Main.DiscoB / (float)byte.MaxValue;
                float num4 = (float)(((double)num1 + 1.0) / 2.0);
                float num5 = (float)(((double)num2 + 1.0) / 2.0);
                float num6 = (float)(((double)num3 + 1.0) / 2.0);
                R = num4 * this.light;
                G = num5 * this.light;
                B = num6 * this.light;
            }
            else if (this.type == 278 || this.type == 279)
            {
                R *= 1f;
                G *= 1f;
                B *= 0.0f;
            }
            Lighting.AddLight((int)(((double)this.position.X + (double)(this.width / 2)) / 16.0), (int)(((double)this.position.Y + (double)(this.height / 2)) / 16.0), R, G, B);
        }

        public Rectangle getRect()
        {
            return new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
        }

        public void Update(int i)
        {
            if (!this.active)
                return;
            this.numUpdates = this.extraUpdates;
            while (this.numUpdates >= 0)
            {
                --this.numUpdates;
                if (this.type == 640 && (double)this.ai[1] > 0.0)
                {
                    --this.ai[1];
                }
                else
                {
                    if ((double)this.position.X <= (double)Main.leftWorld || (double)this.position.X + (double)this.width >= (double)Main.rightWorld || ((double)this.position.Y <= (double)Main.topWorld || (double)this.position.Y + (double)this.height >= (double)Main.bottomWorld))
                    {
                        this.active = false;
                        return;
                    }
                    if (this.type != 344 && !this.npcProj)
                    {
                        if (Main.player[this.owner].frostBurn && (this.melee || this.ranged) && (this.friendly && !this.hostile && (!this.noEnchantments && Main.rand.Next(2 * (1 + this.extraUpdates)) == 0)))
                        {
                            int index = Dust.NewDust(this.position, this.width, this.height, 135, this.velocity.X * 0.2f + (float)(this.direction * 3), this.velocity.Y * 0.2f, 100, new Color(), 2f);
                            Main.dust[index].noGravity = true;
                            Main.dust[index].velocity *= 0.7f;
                            Main.dust[index].velocity.Y -= 0.5f;
                        }
                        if (this.melee && (int)Main.player[this.owner].meleeEnchant > 0 && !this.noEnchantments)
                        {
                            if ((int)Main.player[this.owner].meleeEnchant == 1 && Main.rand.Next(3) == 0)
                            {
                                int index = Dust.NewDust(this.position, this.width, this.height, 171, 0.0f, 0.0f, 100, new Color(), 1f);
                                Main.dust[index].noGravity = true;
                                Main.dust[index].fadeIn = 1.5f;
                                Main.dust[index].velocity *= 0.25f;
                            }
                            if ((int)Main.player[this.owner].meleeEnchant == 1)
                            {
                                if (Main.rand.Next(3) == 0)
                                {
                                    int index = Dust.NewDust(this.position, this.width, this.height, 171, 0.0f, 0.0f, 100, new Color(), 1f);
                                    Main.dust[index].noGravity = true;
                                    Main.dust[index].fadeIn = 1.5f;
                                    Main.dust[index].velocity *= 0.25f;
                                }
                            }
                            else if ((int)Main.player[this.owner].meleeEnchant == 2)
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int index = Dust.NewDust(this.position, this.width, this.height, 75, this.velocity.X * 0.2f + (float)(this.direction * 3), this.velocity.Y * 0.2f, 100, new Color(), 2.5f);
                                    Main.dust[index].noGravity = true;
                                    Main.dust[index].velocity *= 0.7f;
                                    Main.dust[index].velocity.Y -= 0.5f;
                                }
                            }
                            else if ((int)Main.player[this.owner].meleeEnchant == 3)
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int index = Dust.NewDust(this.position, this.width, this.height, 6, this.velocity.X * 0.2f + (float)(this.direction * 3), this.velocity.Y * 0.2f, 100, new Color(), 2.5f);
                                    Main.dust[index].noGravity = true;
                                    Main.dust[index].velocity *= 0.7f;
                                    Main.dust[index].velocity.Y -= 0.5f;
                                }
                            }
                            else if ((int)Main.player[this.owner].meleeEnchant == 4)
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int index = Dust.NewDust(this.position, this.width, this.height, 57, this.velocity.X * 0.2f + (float)(this.direction * 3), this.velocity.Y * 0.2f, 100, new Color(), 1.1f);
                                    Main.dust[index].noGravity = true;
                                    Main.dust[index].velocity.X /= 2f;
                                    Main.dust[index].velocity.Y /= 2f;
                                }
                            }
                            else if ((int)Main.player[this.owner].meleeEnchant == 5)
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int index = Dust.NewDust(this.position, this.width, this.height, 169, 0.0f, 0.0f, 100, new Color(), 1f);
                                    Main.dust[index].velocity.X += (float)this.direction;
                                    Main.dust[index].velocity.Y += 0.2f;
                                    Main.dust[index].noGravity = true;
                                }
                            }
                            else if ((int)Main.player[this.owner].meleeEnchant == 6)
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    int index = Dust.NewDust(this.position, this.width, this.height, 135, 0.0f, 0.0f, 100, new Color(), 1f);
                                    Main.dust[index].velocity.X += (float)this.direction;
                                    Main.dust[index].velocity.Y += 0.2f;
                                    Main.dust[index].noGravity = true;
                                }
                            }
                            else if ((int)Main.player[this.owner].meleeEnchant == 7)
                            {
                                if (Main.rand.Next(20) == 0)
                                {
                                    int index = Dust.NewDust(this.position, this.width, this.height, Main.rand.Next(139, 143), this.velocity.X, this.velocity.Y, 0, new Color(), 1.2f);
                                    Main.dust[index].velocity.X *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                                    Main.dust[index].velocity.Y *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                                    Main.dust[index].velocity.X += (float)Main.rand.Next(-50, 51) * 0.05f;
                                    Main.dust[index].velocity.Y += (float)Main.rand.Next(-50, 51) * 0.05f;
                                    Main.dust[index].scale *= (float)(1.0 + (double)Main.rand.Next(-30, 31) * 0.00999999977648258);
                                }
                                if (Main.rand.Next(40) == 0)
                                {
                                    int index = Gore.NewGore(this.position, this.velocity, Main.rand.Next(276, 283), 1f);
                                    Main.gore[index].velocity.X *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                                    Main.gore[index].velocity.Y *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                                    Main.gore[index].scale *= (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.00999999977648258);
                                    Main.gore[index].velocity.X += (float)Main.rand.Next(-50, 51) * 0.05f;
                                    Main.gore[index].velocity.Y += (float)Main.rand.Next(-50, 51) * 0.05f;
                                }
                            }
                            else if ((int)Main.player[this.owner].meleeEnchant == 8 && Main.rand.Next(4) == 0)
                            {
                                int index = Dust.NewDust(this.position, this.width, this.height, 46, 0.0f, 0.0f, 100, new Color(), 1f);
                                Main.dust[index].noGravity = true;
                                Main.dust[index].fadeIn = 1.5f;
                                Main.dust[index].velocity *= 0.25f;
                            }
                        }
                        if (this.melee && Main.player[this.owner].magmaStone && (!this.noEnchantments && Main.rand.Next(3) != 0))
                        {
                            int index = Dust.NewDust(new Vector2(this.position.X - 4f, this.position.Y - 4f), this.width + 8, this.height + 8, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 2f);
                            if (Main.rand.Next(2) == 0)
                                Main.dust[index].scale = 1.5f;
                            Main.dust[index].noGravity = true;
                            Main.dust[index].velocity.X *= 2f;
                            Main.dust[index].velocity.Y *= 2f;
                        }
                    }
                    if (this.minion && this.numUpdates == -1 && (this.type != 625 && this.type != 628))
                    {
                        this.minionPos = Main.player[this.owner].numMinions;
                        if ((double)Main.player[this.owner].slotsMinions + (double)this.minionSlots > (double)Main.player[this.owner].maxMinions && this.owner == Main.myPlayer)
                        {
                            if (this.type == 627 || this.type == 626)
                            {
                                Projectile projectile1 = Main.projectile[(int)this.ai[0]];
                                if (projectile1.type != 625)
                                    projectile1.localAI[1] = this.localAI[1];
                                Projectile projectile2 = Main.projectile[(int)this.localAI[1]];
                                projectile2.ai[0] = this.ai[0];
                                projectile2.ai[1] = 1f;
                                projectile2.netUpdate = true;
                            }
                            this.Kill();
                        }
                        else
                        {
                            ++Main.player[this.owner].numMinions;
                            Main.player[this.owner].slotsMinions += this.minionSlots;
                        }
                    }
                    float num1 = (float)(1.0 + (double)Math.Abs(this.velocity.X) / 3.0);
                    if ((double)this.gfxOffY > 0.0)
                    {
                        this.gfxOffY -= num1 * this.stepSpeed;
                        if ((double)this.gfxOffY < 0.0)
                            this.gfxOffY = 0.0f;
                    }
                    else if ((double)this.gfxOffY < 0.0)
                    {
                        this.gfxOffY += num1 * this.stepSpeed;
                        if ((double)this.gfxOffY > 0.0)
                            this.gfxOffY = 0.0f;
                    }
                    if ((double)this.gfxOffY > 16.0)
                        this.gfxOffY = 16f;
                    if ((double)this.gfxOffY < -16.0)
                        this.gfxOffY = -16f;
                    Vector2 vector2_1 = this.velocity;
                    this.oldVelocity = this.velocity;
                    this.whoAmI = i;
                    if (this.soundDelay > 0)
                        --this.soundDelay;
                    this.netUpdate = false;
                    for (int index = 0; index < (int)byte.MaxValue; ++index)
                    {
                        if (this.playerImmune[index] > 0)
                            --this.playerImmune[index];
                    }
                    if (this.updatedNPCImmunity)
                    {
                        for (int index = 0; index < 200; ++index)
                        {
                            if (this.npcImmune[index] > 0)
                                --this.npcImmune[index];
                        }
                    }
                    this.AI();
                    if (this.owner < (int)byte.MaxValue && !Main.player[this.owner].active)
                        this.Kill();
                    if (this.type == 242 || this.type == 302 || this.type == 638)
                        this.wet = false;
                    if (!this.ignoreWater)
                    {
                        bool flag1;
                        bool flag2;
                        try
                        {
                            flag1 = Collision.LavaCollision(this.position, this.width, this.height);
                            flag2 = Collision.WetCollision(this.position, this.width, this.height);
                            if (flag1)
                                this.lavaWet = true;
                            if (Collision.honey)
                                this.honeyWet = true;
                        }
                        catch
                        {
                            this.active = false;
                            return;
                        }
                        if (this.wet && !this.lavaWet)
                        {
                            if (this.type == 85 || this.type == 15 || (this.type == 34 || this.type == 188))
                                this.Kill();
                            if (this.type == 2)
                            {
                                this.type = 1;
                                this.light = 0.0f;
                            }
                        }
                        if (this.type == 80)
                        {
                            flag2 = false;
                            this.wet = false;
                            if (flag1 && (double)this.ai[0] >= 0.0)
                                this.Kill();
                        }
                        if (flag2)
                        {
                            if (this.type != 155 && (int)this.wetCount == 0 && !this.wet)
                            {
                                if (!flag1)
                                {
                                    if (this.honeyWet)
                                    {
                                        for (int index1 = 0; index1 < 10; ++index1)
                                        {
                                            int index2 = Dust.NewDust(new Vector2(this.position.X - 6f, (float)((double)this.position.Y + (double)(this.height / 2) - 8.0)), this.width + 12, 24, 152, 0.0f, 0.0f, 0, new Color(), 1f);
                                            --Main.dust[index2].velocity.Y;
                                            Main.dust[index2].velocity.X *= 2.5f;
                                            Main.dust[index2].scale = 1.3f;
                                            Main.dust[index2].alpha = 100;
                                            Main.dust[index2].noGravity = true;
                                        }
                                        Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
                                    }
                                    else
                                    {
                                        for (int index1 = 0; index1 < 10; ++index1)
                                        {
                                            int index2 = Dust.NewDust(new Vector2(this.position.X - 6f, (float)((double)this.position.Y + (double)(this.height / 2) - 8.0)), this.width + 12, 24, Dust.dustWater(), 0.0f, 0.0f, 0, new Color(), 1f);
                                            Main.dust[index2].velocity.Y -= 4f;
                                            Main.dust[index2].velocity.X *= 2.5f;
                                            Main.dust[index2].scale = 1.3f;
                                            Main.dust[index2].alpha = 100;
                                            Main.dust[index2].noGravity = true;
                                        }
                                        Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
                                    }
                                }
                                else
                                {
                                    for (int index1 = 0; index1 < 10; ++index1)
                                    {
                                        int index2 = Dust.NewDust(new Vector2(this.position.X - 6f, (float)((double)this.position.Y + (double)(this.height / 2) - 8.0)), this.width + 12, 24, 35, 0.0f, 0.0f, 0, new Color(), 1f);
                                        Main.dust[index2].velocity.Y -= 1.5f;
                                        Main.dust[index2].velocity.X *= 2.5f;
                                        Main.dust[index2].scale = 1.3f;
                                        Main.dust[index2].alpha = 100;
                                        Main.dust[index2].noGravity = true;
                                    }
                                    Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
                                }
                            }
                            this.wet = true;
                        }
                        else if (this.wet)
                        {
                            this.wet = false;
                            if (this.type == 155)
                                this.velocity.Y *= 0.5f;
                            else if ((int)this.wetCount == 0)
                            {
                                this.wetCount = (byte)10;
                                if (!this.lavaWet)
                                {
                                    if (this.honeyWet)
                                    {
                                        for (int index1 = 0; index1 < 10; ++index1)
                                        {
                                            int index2 = Dust.NewDust(new Vector2(this.position.X - 6f, (float)((double)this.position.Y + (double)(this.height / 2) - 8.0)), this.width + 12, 24, 152, 0.0f, 0.0f, 0, new Color(), 1f);
                                            --Main.dust[index2].velocity.Y;
                                            Main.dust[index2].velocity.X *= 2.5f;
                                            Main.dust[index2].scale = 1.3f;
                                            Main.dust[index2].alpha = 100;
                                            Main.dust[index2].noGravity = true;
                                        }
                                        Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
                                    }
                                    else
                                    {
                                        for (int index1 = 0; index1 < 10; ++index1)
                                        {
                                            int index2 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2)), this.width + 12, 24, Dust.dustWater(), 0.0f, 0.0f, 0, new Color(), 1f);
                                            Main.dust[index2].velocity.Y -= 4f;
                                            Main.dust[index2].velocity.X *= 2.5f;
                                            Main.dust[index2].scale = 1.3f;
                                            Main.dust[index2].alpha = 100;
                                            Main.dust[index2].noGravity = true;
                                        }
                                        Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
                                    }
                                }
                                else
                                {
                                    for (int index1 = 0; index1 < 10; ++index1)
                                    {
                                        int index2 = Dust.NewDust(new Vector2(this.position.X - 6f, (float)((double)this.position.Y + (double)(this.height / 2) - 8.0)), this.width + 12, 24, 35, 0.0f, 0.0f, 0, new Color(), 1f);
                                        Main.dust[index2].velocity.Y -= 1.5f;
                                        Main.dust[index2].velocity.X *= 2.5f;
                                        Main.dust[index2].scale = 1.3f;
                                        Main.dust[index2].alpha = 100;
                                        Main.dust[index2].noGravity = true;
                                    }
                                    Main.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1);
                                }
                            }
                        }
                        if (!this.wet)
                        {
                            this.lavaWet = false;
                            this.honeyWet = false;
                        }
                        if ((int)this.wetCount > 0)
                            --this.wetCount;
                    }
                    this.oldPosition = this.position;
                    this.oldDirection = this.direction;
                    bool flag3 = false;
                    if (this.tileCollide)
                    {
                        Vector2 vector2_2 = this.velocity;
                        bool flag1 = true;
                        int num2 = -1;
                        int num3 = -1;
                        if (Main.projPet[this.type])
                        {
                            flag1 = false;
                            if ((double)Main.player[this.owner].position.Y + (double)Main.player[this.owner].height - 12.0 > (double)this.position.Y + (double)this.height)
                                flag1 = true;
                        }
                        if (this.type == 500)
                        {
                            flag1 = false;
                            if ((double)Main.player[this.owner].Bottom.Y > (double)this.Bottom.Y + 4.0)
                                flag1 = true;
                        }
                        if (this.aiStyle == 62)
                            flag1 = true;
                        if (this.aiStyle == 66)
                            flag1 = true;
                        if (this.type == 317)
                            flag1 = true;
                        if (this.type == 373)
                            flag1 = true;
                        if (this.aiStyle == 53)
                            flag1 = false;
                        if (this.type == 9 || this.type == 12 || (this.type == 15 || this.type == 13) || (this.type == 31 || this.type == 39 || this.type == 40))
                            flag1 = false;
                        if (this.type == 24)
                            flag1 = false;
                        if (this.aiStyle == 29 || this.type == 28 || this.aiStyle == 49)
                        {
                            num2 = this.width - 8;
                            num3 = this.height - 8;
                        }
                        else if (this.type == 250 || this.type == 267 || (this.type == 297 || this.type == 323) || this.type == 3)
                        {
                            num2 = 6;
                            num3 = 6;
                        }
                        else if (this.type == 308)
                        {
                            num2 = 26;
                            num3 = this.height;
                        }
                        else if (this.type == 261 || this.type == 277)
                        {
                            num2 = 26;
                            num3 = 26;
                        }
                        else if (this.type == 481 || this.type == 491 || (this.type == 106 || this.type == 262) || (this.type == 271 || this.type == 270 || (this.type == 272 || this.type == 273)) || (this.type == 274 || this.type == 280 || (this.type == 288 || this.type == 301) || (this.type == 320 || this.type == 333 || (this.type == 335 || this.type == 343))) || (this.type == 344 || this.type == 497 || (this.type == 496 || this.type == 6) || (this.type == 19 || this.type == 113 || (this.type == 520 || this.type == 523)) || (this.type == 585 || this.type == 598 || (this.type == 599 || this.type == 636))))
                        {
                            num2 = 10;
                            num3 = 10;
                        }
                        else if (this.type == 514)
                        {
                            num2 = 4;
                            num3 = 4;
                        }
                        else if (this.type == 248 || this.type == 247 || (this.type == 507 || this.type == 508))
                        {
                            num2 = this.width - 12;
                            num3 = this.height - 12;
                        }
                        else if (this.aiStyle == 18 || this.type == 254)
                        {
                            num2 = this.width - 36;
                            num3 = this.height - 36;
                        }
                        else if (this.type == 182 || this.type == 190 || (this.type == 33 || this.type == 229) || (this.type == 237 || this.type == 243))
                        {
                            num2 = this.width - 20;
                            num3 = this.height - 20;
                        }
                        else if (this.aiStyle == 27)
                        {
                            num2 = this.width - 12;
                            num3 = this.height - 12;
                        }
                        else if (this.type == 533 && (double)this.ai[0] >= 6.0)
                        {
                            num2 = this.width + 6;
                            num3 = this.height + 6;
                        }
                        else if (this.type == 582 || this.type == 634 || this.type == 635)
                        {
                            num2 = 8;
                            num3 = 8;
                        }
                        else if (this.type == 617)
                        {
                            num2 = (int)(20.0 * (double)this.scale);
                            num3 = (int)(20.0 * (double)this.scale);
                        }
                        if ((this.type != 440 && this.type != 449 && this.type != 606 || (double)this.ai[1] != 1.0) && ((this.type != 466 || (double)this.localAI[1] != 1.0) && (this.type != 580 || (double)this.localAI[1] <= 0.0) && (this.type != 640 || (double)this.localAI[1] <= 0.0)))
                        {
                            if (this.aiStyle == 10)
                            {
                                if (this.type == 42 || this.type == 65 || (this.type == 68 || this.type == 354) || this.type == 31 && (double)this.ai[0] == 2.0)
                                    this.velocity = Collision.TileCollision(this.position, this.velocity, this.width, this.height, flag1, flag1, 1);
                                else
                                    this.velocity = Collision.AnyCollision(this.position, this.velocity, this.width, this.height);
                            }
                            else
                            {
                                Vector2 Position = this.position;
                                int Width = num2 != -1 ? num2 : this.width;
                                int Height = num3 != -1 ? num3 : this.height;
                                if (num3 != -1 || num2 != -1)
                                    Position = new Vector2(this.position.X + (float)(this.width / 2) - (float)(Width / 2), this.position.Y + (float)(this.height / 2) - (float)(Height / 2));
                                if (this.wet)
                                {
                                    if (this.honeyWet)
                                    {
                                        Vector2 vector2_3 = this.velocity;
                                        this.velocity = Collision.TileCollision(Position, this.velocity, Width, Height, flag1, flag1, 1);
                                        vector2_1 = this.velocity * 0.25f;
                                        if ((double)this.velocity.X != (double)vector2_3.X)
                                            vector2_1.X = this.velocity.X;
                                        if ((double)this.velocity.Y != (double)vector2_3.Y)
                                            vector2_1.Y = this.velocity.Y;
                                    }
                                    else
                                    {
                                        Vector2 vector2_3 = this.velocity;
                                        this.velocity = Collision.TileCollision(Position, this.velocity, Width, Height, flag1, flag1, 1);
                                        vector2_1 = this.velocity * 0.5f;
                                        if ((double)this.velocity.X != (double)vector2_3.X)
                                            vector2_1.X = this.velocity.X;
                                        if ((double)this.velocity.Y != (double)vector2_3.Y)
                                            vector2_1.Y = this.velocity.Y;
                                    }
                                }
                                else
                                {
                                    this.velocity = Collision.TileCollision(Position, this.velocity, Width, Height, flag1, flag1, 1);
                                    if (!Main.projPet[this.type])
                                    {
                                        Vector4 vector4 = Collision.SlopeCollision(Position, this.velocity, Width, Height, 0.0f, true);
                                        Vector2 vector2_3 = this.position - Position;
                                        if ((double)Position.X != (double)vector4.X)
                                            flag3 = true;
                                        if ((double)Position.Y != (double)vector4.Y)
                                            flag3 = true;
                                        if ((double)this.velocity.X != (double)vector4.Z)
                                            flag3 = true;
                                        if ((double)this.velocity.Y != (double)vector4.W)
                                            flag3 = true;
                                        Position.X = vector4.X;
                                        Position.Y = vector4.Y;
                                        this.position = Position + vector2_3;
                                        this.velocity.X = vector4.Z;
                                        this.velocity.Y = vector4.W;
                                    }
                                }
                            }
                        }
                        if (vector2_2 != this.velocity)
                            flag3 = true;
                        if (flag3)
                        {
                            if (this.type == 434)
                            {
                                Projectile projectile = this;
                                Vector2 vector2_3 = projectile.position + this.velocity;
                                projectile.position = vector2_3;
                                this.numUpdates = 0;
                            }
                            else if (this.type == 601)
                            {
                                if (this.owner == Main.myPlayer)
                                    PortalHelper.TryPlacingPortal(this, vector2_2, this.velocity);
                                Projectile projectile = this;
                                Vector2 vector2_3 = projectile.position + this.velocity;
                                projectile.position = vector2_3;
                                this.Kill();
                            }
                            else if (this.type == 451)
                            {
                                this.ai[0] = 1f;
                                this.ai[1] = 0.0f;
                                this.netUpdate = true;
                                this.velocity = vector2_2 / 2f;
                            }
                            else if (this.type == 645)
                            {
                                this.ai[0] = 0.0f;
                                this.ai[1] = -1f;
                                this.netUpdate = true;
                            }
                            else if (this.type == 584)
                            {
                                bool flag2 = false;
                                if ((double)this.velocity.X != (double)vector2_2.X)
                                {
                                    this.velocity.X = vector2_2.X * -0.75f;
                                    flag2 = true;
                                }
                                if ((double)this.velocity.Y != (double)vector2_2.Y && (double)vector2_2.Y > 2.0 || (double)this.velocity.Y == 0.0)
                                {
                                    this.velocity.Y = vector2_2.Y * -0.75f;
                                    flag2 = true;
                                }
                                if (flag2)
                                {
                                    float num4 = vector2_2.Length() / this.velocity.Length();
                                    if ((double)num4 == 0.0)
                                        num4 = 1f;
                                    Projectile projectile = this;
                                    Vector2 vector2_3 = projectile.velocity / num4;
                                    projectile.velocity = vector2_3;
                                    --this.penetrate;
                                }
                            }
                            else if (this.type == 532)
                            {
                                bool flag2 = false;
                                if ((double)this.velocity.X != (double)vector2_2.X)
                                {
                                    this.velocity.X = vector2_2.X * -0.75f;
                                    flag2 = true;
                                }
                                if ((double)this.velocity.Y != (double)vector2_2.Y && (double)vector2_2.Y > 2.0 || (double)this.velocity.Y == 0.0)
                                {
                                    this.velocity.Y = vector2_2.Y * -0.75f;
                                    flag2 = true;
                                }
                                if (flag2)
                                {
                                    float num4 = vector2_2.Length() / this.velocity.Length();
                                    if ((double)num4 == 0.0)
                                        num4 = 1f;
                                    Projectile projectile = this;
                                    Vector2 vector2_3 = projectile.velocity / num4;
                                    projectile.velocity = vector2_3;
                                    --this.penetrate;
                                    Collision.HitTiles(this.position, vector2_2, this.width, this.height);
                                }
                            }
                            else if (this.type == 533)
                            {
                                float num4 = 1f;
                                bool flag2 = false;
                                if ((double)this.velocity.X != (double)vector2_2.X)
                                {
                                    this.velocity.X = vector2_2.X * -num4;
                                    flag2 = true;
                                }
                                if ((double)this.velocity.Y != (double)vector2_2.Y || (double)this.velocity.Y == 0.0)
                                {
                                    this.velocity.Y = (float)((double)vector2_2.Y * -(double)num4 * 0.5);
                                    flag2 = true;
                                }
                                if (flag2)
                                {
                                    float num5 = vector2_2.Length() / this.velocity.Length();
                                    if ((double)num5 == 0.0)
                                        num5 = 1f;
                                    Projectile projectile = this;
                                    Vector2 vector2_3 = projectile.velocity / num5;
                                    projectile.velocity = vector2_3;
                                    if ((double)this.ai[0] == 7.0 && (double)this.velocity.Y < -0.1)
                                        this.velocity.Y += 0.1f;
                                    if ((double)this.ai[0] >= 6.0 && (double)this.ai[0] < 9.0)
                                        Collision.HitTiles(this.position, vector2_2, this.width, this.height);
                                }
                            }
                            else if (this.type == 502)
                            {
                                ++this.ai[0];
                                Main.PlaySound(37, (int)this.position.X, (int)this.position.Y, 5 + (int)this.ai[0]);
                                if ((double)this.ai[0] >= 5.0)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_3 = projectile.position + this.velocity;
                                    projectile.position = vector2_3;
                                    this.Kill();
                                }
                                else
                                {
                                    if ((double)this.velocity.Y != (double)vector2_2.Y)
                                        this.velocity.Y = -vector2_2.Y;
                                    if ((double)this.velocity.X != (double)vector2_2.X)
                                        this.velocity.X = -vector2_2.X;
                                }
                                Vector2 spinningpoint = Utils.RotatedByRandom(new Vector2(0.0f, -3f - this.ai[0]), 3.14159274101257);
                                float num4 = (float)(10.0 + (double)this.ai[0] * 4.0);
                                Vector2 vector2_4 = new Vector2(1.05f, 1f);
                                for (float num5 = 0.0f; (double)num5 < (double)num4; ++num5)
                                {
                                    int index = Dust.NewDust(this.Center, 0, 0, 66, 0.0f, 0.0f, 0, Color.Transparent, 1f);
                                    Main.dust[index].position = this.Center;
                                    Main.dust[index].velocity = Utils.RotatedBy(spinningpoint, 6.28318548202515 * (double)num5 / (double)num4, new Vector2()) * vector2_4 * (float)(0.800000011920929 + (double)Utils.NextFloat(Main.rand) * 0.400000005960464);
                                    Main.dust[index].color = Main.hslToRgb(num5 / num4, 1f, 0.5f);
                                    Main.dust[index].noGravity = true;
                                    Main.dust[index].scale = (float)(1.0 + (double)this.ai[0] / 3.0);
                                }
                                if (Main.myPlayer == this.owner)
                                {
                                    int num5 = this.width;
                                    int num6 = this.height;
                                    int num7 = this.penetrate;
                                    this.position = this.Center;
                                    this.width = this.height = 40 + 8 * (int)this.ai[0];
                                    this.Center = this.position;
                                    this.penetrate = -1;
                                    this.Damage();
                                    this.penetrate = num7;
                                    this.position = this.Center;
                                    this.width = num5;
                                    this.height = num6;
                                    this.Center = this.position;
                                }
                            }
                            else if (this.type == 444)
                            {
                                if ((double)this.velocity.X != (double)vector2_2.X)
                                    this.velocity.X = -vector2_2.X;
                                if ((double)this.velocity.Y != (double)vector2_2.Y)
                                    this.velocity.Y = -vector2_2.Y;
                                this.ai[0] = Utils.ToRotation(this.velocity);
                            }
                            else if (this.type == 617)
                            {
                                if ((double)this.velocity.X != (double)vector2_2.X)
                                    this.velocity.X = (float)(-(double)vector2_2.X * 0.349999994039536);
                                if ((double)this.velocity.Y != (double)vector2_2.Y)
                                    this.velocity.Y = (float)(-(double)vector2_2.Y * 0.349999994039536);
                            }
                            else if (this.type == 440 || this.type == 449 || this.type == 606)
                            {
                                if ((double)this.ai[1] != 1.0)
                                {
                                    this.ai[1] = 1f;
                                    Projectile projectile = this;
                                    Vector2 vector2_3 = projectile.position + this.velocity;
                                    projectile.position = vector2_3;
                                    this.velocity = vector2_2;
                                }
                            }
                            else if (this.type == 466 || this.type == 580 || this.type == 640)
                            {
                                if ((double)this.localAI[1] < 1.0)
                                {
                                    this.localAI[1] += 2f;
                                    Projectile projectile = this;
                                    Vector2 vector2_3 = projectile.position + this.velocity;
                                    projectile.position = vector2_3;
                                    this.velocity = Vector2.Zero;
                                }
                            }
                            else if (this.aiStyle == 54)
                            {
                                if ((double)this.velocity.X != (double)vector2_2.X)
                                    this.velocity.X = vector2_2.X * -0.6f;
                                if ((double)this.velocity.Y != (double)vector2_2.Y)
                                    this.velocity.Y = vector2_2.Y * -0.6f;
                            }
                            else if (!Main.projPet[this.type] && this.type != 500 && this.type != 650)
                            {
                                if (this.aiStyle == 99)
                                {
                                    if (this.type >= 556 && this.type <= 561)
                                    {
                                        bool flag2 = false;
                                        if ((double)this.velocity.X != (double)this.oldVelocity.X)
                                        {
                                            flag2 = true;
                                            this.velocity.X = this.oldVelocity.X * -1f;
                                        }
                                        if ((double)this.velocity.Y != (double)this.oldVelocity.Y)
                                        {
                                            flag2 = true;
                                            this.velocity.Y = this.oldVelocity.Y * -1f;
                                        }
                                        if (flag2)
                                        {
                                            Vector2 vector2_3 = Main.player[this.owner].Center - this.Center;
                                            vector2_3.Normalize();
                                            Vector2 vector2_4 = vector2_3 * this.velocity.Length() * 0.25f;
                                            Projectile projectile1 = this;
                                            Vector2 vector2_5 = projectile1.velocity * 0.75f;
                                            projectile1.velocity = vector2_5;
                                            Projectile projectile2 = this;
                                            Vector2 vector2_6 = projectile2.velocity + vector2_4;
                                            projectile2.velocity = vector2_6;
                                            if ((double)this.velocity.Length() > 6.0)
                                            {
                                                Projectile projectile3 = this;
                                                Vector2 vector2_7 = projectile3.velocity * 0.5f;
                                                projectile3.velocity = vector2_7;
                                            }
                                        }
                                    }
                                }
                                else if (this.type == 604)
                                {
                                    if ((double)this.velocity.X != (double)vector2_2.X)
                                        this.velocity.X = -vector2_2.X;
                                    if ((double)this.velocity.Y != (double)vector2_2.Y)
                                        this.velocity.Y = -vector2_2.Y;
                                }
                                else if (this.type == 379)
                                {
                                    if ((double)this.velocity.X != (double)vector2_2.X)
                                        this.velocity.X = vector2_2.X * -0.6f;
                                    if ((double)this.velocity.Y != (double)vector2_2.Y && (double)vector2_2.Y > 2.0)
                                        this.velocity.Y = vector2_2.Y * -0.6f;
                                }
                                else if (this.type == 491)
                                {
                                    if ((double)this.ai[0] <= 0.0)
                                        this.ai[0] = -10f;
                                    if ((double)this.velocity.X != (double)vector2_2.X && (double)Math.Abs(vector2_2.X) > 0.0)
                                        this.velocity.X = vector2_2.X * -1f;
                                    if ((double)this.velocity.Y != (double)vector2_2.Y && (double)Math.Abs(vector2_2.Y) > 0.0)
                                        this.velocity.Y = vector2_2.Y * -1f;
                                }
                                else if (this.type >= 515 && this.type <= 517 || this.type == 637)
                                {
                                    if ((double)this.velocity.X != (double)vector2_2.X && (double)Math.Abs(vector2_2.X) > 1.0)
                                        this.velocity.X = vector2_2.X * -0.9f;
                                    if ((double)this.velocity.Y != (double)vector2_2.Y && (double)Math.Abs(vector2_2.Y) > 1.0)
                                        this.velocity.Y = vector2_2.Y * -0.9f;
                                }
                                else if (this.type == 409)
                                {
                                    if ((double)this.velocity.X != (double)vector2_2.X)
                                        this.velocity.X = vector2_2.X * -1f;
                                    if ((double)this.velocity.Y != (double)vector2_2.Y)
                                        this.velocity.Y = vector2_2.Y * -1f;
                                }
                                else if (this.type == 254)
                                {
                                    this.tileCollide = false;
                                    this.velocity = vector2_2;
                                    if (this.timeLeft > 30)
                                        this.timeLeft = 30;
                                }
                                else if (this.type == 225 && this.penetrate > 0)
                                {
                                    this.velocity.X = -vector2_2.X;
                                    this.velocity.Y = -vector2_2.Y;
                                    --this.penetrate;
                                }
                                else if (this.type == 155)
                                {
                                    if ((double)this.ai[1] > 10.0)
                                    {
                                        string str = string.Concat(new object[4]
                    {
                      (object) this.name,
                      (object) " was hit ",
                      (object) this.ai[1],
                      (object) " times before touching the ground!"
                    });
                                        if (Main.netMode == 0)
                                            Main.NewText(str, byte.MaxValue, (byte)240, (byte)20, false);
                                        else if (Main.netMode == 2)
                                            NetMessage.SendData(25, -1, -1, str, (int)byte.MaxValue, (float)byte.MaxValue, 240f, 20f, 0, 0, 0);
                                    }
                                    this.ai[1] = 0.0f;
                                    if ((double)this.velocity.X != (double)vector2_2.X)
                                        this.velocity.X = vector2_2.X * -0.6f;
                                    if ((double)this.velocity.Y != (double)vector2_2.Y && (double)vector2_2.Y > 2.0)
                                        this.velocity.Y = vector2_2.Y * -0.6f;
                                }
                                else if (this.aiStyle == 33)
                                {
                                    if ((double)this.localAI[0] == 0.0)
                                    {
                                        if (this.wet)
                                        {
                                            Projectile projectile = this;
                                            Vector2 vector2_3 = projectile.position + vector2_2 / 2f;
                                            projectile.position = vector2_3;
                                        }
                                        else
                                        {
                                            Projectile projectile = this;
                                            Vector2 vector2_3 = projectile.position + vector2_2;
                                            projectile.position = vector2_3;
                                        }
                                        Projectile projectile1 = this;
                                        Vector2 vector2_4 = projectile1.velocity * 0.0f;
                                        projectile1.velocity = vector2_4;
                                        this.localAI[0] = 1f;
                                    }
                                }
                                else if (this.type != 308)
                                {
                                    if (this.type == 477)
                                    {
                                        if ((double)this.velocity.Y != (double)vector2_2.Y || (double)this.velocity.X != (double)vector2_2.X)
                                        {
                                            --this.penetrate;
                                            if (this.penetrate <= 0)
                                                this.Kill();
                                            if ((double)this.velocity.X != (double)vector2_2.X)
                                                this.velocity.X = -vector2_2.X;
                                            if ((double)this.velocity.Y != (double)vector2_2.Y)
                                                this.velocity.Y = -vector2_2.Y;
                                        }
                                        if (this.penetrate > 0 && this.owner == Main.myPlayer)
                                        {
                                            int[] numArray = new int[10];
                                            int maxValue = 0;
                                            int num4 = 700;
                                            int num5 = 20;
                                            for (int index = 0; index < 200; ++index)
                                            {
                                                if (Main.npc[index].CanBeChasedBy((object)this, false))
                                                {
                                                    float num6 = (this.Center - Main.npc[index].Center).Length();
                                                    if ((double)num6 > (double)num5 && (double)num6 < (double)num4 && Collision.CanHitLine(this.Center, 1, 1, Main.npc[index].Center, 1, 1))
                                                    {
                                                        numArray[maxValue] = index;
                                                        ++maxValue;
                                                        if (maxValue >= 9)
                                                            break;
                                                    }
                                                }
                                            }
                                            if (maxValue > 0)
                                            {
                                                int index = Main.rand.Next(maxValue);
                                                Vector2 vector2_3 = Main.npc[numArray[index]].Center - this.Center;
                                                float num6 = this.velocity.Length();
                                                vector2_3.Normalize();
                                                this.velocity = vector2_3 * num6;
                                                this.netUpdate = true;
                                            }
                                        }
                                    }
                                    else if (this.type == 94 || this.type == 496)
                                    {
                                        if ((double)this.velocity.X != (double)vector2_2.X)
                                        {
                                            if ((double)Math.Abs(this.velocity.X) < 1.0)
                                                this.velocity.X = -vector2_2.X;
                                            else
                                                this.Kill();
                                        }
                                        if ((double)this.velocity.Y != (double)vector2_2.Y)
                                        {
                                            if ((double)Math.Abs(this.velocity.Y) < 1.0)
                                                this.velocity.Y = -vector2_2.Y;
                                            else
                                                this.Kill();
                                        }
                                    }
                                    else if (this.type == 311)
                                    {
                                        if ((double)this.velocity.X != (double)vector2_2.X)
                                        {
                                            this.velocity.X = -vector2_2.X;
                                            ++this.ai[1];
                                        }
                                        if ((double)this.velocity.Y != (double)vector2_2.Y)
                                        {
                                            this.velocity.Y = -vector2_2.Y;
                                            ++this.ai[1];
                                        }
                                        if ((double)this.ai[1] > 4.0)
                                            this.Kill();
                                    }
                                    else if (this.type == 312)
                                    {
                                        if ((double)this.velocity.X != (double)vector2_2.X)
                                        {
                                            this.velocity.X = -vector2_2.X;
                                            ++this.ai[1];
                                        }
                                        if ((double)this.velocity.Y != (double)vector2_2.Y)
                                        {
                                            this.velocity.Y = -vector2_2.Y;
                                            ++this.ai[1];
                                        }
                                    }
                                    else if (this.type == 522 || this.type == 620)
                                    {
                                        if ((double)this.velocity.X != (double)vector2_2.X)
                                            this.velocity.X = -vector2_2.X;
                                        if ((double)this.velocity.Y != (double)vector2_2.Y)
                                            this.velocity.Y = -vector2_2.Y;
                                    }
                                    else if (this.type == 524)
                                    {
                                        this.ai[0] += 100f;
                                        if ((double)this.velocity.X != (double)vector2_2.X)
                                            this.velocity.X = -vector2_2.X;
                                        if ((double)this.velocity.Y != (double)vector2_2.Y)
                                            this.velocity.Y = -vector2_2.Y;
                                    }
                                    else if (this.aiStyle == 93)
                                    {
                                        if (this.velocity != vector2_2)
                                        {
                                            this.ai[1] = 0.0f;
                                            this.ai[0] = 1f;
                                            this.netUpdate = true;
                                            this.tileCollide = false;
                                            Projectile projectile1 = this;
                                            Vector2 vector2_3 = projectile1.position + this.velocity;
                                            projectile1.position = vector2_3;
                                            this.velocity = vector2_2;
                                            this.velocity.Normalize();
                                            Projectile projectile2 = this;
                                            Vector2 vector2_4 = projectile2.velocity * 3f;
                                            projectile2.velocity = vector2_4;
                                        }
                                    }
                                    else if (this.type == 281)
                                    {
                                        if ((double)(Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < 2.0 || (double)this.ai[1] == 2.0)
                                        {
                                            this.ai[1] = 2f;
                                        }
                                        else
                                        {
                                            if ((double)this.velocity.X != (double)vector2_2.X)
                                                this.velocity.X = (float)(-(double)vector2_2.X * 0.5);
                                            if ((double)this.velocity.Y != (double)vector2_2.Y)
                                                this.velocity.Y = (float)(-(double)vector2_2.Y * 0.5);
                                        }
                                    }
                                    else if (this.type == 290 || this.type == 294)
                                    {
                                        if ((double)this.velocity.X != (double)vector2_2.X)
                                        {
                                            this.position.X += this.velocity.X;
                                            this.velocity.X = -vector2_2.X;
                                        }
                                        if ((double)this.velocity.Y != (double)vector2_2.Y)
                                        {
                                            this.position.Y += this.velocity.Y;
                                            this.velocity.Y = -vector2_2.Y;
                                        }
                                    }
                                    else if ((this.type == 181 || this.type == 189 || (this.type == 357 || this.type == 566)) && this.penetrate > 0)
                                    {
                                        if (this.type == 357)
                                            this.damage = (int)((double)this.damage * 0.9);
                                        --this.penetrate;
                                        if ((double)this.velocity.X != (double)vector2_2.X)
                                            this.velocity.X = -vector2_2.X;
                                        if ((double)this.velocity.Y != (double)vector2_2.Y)
                                            this.velocity.Y = -vector2_2.Y;
                                    }
                                    else if (this.type == 307 && (double)this.ai[1] < 5.0)
                                    {
                                        ++this.ai[1];
                                        if ((double)this.velocity.X != (double)vector2_2.X)
                                            this.velocity.X = -vector2_2.X;
                                        if ((double)this.velocity.Y != (double)vector2_2.Y)
                                            this.velocity.Y = -vector2_2.Y;
                                    }
                                    else if (this.type == 99)
                                    {
                                        if ((double)this.velocity.Y != (double)vector2_2.Y && (double)vector2_2.Y > 5.0)
                                        {
                                            Collision.HitTiles(this.position, this.velocity, this.width, this.height);
                                            Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                                            this.velocity.Y = (float)(-(double)vector2_2.Y * 0.200000002980232);
                                        }
                                        if ((double)this.velocity.X != (double)vector2_2.X)
                                            this.Kill();
                                    }
                                    else if (this.type == 36)
                                    {
                                        if (this.penetrate > 1)
                                        {
                                            Collision.HitTiles(this.position, this.velocity, this.width, this.height);
                                            Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                                            --this.penetrate;
                                            if ((double)this.velocity.X != (double)vector2_2.X)
                                                this.velocity.X = -vector2_2.X;
                                            if ((double)this.velocity.Y != (double)vector2_2.Y)
                                                this.velocity.Y = -vector2_2.Y;
                                        }
                                        else
                                            this.Kill();
                                    }
                                    else if (this.aiStyle == 21)
                                    {
                                        if ((double)this.velocity.X != (double)vector2_2.X)
                                            this.velocity.X = -vector2_2.X;
                                        if ((double)this.velocity.Y != (double)vector2_2.Y)
                                            this.velocity.Y = -vector2_2.Y;
                                    }
                                    else if (this.aiStyle == 17)
                                    {
                                        if ((double)this.velocity.X != (double)vector2_2.X)
                                            this.velocity.X = vector2_2.X * -0.75f;
                                        if ((double)this.velocity.Y != (double)vector2_2.Y && (double)vector2_2.Y > 1.5)
                                            this.velocity.Y = vector2_2.Y * -0.7f;
                                    }
                                    else if (this.aiStyle == 15)
                                    {
                                        bool flag2 = false;
                                        if ((double)vector2_2.X != (double)this.velocity.X)
                                        {
                                            if ((double)Math.Abs(vector2_2.X) > 4.0)
                                                flag2 = true;
                                            this.position.X += this.velocity.X;
                                            this.velocity.X = (float)(-(double)vector2_2.X * 0.200000002980232);
                                        }
                                        if ((double)vector2_2.Y != (double)this.velocity.Y)
                                        {
                                            if ((double)Math.Abs(vector2_2.Y) > 4.0)
                                                flag2 = true;
                                            this.position.Y += this.velocity.Y;
                                            this.velocity.Y = (float)(-(double)vector2_2.Y * 0.200000002980232);
                                        }
                                        this.ai[0] = 1f;
                                        if (flag2)
                                        {
                                            this.netUpdate = true;
                                            Collision.HitTiles(this.position, this.velocity, this.width, this.height);
                                            Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                                        }
                                        if (this.wet)
                                            vector2_1 = this.velocity;
                                    }
                                    else if (this.aiStyle == 39)
                                    {
                                        Collision.HitTiles(this.position, this.velocity, this.width, this.height);
                                        if (this.type == 33 || this.type == 106)
                                        {
                                            if ((double)this.velocity.X != (double)vector2_2.X)
                                                this.velocity.X = -vector2_2.X;
                                            if ((double)this.velocity.Y != (double)vector2_2.Y)
                                                this.velocity.Y = -vector2_2.Y;
                                        }
                                        else
                                        {
                                            this.ai[0] = 1f;
                                            if (this.aiStyle == 3)
                                            {
                                                this.velocity.X = -vector2_2.X;
                                                this.velocity.Y = -vector2_2.Y;
                                            }
                                        }
                                        this.netUpdate = true;
                                        Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                                    }
                                    else if (this.aiStyle == 3 || this.aiStyle == 13 || (this.aiStyle == 69 || this.aiStyle == 109))
                                    {
                                        Collision.HitTiles(this.position, this.velocity, this.width, this.height);
                                        if (this.type == 33 || this.type == 106)
                                        {
                                            if ((double)this.velocity.X != (double)vector2_2.X)
                                                this.velocity.X = -vector2_2.X;
                                            if ((double)this.velocity.Y != (double)vector2_2.Y)
                                                this.velocity.Y = -vector2_2.Y;
                                        }
                                        else
                                        {
                                            this.ai[0] = 1f;
                                            if ((this.aiStyle == 3 || this.aiStyle == 109) && this.type != 383)
                                            {
                                                this.velocity.X = -vector2_2.X;
                                                this.velocity.Y = -vector2_2.Y;
                                            }
                                        }
                                        this.netUpdate = true;
                                        Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                                    }
                                    else if (this.aiStyle == 8 && this.type != 96)
                                    {
                                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                                        ++this.ai[0];
                                        if ((double)this.ai[0] >= 5.0 && this.type != 253 || this.type == 253 && (double)this.ai[0] >= 8.0)
                                        {
                                            Projectile projectile = this;
                                            Vector2 vector2_3 = projectile.position + this.velocity;
                                            projectile.position = vector2_3;
                                            this.Kill();
                                        }
                                        else
                                        {
                                            if (this.type == 15 && (double)this.velocity.Y > 4.0)
                                            {
                                                if ((double)this.velocity.Y != (double)vector2_2.Y)
                                                    this.velocity.Y = (float)(-(double)vector2_2.Y * 0.800000011920929);
                                            }
                                            else if ((double)this.velocity.Y != (double)vector2_2.Y)
                                                this.velocity.Y = -vector2_2.Y;
                                            if ((double)this.velocity.X != (double)vector2_2.X)
                                                this.velocity.X = -vector2_2.X;
                                        }
                                    }
                                    else if (this.aiStyle == 61)
                                    {
                                        if ((double)this.velocity.X != (double)vector2_2.X)
                                            this.velocity.X = vector2_2.X * -0.3f;
                                        if ((double)this.velocity.Y != (double)vector2_2.Y && (double)vector2_2.Y > 1.0)
                                            this.velocity.Y = vector2_2.Y * -0.3f;
                                    }
                                    else if (this.aiStyle == 14)
                                    {
                                        if (this.type == 261 && ((double)this.velocity.X != (double)vector2_2.X && ((double)vector2_2.X < -3.0 || (double)vector2_2.X > 3.0) || (double)this.velocity.Y != (double)vector2_2.Y && ((double)vector2_2.Y < -3.0 || (double)vector2_2.Y > 3.0)))
                                        {
                                            Collision.HitTiles(this.position, this.velocity, this.width, this.height);
                                            Main.PlaySound(0, (int)this.Center.X, (int)this.Center.Y, 1);
                                        }
                                        if (this.type >= 326 && this.type <= 328 && (double)this.velocity.X != (double)vector2_2.X)
                                            this.velocity.X = vector2_2.X * -0.1f;
                                        if (this.type >= 400 && this.type <= 402)
                                        {
                                            if ((double)this.velocity.X != (double)vector2_2.X)
                                                this.velocity.X = vector2_2.X * -0.1f;
                                        }
                                        else if (this.type == 50)
                                        {
                                            if ((double)this.velocity.X != (double)vector2_2.X)
                                                this.velocity.X = vector2_2.X * -0.2f;
                                            if ((double)this.velocity.Y != (double)vector2_2.Y && (double)vector2_2.Y > 1.5)
                                                this.velocity.Y = vector2_2.Y * -0.2f;
                                        }
                                        else if (this.type == 185)
                                        {
                                            if ((double)this.velocity.X != (double)vector2_2.X)
                                                this.velocity.X = vector2_2.X * -0.9f;
                                            if ((double)this.velocity.Y != (double)vector2_2.Y && (double)vector2_2.Y > 1.0)
                                                this.velocity.Y = vector2_2.Y * -0.9f;
                                        }
                                        else if (this.type == 277)
                                        {
                                            if ((double)this.velocity.X != (double)vector2_2.X)
                                                this.velocity.X = vector2_2.X * -0.9f;
                                            if ((double)this.velocity.Y != (double)vector2_2.Y && (double)vector2_2.Y > 3.0)
                                                this.velocity.Y = vector2_2.Y * -0.9f;
                                        }
                                        else if (this.type != 480)
                                        {
                                            if (this.type == 450)
                                            {
                                                if ((double)this.velocity.X != (double)vector2_2.X)
                                                    this.velocity.X = vector2_2.X * -0.1f;
                                            }
                                            else
                                            {
                                                if ((double)this.velocity.X != (double)vector2_2.X)
                                                    this.velocity.X = vector2_2.X * -0.5f;
                                                if ((double)this.velocity.Y != (double)vector2_2.Y && (double)vector2_2.Y > 1.0)
                                                    this.velocity.Y = vector2_2.Y * -0.5f;
                                            }
                                        }
                                    }
                                    else if (this.aiStyle == 16)
                                    {
                                        if ((double)this.velocity.X != (double)vector2_2.X)
                                        {
                                            this.velocity.X = vector2_2.X * -0.4f;
                                            if (this.type == 29)
                                                this.velocity.X = this.velocity.X * 0.8f;
                                        }
                                        if ((double)this.velocity.Y != (double)vector2_2.Y && (double)vector2_2.Y > 0.7 && this.type != 102)
                                        {
                                            this.velocity.Y = vector2_2.Y * -0.4f;
                                            if (this.type == 29)
                                                this.velocity.Y = this.velocity.Y * 0.8f;
                                        }
                                        if (this.type == 134 || this.type == 137 || (this.type == 140 || this.type == 143) || (this.type == 303 || this.type >= 338 && this.type <= 341))
                                        {
                                            Projectile projectile = this;
                                            Vector2 vector2_3 = projectile.velocity * 0.0f;
                                            projectile.velocity = vector2_3;
                                            this.alpha = (int)byte.MaxValue;
                                            this.timeLeft = 3;
                                        }
                                    }
                                    else if (this.aiStyle == 68)
                                    {
                                        Projectile projectile = this;
                                        Vector2 vector2_3 = projectile.velocity * 0.0f;
                                        projectile.velocity = vector2_3;
                                        this.alpha = (int)byte.MaxValue;
                                        this.timeLeft = 3;
                                    }
                                    else if (this.aiStyle != 9 || this.owner == Main.myPlayer)
                                    {
                                        Projectile projectile = this;
                                        Vector2 vector2_3 = projectile.position + this.velocity;
                                        projectile.position = vector2_3;
                                        this.Kill();
                                    }
                                }
                            }
                        }
                    }
                    if (this.aiStyle != 4 && this.aiStyle != 38 && this.aiStyle != 84 && (this.aiStyle != 7 || (double)this.ai[0] != 2.0) && (this.type != 440 && this.type != 449 && this.type != 606 || (double)this.ai[1] != 1.0) && ((this.aiStyle != 93 || (double)this.ai[0] >= 0.0) && this.type != 540))
                    {
                        if (this.wet)
                        {
                            Projectile projectile = this;
                            Vector2 vector2_2 = projectile.position + vector2_1;
                            projectile.position = vector2_2;
                        }
                        else
                        {
                            Projectile projectile = this;
                            Vector2 vector2_2 = projectile.position + this.velocity;
                            projectile.position = vector2_2;
                        }
                        if (Main.projPet[this.type] && this.tileCollide)
                        {
                            Vector4 vector4 = Collision.SlopeCollision(this.position, this.velocity, this.width, this.height, 0.0f, false);
                            this.position.X = vector4.X;
                            this.position.Y = vector4.Y;
                            this.velocity.X = vector4.Z;
                            this.velocity.Y = vector4.W;
                        }
                    }
                    if ((this.aiStyle != 3 || (double)this.ai[0] != 1.0) && (this.aiStyle != 7 || (double)this.ai[0] != 1.0) && ((this.aiStyle != 13 || (double)this.ai[0] != 1.0) && (this.aiStyle != 65 && this.aiStyle != 69)) && (this.aiStyle != 114 && this.aiStyle != 123 && (this.aiStyle != 112 && !this.manualDirectionChange) && (this.aiStyle != 67 && this.aiStyle != 26 && this.aiStyle != 15)))
                    {
                        if ((double)this.velocity.X < 0.0)
                            this.direction = -1;
                        else
                            this.direction = 1;
                    }
                    if (!this.active)
                        return;
                    this.ProjLight();
                    if (!this.npcProj && this.friendly && (Main.player[this.owner].magicQuiver && this.extraUpdates < 1) && this.arrow)
                        this.extraUpdates = 1;
                    if (this.type == 2 || this.type == 82)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1f);
                    else if (this.type == 172)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 135, 0.0f, 0.0f, 100, new Color(), 1f);
                    else if (this.type == 103)
                    {
                        int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 75, 0.0f, 0.0f, 100, new Color(), 1f);
                        if (Main.rand.Next(2) == 0)
                        {
                            Main.dust[index].noGravity = true;
                            Main.dust[index].scale *= 2f;
                        }
                    }
                    else if (this.type == 278)
                    {
                        int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 169, 0.0f, 0.0f, 100, new Color(), 1f);
                        if (Main.rand.Next(2) == 0)
                        {
                            Main.dust[index].noGravity = true;
                            Main.dust[index].scale *= 1.5f;
                        }
                    }
                    else if (this.type == 4)
                    {
                        if (Main.rand.Next(5) == 0)
                            Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 14, 0.0f, 0.0f, 150, new Color(), 1.1f);
                    }
                    else if (this.type == 5)
                    {
                        int Type;
                        switch (Main.rand.Next(3))
                        {
                            case 0:
                                Type = 15;
                                break;
                            case 1:
                                Type = 57;
                                break;
                            default:
                                Type = 58;
                                break;
                        }
                        Dust.NewDust(this.position, this.width, this.height, Type, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 150, new Color(), 1.2f);
                    }
                    this.Damage();
                    if (this.type == 434 && (double)this.localAI[0] == 0.0 && this.numUpdates == 0)
                    {
                        this.extraUpdates = 1;
                        this.velocity = Vector2.Zero;
                        this.localAI[0] = 1f;
                        this.localAI[1] = 0.9999f;
                        this.netUpdate = true;
                    }
                    if (Main.netMode != 1 && this.type == 99)
                        Collision.SwitchTiles(this.position, this.width, this.height, this.oldPosition, 3);
                    if (ProjectileID.Sets.TrailingMode[this.type] == 0)
                    {
                        for (int index = this.oldPos.Length - 1; index > 0; --index)
                            this.oldPos[index] = this.oldPos[index - 1];
                        this.oldPos[0] = this.position;
                    }
                    else if (ProjectileID.Sets.TrailingMode[this.type] == 1)
                    {
                        if (this.frameCounter == 0 || this.oldPos[0] == Vector2.Zero)
                        {
                            for (int index = this.oldPos.Length - 1; index > 0; --index)
                                this.oldPos[index] = this.oldPos[index - 1];
                            this.oldPos[0] = this.position;
                            if (this.velocity == Vector2.Zero && this.type == 466)
                            {
                                float num2 = (float)((double)this.rotation + 1.57079637050629 + (Main.rand.Next(2) == 1 ? -1.0 : 1.0) * 1.57079637050629);
                                float num3 = (float)(Main.rand.NextDouble() * 2.0 + 2.0);
                                Vector2 vector2_2 = new Vector2((float)Math.Cos((double)num2) * num3, (float)Math.Sin((double)num2) * num3);
                                int index = Dust.NewDust(this.oldPos[this.oldPos.Length - 1], 0, 0, 229, vector2_2.X, vector2_2.Y, 0, new Color(), 1f);
                                Main.dust[index].noGravity = true;
                                Main.dust[index].scale = 1.7f;
                            }
                            if (this.velocity == Vector2.Zero && this.type == 580)
                            {
                                float num2 = (float)((double)this.rotation + 1.57079637050629 + (Main.rand.Next(2) == 1 ? -1.0 : 1.0) * 1.57079637050629);
                                float num3 = (float)(Main.rand.NextDouble() * 2.0 + 2.0);
                                Vector2 vector2_2 = new Vector2((float)Math.Cos((double)num2) * num3, (float)Math.Sin((double)num2) * num3);
                                int index = Dust.NewDust(this.oldPos[this.oldPos.Length - 1], 0, 0, 229, vector2_2.X, vector2_2.Y, 0, new Color(), 1f);
                                Main.dust[index].noGravity = true;
                                Main.dust[index].scale = 1.7f;
                            }
                        }
                    }
                    else if (ProjectileID.Sets.TrailingMode[this.type] == 2)
                    {
                        for (int index = this.oldPos.Length - 1; index > 0; --index)
                        {
                            this.oldPos[index] = this.oldPos[index - 1];
                            this.oldRot[index] = this.oldRot[index - 1];
                            this.oldSpriteDirection[index] = this.oldSpriteDirection[index - 1];
                        }
                        this.oldPos[0] = this.position;
                        this.oldRot[0] = this.rotation;
                        this.oldSpriteDirection[0] = this.spriteDirection;
                    }
                    --this.timeLeft;
                    if (this.timeLeft <= 0)
                        this.Kill();
                    if (this.penetrate == 0)
                        this.Kill();
                    if (this.active && this.owner == Main.myPlayer)
                    {
                        if (this.netUpdate2)
                            this.netUpdate = true;
                        if (!this.active)
                            this.netSpam = 0;
                        if (this.netUpdate)
                        {
                            if (this.netSpam < 60)
                            {
                                this.netSpam += 5;
                                NetMessage.SendData(27, -1, -1, "", i, 0.0f, 0.0f, 0.0f, 0, 0, 0);
                                this.netUpdate2 = false;
                            }
                            else
                                this.netUpdate2 = true;
                        }
                        if (this.netSpam > 0)
                            --this.netSpam;
                    }
                }
            }
            this.netUpdate = false;
        }

        public void FishingCheck()
        {
            int index = (int)((double)this.Center.X / 16.0);
            int j1 = (int)((double)this.Center.Y / 16.0);
            if ((int)Main.tile[index, j1].liquid < 0)
                ++j1;
            bool flag1 = false;
            bool flag2 = false;
            int i1 = index;
            int i2 = index;
            while (i1 > 10 && (int)Main.tile[i1, j1].liquid > 0 && !WorldGen.SolidTile(i1, j1))
                --i1;
            while (i2 < Main.maxTilesX - 10 && (int)Main.tile[i2, j1].liquid > 0 && !WorldGen.SolidTile(i2, j1))
                ++i2;
            int num1 = 0;
            for (int i3 = i1; i3 <= i2; ++i3)
            {
                int j2 = j1;
                while ((int)Main.tile[i3, j2].liquid > 0 && !WorldGen.SolidTile(i3, j2) && j2 < Main.maxTilesY - 10)
                {
                    ++num1;
                    ++j2;
                    if (Main.tile[i3, j2].lava())
                        flag1 = true;
                    else if (Main.tile[i3, j2].honey())
                        flag2 = true;
                }
            }
            if (flag2)
                num1 = (int)((double)num1 * 1.5);
            if (num1 < 75)
            {
                Main.player[this.owner].displayedFishingInfo = "Not Enough Water!";
            }
            else
            {
                int num2 = Main.player[this.owner].FishingLevel();
                if (num2 == 0)
                    return;
                Main.player[this.owner].displayedFishingInfo = (string)(object)num2 + (object)" Fishing Power";
                if (num2 < 0)
                {
                    if (num2 != -1)
                        return;
                    Main.player[this.owner].displayedFishingInfo = "Warning!";
                    if (index >= 380 && index <= Main.maxTilesX - 380 || (num1 <= 1000 || NPC.AnyNPCs(370)))
                        return;
                    this.ai[1] = (float)(Main.rand.Next(-180, -60) - 100);
                    this.localAI[1] = (float)num2;
                    this.netUpdate = true;
                }
                else
                {
                    int num3 = 300;
                    float num4 = (float)(Main.maxTilesX / 4200);
                    float num5 = (float)(((double)this.position.Y / 16.0 - (60.0 + 10.0 * (double)(num4 * num4))) / (Main.worldSurface / 6.0));
                    if ((double)num5 < 0.25)
                        num5 = 0.25f;
                    if ((double)num5 > 1.0)
                        num5 = 1f;
                    int num6 = (int)((double)num3 * (double)num5);
                    float num7 = (float)num1 / (float)num6;
                    if ((double)num7 < 1.0)
                        num2 = (int)((double)num2 * (double)num7);
                    float num8 = 1f - num7;
                    if (num1 < num6)
                        Main.player[this.owner].displayedFishingInfo = string.Concat(new object[4]
            {
              (object) num2,
              (object) " (",
              (object) -Math.Round((double) num8 * 100.0),
              (object) "%) Fishing Power"
            });
                    int num9 = (num2 + 75) / 2;
                    if (Main.player[this.owner].wet || Main.rand.Next(100) > num9)
                        return;
                    int Type = 0;
                    int num10 = (double)j1 >= Main.worldSurface * 0.5 ? ((double)j1 >= Main.worldSurface ? ((double)j1 >= Main.rockLayer ? (j1 >= Main.maxTilesY - 300 ? 4 : 3) : 2) : 1) : 0;
                    int num11 = 150;
                    int maxValue1 = num11 / num2;
                    int maxValue2 = num11 * 2 / num2;
                    int maxValue3 = num11 * 7 / num2;
                    int maxValue4 = num11 * 15 / num2;
                    int maxValue5 = num11 * 30 / num2;
                    if (maxValue1 < 2)
                        maxValue1 = 2;
                    if (maxValue2 < 3)
                        maxValue2 = 3;
                    if (maxValue3 < 4)
                        maxValue3 = 4;
                    if (maxValue4 < 5)
                        maxValue4 = 5;
                    if (maxValue5 < 6)
                        maxValue5 = 6;
                    bool flag3 = false;
                    bool flag4 = false;
                    bool flag5 = false;
                    bool flag6 = false;
                    bool flag7 = false;
                    if (Main.rand.Next(maxValue1) == 0)
                        flag3 = true;
                    if (Main.rand.Next(maxValue2) == 0)
                        flag4 = true;
                    if (Main.rand.Next(maxValue3) == 0)
                        flag5 = true;
                    if (Main.rand.Next(maxValue4) == 0)
                        flag6 = true;
                    if (Main.rand.Next(maxValue5) == 0)
                        flag7 = true;
                    int num12 = 10;
                    if (Main.player[this.owner].cratePotion)
                        num12 += 10;
                    int type = Main.anglerQuestItemNetIDs[Main.anglerQuest];
                    if (Main.player[this.owner].HasItem(type))
                        type = -1;
                    if (Main.anglerQuestFinished)
                        type = -1;
                    if (flag1)
                    {
                        if (Main.player[this.owner].inventory[Main.player[this.owner].selectedItem].type != 2422)
                            return;
                        if (flag7)
                            Type = 2331;
                        else if (flag6)
                            Type = 2312;
                        else if (flag5)
                            Type = 2315;
                    }
                    else if (flag2)
                    {
                        if (flag5 || flag4 && Main.rand.Next(2) == 0)
                            Type = 2314;
                        else if (flag4 && type == 2451)
                            Type = 2451;
                    }
                    else if (Main.rand.Next(50) > num2 && Main.rand.Next(50) > num2 && num1 < num6)
                        Type = Main.rand.Next(2337, 2340);
                    else if (Main.rand.Next(100) < num12)
                        Type = flag6 || flag7 ? 2336 : (!flag5 || !Main.player[this.owner].ZoneCorrupt ? (!flag5 || !Main.player[this.owner].ZoneCrimson ? (!flag5 || !Main.player[this.owner].ZoneHoly ? (!flag5 || !Main.player[this.owner].ZoneDungeon ? (!flag5 || !Main.player[this.owner].ZoneJungle ? (!flag5 || num10 != 0 ? (!flag4 ? 2334 : 2335) : 3206) : 3208) : 3205) : 3207) : 3204) : 3203);
                    else if (flag7 && Main.rand.Next(5) == 0)
                        Type = 2423;
                    else if (flag7 && Main.rand.Next(5) == 0)
                        Type = 3225;
                    else if (flag7 && Main.rand.Next(10) == 0)
                        Type = 2420;
                    else if (!flag7 && !flag6 && (flag4 && Main.rand.Next(5) == 0))
                    {
                        Type = 3196;
                    }
                    else
                    {
                        bool flag8 = Main.player[this.owner].ZoneCorrupt;
                        bool flag9 = Main.player[this.owner].ZoneCrimson;
                        if (flag8 && flag9)
                        {
                            if (Main.rand.Next(2) == 0)
                                flag9 = false;
                            else
                                flag8 = false;
                        }
                        if (flag8)
                        {
                            if (flag7 && Main.hardMode && (Main.player[this.owner].ZoneSnow && num10 == 3) && Main.rand.Next(3) != 0)
                                Type = 2429;
                            else if (flag7 && Main.hardMode && Main.rand.Next(2) == 0)
                                Type = 3210;
                            else if (flag5)
                                Type = 2330;
                            else if (flag4 && type == 2454)
                                Type = 2454;
                            else if (flag4 && type == 2485)
                                Type = 2485;
                            else if (flag4 && type == 2457)
                                Type = 2457;
                            else if (flag4)
                                Type = 2318;
                        }
                        else if (flag9)
                        {
                            if (flag7 && Main.hardMode && (Main.player[this.owner].ZoneSnow && num10 == 3) && Main.rand.Next(3) != 0)
                                Type = 2429;
                            else if (flag7 && Main.hardMode && Main.rand.Next(2) == 0)
                                Type = 3211;
                            else if (flag4 && type == 2477)
                                Type = 2477;
                            else if (flag4 && type == 2463)
                                Type = 2463;
                            else if (flag4)
                                Type = 2319;
                            else if (flag3)
                                Type = 2305;
                        }
                        else if (Main.player[this.owner].ZoneHoly)
                        {
                            if (flag7 && Main.hardMode && (Main.player[this.owner].ZoneSnow && num10 == 3) && Main.rand.Next(3) != 0)
                                Type = 2429;
                            else if (flag7 && Main.hardMode && Main.rand.Next(2) == 0)
                                Type = 3209;
                            else if (num10 > 1 && flag6)
                                Type = 2317;
                            else if (num10 > 1 && flag5 && type == 2465)
                                Type = 2465;
                            else if (num10 < 2 && flag5 && type == 2468)
                                Type = 2468;
                            else if (flag5)
                                Type = 2310;
                            else if (flag4 && type == 2471)
                                Type = 2471;
                            else if (flag4)
                                Type = 2307;
                        }
                        if (Type == 0 && Main.player[this.owner].ZoneSnow)
                        {
                            if (num10 < 2 && flag4 && type == 2467)
                                Type = 2467;
                            else if (num10 == 1 && flag4 && type == 2470)
                                Type = 2470;
                            else if (num10 >= 2 && flag4 && type == 2484)
                                Type = 2484;
                            else if (num10 > 1 && flag4 && type == 2466)
                                Type = 2466;
                            else if (flag3 && Main.rand.Next(12) == 0 || flag4 && Main.rand.Next(6) == 0)
                                Type = 3197;
                            else if (flag4)
                                Type = 2306;
                            else if (flag3)
                                Type = 2299;
                            else if (num10 > 1 && Main.rand.Next(3) == 0)
                                Type = 2309;
                        }
                        if (Type == 0 && Main.player[this.owner].ZoneJungle)
                        {
                            if (Main.hardMode && flag7 && Main.rand.Next(2) == 0)
                                Type = 3018;
                            else if (num10 == 1 && flag4 && type == 2452)
                                Type = 2452;
                            else if (num10 == 1 && flag4 && type == 2483)
                                Type = 2483;
                            else if (num10 == 1 && flag4 && type == 2488)
                                Type = 2488;
                            else if (num10 >= 1 && flag4 && type == 2486)
                                Type = 2486;
                            else if (num10 > 1 && flag4)
                                Type = 2311;
                            else if (flag4)
                                Type = 2313;
                            else if (flag3)
                                Type = 2302;
                        }
                        if (Type == 0 && Main.shroomTiles > 200 && (flag4 && type == 2475))
                            Type = 2475;
                        if (Type == 0)
                        {
                            if (num10 <= 1 && (index < 380 || index > Main.maxTilesX - 380) && num1 > 1000)
                            {
                                Type = !flag6 || Main.rand.Next(2) != 0 ? (!flag6 ? (!flag5 || Main.rand.Next(5) != 0 ? (!flag5 || Main.rand.Next(2) != 0 ? (!flag4 || type != 2480 ? (!flag4 || type != 2481 ? (!flag4 ? (!flag3 || Main.rand.Next(2) != 0 ? (!flag3 ? 2297 : 2300) : 2301) : 2316) : 2481) : 2480) : 2332) : 2438) : 2342) : 2341;
                            }
                            else
                            {
                                int num13 = Main.sandTiles;
                            }
                        }
                        if (Type == 0)
                            Type = num10 >= 2 || !flag4 || type != 2461 ? (num10 != 0 || !flag4 || type != 2453 ? (num10 != 0 || !flag4 || type != 2473 ? (num10 != 0 || !flag4 || type != 2476 ? (num10 >= 2 || !flag4 || type != 2458 ? (num10 >= 2 || !flag4 || type != 2459 ? (num10 != 0 || !flag4 ? (num10 <= 0 || num10 >= 3 || (!flag4 || type != 2455) ? (num10 != 1 || !flag4 || type != 2479 ? (num10 != 1 || !flag4 || type != 2456 ? (num10 != 1 || !flag4 || type != 2474 ? (num10 <= 1 || !flag5 || Main.rand.Next(5) != 0 ? (num10 <= 1 || !flag7 ? (num10 <= 1 || !flag6 || Main.rand.Next(2) != 0 ? (num10 <= 1 || !flag5 ? (num10 <= 1 || !flag4 || type != 2478 ? (num10 <= 1 || !flag4 || type != 2450 ? (num10 <= 1 || !flag4 || type != 2464 ? (num10 <= 1 || !flag4 || type != 2469 ? (num10 <= 2 || !flag4 || type != 2462 ? (num10 <= 2 || !flag4 || type != 2482 ? (num10 <= 2 || !flag4 || type != 2472 ? (num10 <= 2 || !flag4 || type != 2460 ? (num10 <= 1 || !flag4 || Main.rand.Next(4) == 0 ? (num10 <= 1 || !flag4 && !flag3 && Main.rand.Next(4) != 0 ? (!flag4 || type != 2487 ? (num1 <= 1000 || !flag3 ? 2290 : 2298) : 2487) : (Main.rand.Next(4) != 0 ? 2309 : 2303)) : 2303) : 2460) : 2472) : 2482) : 2462) : 2469) : 2464) : 2450) : 2478) : 2321) : 2320) : 2308) : (!Main.hardMode || Main.rand.Next(2) != 0 ? 2436 : 2437)) : 2474) : 2456) : 2479) : 2455) : 2304) : 2459) : 2458) : 2476) : 2473) : 2453) : 2461;
                    }
                    if (Type <= 0)
                        return;
                    if (Main.player[this.owner].sonarPotion)
                    {
                        Item newItem = new Item();
                        newItem.SetDefaults(Type, false);
                        newItem.position = this.position;
                        ItemText.NewText(newItem, 1, true, false);
                    }
                    float num14 = (float)num2;
                    this.ai[1] = (float)Main.rand.Next(-240, -90) - num14;
                    this.localAI[1] = (float)Type;
                    this.netUpdate = true;
                }
            }
        }

        public bool CanReflect()
        {
            return this.active && this.friendly && (!this.hostile && this.damage > 0) && (this.aiStyle == 1 || this.aiStyle == 2 || (this.aiStyle == 8 || this.aiStyle == 21) || (this.aiStyle == 24 || this.aiStyle == 28 || this.aiStyle == 29));
        }

        public float GetPrismHue(float indexing)
        {
            if (Main.player[this.owner].active)
            {
                switch (Main.player[this.owner].name)
                {
                    case "Tsuki":
                    case "Yoraiz0r":
                        return 0.85f;
                    case "Ghostar":
                        return 0.33f;
                    case "Devalaous":
                        return (float)(0.660000026226044 + Math.Cos(Main.time / 180.0 * 6.28318548202515) * 0.100000001490116);
                    case "Leinfors":
                        return 0.77f;
                    case "Aeroblop":
                        return (float)(0.25 + Math.Cos(Main.time / 180.0 * 6.28318548202515) * 0.100000001490116);
                    case "Doylee":
                        return 0.0f;
                    case "Darkhalis":
                    case "Arkhalis":
                        return (float)(0.75 + Math.Cos(Main.time / 180.0 * 6.28318548202515) * 0.0700000002980232);
                    case "Nike Leon":
                        return (float)(0.0750000029802322 + Math.Cos(Main.time / 180.0 * 6.28318548202515) * 0.0700000002980232);
                    case "Suweeka":
                        return (float)(0.5 + Math.Cos(Main.time / 180.0 * 6.28318548202515) * 0.180000007152557);
                    case "W1K":
                        return (float)(0.75 + Math.Cos(Main.time / 120.0 * 6.28318548202515) * 0.0500000007450581);
                    case "Random":
                        return Utils.NextFloat(Main.rand);
                }
            }
            return (float)(int)indexing / 6f;
        }

        public void ProjectileFixDesperation(int own)
        {
            switch (this.type)
            {
                case 461:
                case 632:
                case 642:
                case 644:
                    for (int index = 0; index < 1000; ++index)
                    {
                        if (Main.projectile[index].owner == this.owner && (double)Main.projectile[index].identity == (double)this.ai[1] && Main.projectile[index].active)
                        {
                            this.ai[1] = (float)index;
                            break;
                        }
                    }
                    break;
                case 626:
                case 627:
                case 628:
                    for (int index = 0; index < 1000; ++index)
                    {
                        if (Main.projectile[index].owner == this.owner && (double)Main.projectile[index].identity == (double)this.ai[0] && Main.projectile[index].active)
                        {
                            this.ai[0] = (float)index;
                            break;
                        }
                    }
                    break;
            }
        }

        public void AI()
        {
            // ISSUE: unable to decompile the method.
        }

        private void AI_001()
        {
            if (this.type == 469 && this.wet && !this.honeyWet)
                this.Kill();
            if (this.type == 601)
            {
                Color portalColor = PortalHelper.GetPortalColor(this.owner, (int)this.ai[0]);
                Lighting.AddLight(this.Center + this.velocity * 3f, portalColor.ToVector3() * 0.5f);
                if (this.alpha > 0 && this.alpha <= 15)
                {
                    Color color = portalColor;
                    color.A = byte.MaxValue;
                    for (int index = 0; index < 4; ++index)
                    {
                        Vector2 vector2 = Utils.RotatedByRandom(Vector2.UnitY, 6.28318548202515) * (3f * Utils.NextFloat(Main.rand));
                        Dust dust = Main.dust[Dust.NewDust(this.Center, 0, 0, 264, 0.0f, 0.0f, 0, new Color(), 1f)];
                        dust.position = this.Center;
                        dust.velocity = this.velocity * 2f + Utils.RandomVector2(Main.rand, -1f, 1f);
                        dust.color = color;
                        dust.scale = 1.2f;
                        dust.noLight = true;
                        dust.noGravity = true;
                        dust.customData = (object)Main.player[this.owner];
                    }
                }
                this.alpha -= 15;
                if (this.alpha < 0)
                    this.alpha = 0;
                if (++this.frameCounter >= 4)
                {
                    this.frameCounter = 0;
                    if (++this.frame >= Main.projFrames[this.type])
                        this.frame = 0;
                }
                if (this.alpha == 0)
                {
                    Color color = portalColor;
                    color.A = byte.MaxValue;
                    Dust dust = Main.dust[Dust.NewDust(this.Center, 0, 0, 263, 0.0f, 0.0f, 0, new Color(), 1f)];
                    dust.position = this.Center;
                    dust.velocity = this.velocity / 4f;
                    dust.color = color;
                    dust.noGravity = true;
                    dust.scale = 0.6f;
                }
            }
            if (this.type == 472)
            {
                int index1 = Dust.NewDust(this.position, this.width, this.height, 30, 0.0f, 0.0f, 0, new Color(), 1f);
                Main.dust[index1].noGravity = true;
                Main.dust[index1].velocity *= 0.25f;
                Main.dust[index1].velocity += this.velocity * 0.75f;
                if ((double)this.localAI[0] == 0.0)
                {
                    this.localAI[0] = 1f;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
                    for (int index2 = 0; index2 < 20; ++index2)
                    {
                        int index3 = Dust.NewDust(this.position, this.width, this.height, 30, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index3].noGravity = true;
                        Main.dust[index3].velocity *= 0.25f;
                        Main.dust[index3].velocity += this.velocity;
                        Main.dust[index3].velocity.X *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                        Main.dust[index3].velocity.Y *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                    }
                }
            }
            if (this.type == 323)
            {
                this.alpha -= 50;
                if (this.alpha < 0)
                    this.alpha = 0;
            }
            if (this.type == 436)
            {
                if ((double)this.ai[1] == 0.0)
                {
                    this.ai[1] = 1f;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
                }
                this.alpha -= 40;
                if (this.alpha < 0)
                    this.alpha = 0;
                this.spriteDirection = this.direction;
                ++this.frameCounter;
                if (this.frameCounter >= 3)
                {
                    ++this.frame;
                    this.frameCounter = 0;
                    if (this.frame >= 4)
                        this.frame = 0;
                }
                Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, 0.3f, 1.1f, 0.5f);
            }
            if (this.type == 467)
            {
                if ((double)this.ai[1] == 0.0)
                {
                    this.ai[1] = 1f;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 34);
                }
                else if ((double)this.ai[1] == 1.0 && Main.netMode != 1)
                {
                    int num1 = -1;
                    float num2 = 2000f;
                    for (int index = 0; index < (int)byte.MaxValue; ++index)
                    {
                        if (Main.player[index].active && !Main.player[index].dead)
                        {
                            Vector2 center = Main.player[index].Center;
                            float num3 = Vector2.Distance(center, this.Center);
                            if (((double)num3 < (double)num2 || num1 == -1) && Collision.CanHit(this.Center, 1, 1, center, 1, 1))
                            {
                                num2 = num3;
                                num1 = index;
                            }
                        }
                    }
                    if ((double)num2 < 20.0)
                    {
                        this.Kill();
                        return;
                    }
                    if (num1 != -1)
                    {
                        this.ai[1] = 21f;
                        this.ai[0] = (float)num1;
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.ai[1] > 20.0 && (double)this.ai[1] < 200.0)
                {
                    ++this.ai[1];
                    int index = (int)this.ai[0];
                    if (!Main.player[index].active || Main.player[index].dead)
                    {
                        this.ai[1] = 1f;
                        this.ai[0] = 0.0f;
                        this.netUpdate = true;
                    }
                    else
                    {
                        float curAngle = Utils.ToRotation(this.velocity);
                        Vector2 v = Main.player[index].Center - this.Center;
                        if ((double)v.Length() < 20.0)
                        {
                            this.Kill();
                            return;
                        }
                        float targetAngle = Utils.ToRotation(v);
                        if (v == Vector2.Zero)
                            targetAngle = curAngle;
                        this.velocity = Utils.RotatedBy(new Vector2(this.velocity.Length(), 0.0f), (double)Utils.AngleLerp(curAngle, targetAngle, 0.008f), new Vector2());
                    }
                }
                if ((double)this.ai[1] >= 1.0 && (double)this.ai[1] < 20.0)
                {
                    ++this.ai[1];
                    if ((double)this.ai[1] == 20.0)
                        this.ai[1] = 1f;
                }
                this.alpha -= 40;
                if (this.alpha < 0)
                    this.alpha = 0;
                this.spriteDirection = this.direction;
                ++this.frameCounter;
                if (this.frameCounter >= 3)
                {
                    ++this.frame;
                    this.frameCounter = 0;
                    if (this.frame >= 4)
                        this.frame = 0;
                }
                Lighting.AddLight(this.Center, 1.1f, 0.9f, 0.4f);
                ++this.localAI[0];
                if ((double)this.localAI[0] == 12.0)
                {
                    this.localAI[0] = 0.0f;
                    for (int index1 = 0; index1 < 12; ++index1)
                    {
                        Vector2 vector2 = Utils.RotatedBy(Vector2.UnitX * (float)-this.width / 2f + -Utils.RotatedBy(Vector2.UnitY, (double)index1 * 3.14159274101257 / 6.0, new Vector2()) * new Vector2(8f, 16f), (double)this.rotation - 1.57079637050629, new Vector2());
                        int index2 = Dust.NewDust(this.Center, 0, 0, 6, 0.0f, 0.0f, 160, new Color(), 1f);
                        Main.dust[index2].scale = 1.1f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].position = this.Center + vector2;
                        Main.dust[index2].velocity = this.velocity * 0.1f;
                        Main.dust[index2].velocity = Vector2.Normalize(this.Center - this.velocity * 3f - Main.dust[index2].position) * 1.25f;
                    }
                }
                if (Main.rand.Next(4) == 0)
                {
                    for (int index1 = 0; index1 < 1; ++index1)
                    {
                        Vector2 vector2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.196349546313286), (double)Utils.ToRotation(this.velocity), new Vector2());
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.1f;
                        Main.dust[index2].position = this.Center + vector2 * (float)this.width / 2f;
                        Main.dust[index2].fadeIn = 0.9f;
                    }
                }
                if (Main.rand.Next(32) == 0)
                {
                    for (int index1 = 0; index1 < 1; ++index1)
                    {
                        Vector2 vector2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.392699092626572), (double)Utils.ToRotation(this.velocity), new Vector2());
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 31, 0.0f, 0.0f, 155, new Color(), 0.8f);
                        Main.dust[index2].velocity *= 0.3f;
                        Main.dust[index2].position = this.Center + vector2 * (float)this.width / 2f;
                        if (Main.rand.Next(2) == 0)
                            Main.dust[index2].fadeIn = 1.4f;
                    }
                }
                if (Main.rand.Next(2) == 0)
                {
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        Vector2 vector2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.785398185253143), (double)Utils.ToRotation(this.velocity), new Vector2());
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 6, 0.0f, 0.0f, 0, new Color(), 1.2f);
                        Main.dust[index2].velocity *= 0.3f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].position = this.Center + vector2 * (float)this.width / 2f;
                        if (Main.rand.Next(2) == 0)
                            Main.dust[index2].fadeIn = 1.4f;
                    }
                }
            }
            if (this.type == 468)
            {
                if ((double)this.ai[1] == 0.0)
                {
                    this.ai[1] = 1f;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 34);
                }
                else if ((double)this.ai[1] == 1.0 && Main.netMode != 1)
                {
                    int num1 = -1;
                    float num2 = 2000f;
                    for (int index = 0; index < (int)byte.MaxValue; ++index)
                    {
                        if (Main.player[index].active && !Main.player[index].dead)
                        {
                            Vector2 center = Main.player[index].Center;
                            float num3 = Vector2.Distance(center, this.Center);
                            if (((double)num3 < (double)num2 || num1 == -1) && Collision.CanHit(this.Center, 1, 1, center, 1, 1))
                            {
                                num2 = num3;
                                num1 = index;
                            }
                        }
                    }
                    if ((double)num2 < 20.0)
                    {
                        this.Kill();
                        return;
                    }
                    if (num1 != -1)
                    {
                        this.ai[1] = 21f;
                        this.ai[0] = (float)num1;
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.ai[1] > 20.0 && (double)this.ai[1] < 200.0)
                {
                    ++this.ai[1];
                    int index = (int)this.ai[0];
                    if (!Main.player[index].active || Main.player[index].dead)
                    {
                        this.ai[1] = 1f;
                        this.ai[0] = 0.0f;
                        this.netUpdate = true;
                    }
                    else
                    {
                        float curAngle = Utils.ToRotation(this.velocity);
                        Vector2 v = Main.player[index].Center - this.Center;
                        if ((double)v.Length() < 20.0)
                        {
                            this.Kill();
                            return;
                        }
                        float targetAngle = Utils.ToRotation(v);
                        if (v == Vector2.Zero)
                            targetAngle = curAngle;
                        this.velocity = Utils.RotatedBy(new Vector2(this.velocity.Length(), 0.0f), (double)Utils.AngleLerp(curAngle, targetAngle, 0.01f), new Vector2());
                    }
                }
                if ((double)this.ai[1] >= 1.0 && (double)this.ai[1] < 20.0)
                {
                    ++this.ai[1];
                    if ((double)this.ai[1] == 20.0)
                        this.ai[1] = 1f;
                }
                this.alpha -= 40;
                if (this.alpha < 0)
                    this.alpha = 0;
                this.spriteDirection = this.direction;
                ++this.frameCounter;
                if (this.frameCounter >= 3)
                {
                    ++this.frame;
                    this.frameCounter = 0;
                    if (this.frame >= 4)
                        this.frame = 0;
                }
                Lighting.AddLight(this.Center, 0.2f, 0.1f, 0.6f);
                ++this.localAI[0];
                if ((double)this.localAI[0] == 12.0)
                {
                    this.localAI[0] = 0.0f;
                    for (int index1 = 0; index1 < 12; ++index1)
                    {
                        Vector2 vector2 = Utils.RotatedBy(Vector2.UnitX * (float)-this.width / 2f + -Utils.RotatedBy(Vector2.UnitY, (double)index1 * 3.14159274101257 / 6.0, new Vector2()) * new Vector2(8f, 16f), (double)this.rotation - 1.57079637050629, new Vector2());
                        int index2 = Dust.NewDust(this.Center, 0, 0, 27, 0.0f, 0.0f, 160, new Color(), 1f);
                        Main.dust[index2].scale = 1.1f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].position = this.Center + vector2;
                        Main.dust[index2].velocity = this.velocity * 0.1f;
                        Main.dust[index2].velocity = Vector2.Normalize(this.Center - this.velocity * 3f - Main.dust[index2].position) * 1.25f;
                    }
                }
                if (Main.rand.Next(4) == 0)
                {
                    for (int index1 = 0; index1 < 1; ++index1)
                    {
                        Vector2 vector2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.196349546313286), (double)Utils.ToRotation(this.velocity), new Vector2());
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.1f;
                        Main.dust[index2].position = this.Center + vector2 * (float)this.width / 2f;
                        Main.dust[index2].fadeIn = 0.9f;
                    }
                }
                if (Main.rand.Next(32) == 0)
                {
                    for (int index1 = 0; index1 < 1; ++index1)
                    {
                        Vector2 vector2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.392699092626572), (double)Utils.ToRotation(this.velocity), new Vector2());
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 31, 0.0f, 0.0f, 155, new Color(), 0.8f);
                        Main.dust[index2].velocity *= 0.3f;
                        Main.dust[index2].position = this.Center + vector2 * (float)this.width / 2f;
                        if (Main.rand.Next(2) == 0)
                            Main.dust[index2].fadeIn = 1.4f;
                    }
                }
                if (Main.rand.Next(2) == 0)
                {
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        Vector2 vector2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.785398185253143), (double)Utils.ToRotation(this.velocity), new Vector2());
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 27, 0.0f, 0.0f, 0, new Color(), 1.2f);
                        Main.dust[index2].velocity *= 0.3f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].position = this.Center + vector2 * (float)this.width / 2f;
                        if (Main.rand.Next(2) == 0)
                            Main.dust[index2].fadeIn = 1.4f;
                    }
                }
            }
            if (this.type == 634 || this.type == 635)
            {
                float num1 = 5f;
                float num2 = 250f;
                float num3 = 6f;
                Vector2 vector2_1 = new Vector2(8f, 10f);
                float num4 = 1.2f;
                Vector3 rgb = new Vector3(0.7f, 0.1f, 0.5f);
                int num5 = 4 * this.MaxUpdates;
                int Type1 = Utils.SelectRandom<int>(Main.rand, 242, 73, 72, 71, (int)byte.MaxValue);
                int Type2 = (int)byte.MaxValue;
                if (this.type == 635)
                {
                    vector2_1 = new Vector2(10f, 20f);
                    num4 = 1f;
                    num2 = 500f;
                    Type2 = 88;
                    num5 = 3 * this.MaxUpdates;
                    rgb = new Vector3(0.4f, 0.6f, 0.9f);
                    Type1 = Utils.SelectRandom<int>(Main.rand, 242, 59, 88);
                }
                if ((double)this.ai[1] == 0.0)
                {
                    this.ai[1] = 1f;
                    this.localAI[0] = (float)-Main.rand.Next(48);
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 34);
                }
                else if ((double)this.ai[1] == 1.0 && this.owner == Main.myPlayer)
                {
                    int num6 = -1;
                    float num7 = num2;
                    for (int index = 0; index < 200; ++index)
                    {
                        if (Main.npc[index].active && Main.npc[index].CanBeChasedBy((object)this, false))
                        {
                            Vector2 center = Main.npc[index].Center;
                            float num8 = Vector2.Distance(center, this.Center);
                            if ((double)num8 < (double)num7 && num6 == -1 && Collision.CanHitLine(this.Center, 1, 1, center, 1, 1))
                            {
                                num7 = num8;
                                num6 = index;
                            }
                        }
                    }
                    if ((double)num7 < 20.0)
                    {
                        this.Kill();
                        return;
                    }
                    if (num6 != -1)
                    {
                        this.ai[1] = num1 + 1f;
                        this.ai[0] = (float)num6;
                        this.netUpdate = true;
                    }
                }
                else if ((double)this.ai[1] > (double)num1)
                {
                    ++this.ai[1];
                    int index = (int)this.ai[0];
                    if (!Main.npc[index].active || !Main.npc[index].CanBeChasedBy((object)this, false))
                    {
                        this.ai[1] = 1f;
                        this.ai[0] = 0.0f;
                        this.netUpdate = true;
                    }
                    else
                    {
                        double num6 = (double)Utils.ToRotation(this.velocity);
                        Vector2 vector2_2 = Main.npc[index].Center - this.Center;
                        if ((double)vector2_2.Length() < 20.0)
                        {
                            this.Kill();
                            return;
                        }
                        if (vector2_2 != Vector2.Zero)
                        {
                            vector2_2.Normalize();
                            vector2_2 *= num3;
                        }
                        float num7 = 30f;
                        this.velocity = (this.velocity * (num7 - 1f) + vector2_2) / num7;
                    }
                }
                if ((double)this.ai[1] >= 1.0 && (double)this.ai[1] < (double)num1)
                {
                    ++this.ai[1];
                    if ((double)this.ai[1] == (double)num1)
                        this.ai[1] = 1f;
                }
                this.alpha -= 40;
                if (this.alpha < 0)
                    this.alpha = 0;
                this.spriteDirection = this.direction;
                ++this.frameCounter;
                if (this.frameCounter >= num5)
                {
                    ++this.frame;
                    this.frameCounter = 0;
                    if (this.frame >= 4)
                        this.frame = 0;
                }
                Lighting.AddLight(this.Center, rgb);
                this.rotation = Utils.ToRotation(this.velocity);
                ++this.localAI[0];
                if ((double)this.localAI[0] == 48.0)
                    this.localAI[0] = 0.0f;
                else if (this.alpha == 0)
                {
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        Vector2 vector2_2 = Vector2.UnitX * -30f;
                        Vector2 vector2_3 = -Utils.RotatedBy(Vector2.UnitY, (double)this.localAI[0] * 0.130899697542191 + (double)index1 * 3.14159274101257, new Vector2()) * vector2_1 - Utils.ToRotationVector2(this.rotation) * 10f;
                        int index2 = Dust.NewDust(this.Center, 0, 0, Type2, 0.0f, 0.0f, 160, new Color(), 1f);
                        Main.dust[index2].scale = num4;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].position = this.Center + vector2_3 + this.velocity * 2f;
                        Main.dust[index2].velocity = Vector2.Normalize(this.Center + this.velocity * 2f * 8f - Main.dust[index2].position) * 2f + this.velocity * 2f;
                    }
                }
                if (Main.rand.Next(12) == 0)
                {
                    for (int index1 = 0; index1 < 1; ++index1)
                    {
                        Vector2 vector2_2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.196349546313286), (double)Utils.ToRotation(this.velocity), new Vector2());
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.1f;
                        Main.dust[index2].position = this.Center + vector2_2 * (float)this.width / 2f + this.velocity * 2f;
                        Main.dust[index2].fadeIn = 0.9f;
                    }
                }
                if (Main.rand.Next(64) == 0)
                {
                    for (int index1 = 0; index1 < 1; ++index1)
                    {
                        Vector2 vector2_2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.392699092626572), (double)Utils.ToRotation(this.velocity), new Vector2());
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 31, 0.0f, 0.0f, 155, new Color(), 0.8f);
                        Main.dust[index2].velocity *= 0.3f;
                        Main.dust[index2].position = this.Center + vector2_2 * (float)this.width / 2f;
                        if (Main.rand.Next(2) == 0)
                            Main.dust[index2].fadeIn = 1.4f;
                    }
                }
                if (Main.rand.Next(4) == 0)
                {
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        Vector2 vector2_2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.785398185253143), (double)Utils.ToRotation(this.velocity), new Vector2());
                        int index2 = Dust.NewDust(this.position, this.width, this.height, Type1, 0.0f, 0.0f, 0, new Color(), 1.2f);
                        Main.dust[index2].velocity *= 0.3f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].position = this.Center + vector2_2 * (float)this.width / 2f;
                        if (Main.rand.Next(2) == 0)
                            Main.dust[index2].fadeIn = 1.4f;
                    }
                }
                if (Main.rand.Next(12) == 0 && this.type == 634)
                {
                    Vector2 vector2_2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.196349546313286), (double)Utils.ToRotation(this.velocity), new Vector2());
                    int index = Dust.NewDust(this.position, this.width, this.height, Type2, 0.0f, 0.0f, 100, new Color(), 1f);
                    Main.dust[index].velocity *= 0.3f;
                    Main.dust[index].position = this.Center + vector2_2 * (float)this.width / 2f;
                    Main.dust[index].fadeIn = 0.9f;
                    Main.dust[index].noGravity = true;
                }
                if (Main.rand.Next(3) == 0 && this.type == 635)
                {
                    Vector2 vector2_2 = -Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 0.196349546313286), (double)Utils.ToRotation(this.velocity), new Vector2());
                    int index = Dust.NewDust(this.position, this.width, this.height, Type2, 0.0f, 0.0f, 100, new Color(), 1f);
                    Main.dust[index].velocity *= 0.3f;
                    Main.dust[index].position = this.Center + vector2_2 * (float)this.width / 2f;
                    Main.dust[index].fadeIn = 1.2f;
                    Main.dust[index].scale = 1.5f;
                    Main.dust[index].noGravity = true;
                }
            }
            if (this.type == 459)
            {
                this.alpha -= 30;
                if (this.alpha < 0)
                    this.alpha = 0;
                this.spriteDirection = this.direction;
                ++this.frameCounter;
                if (this.frameCounter >= 3)
                {
                    ++this.frame;
                    this.frameCounter = 0;
                    if (this.frame >= 3)
                        this.frame = 0;
                }
                this.position = this.Center;
                this.scale = this.ai[1];
                this.width = this.height = (int)(22.0 * (double)this.scale);
                this.Center = this.position;
                Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, 0.4f, 0.85f, 0.9f);
                int num;
                if ((double)this.scale < 0.85)
                {
                    num = Main.rand.Next(3) == 0 ? 1 : 0;
                }
                else
                {
                    num = 1;
                    this.penetrate = -1;
                    this.maxPenetrate = -1;
                }
                for (int index1 = 0; index1 < num; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 226, this.velocity.X, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].position -= Vector2.One * 3f;
                    Main.dust[index2].scale = 0.5f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity = this.velocity / 3f;
                    Main.dust[index2].alpha = (int)byte.MaxValue - (int)((double)byte.MaxValue * (double)this.scale);
                }
            }
            if (this.type == 442)
            {
                this.frame = 0;
                if (this.alpha != 0)
                {
                    ++this.localAI[0];
                    if ((double)this.localAI[0] >= 4.0)
                    {
                        this.alpha -= 90;
                        if (this.alpha < 0)
                        {
                            this.alpha = 0;
                            this.localAI[0] = 2f;
                        }
                    }
                }
                if ((double)Vector2.Distance(this.Center, new Vector2(this.ai[0], this.ai[1]) * 16f + Vector2.One * 8f) <= 16.0)
                {
                    this.Kill();
                    return;
                }
                if (this.alpha == 0)
                {
                    ++this.localAI[1];
                    if ((double)this.localAI[1] >= 120.0)
                    {
                        this.Kill();
                        return;
                    }
                    Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, 0.3f, 0.45f, 0.8f);
                    ++this.localAI[0];
                    if ((double)this.localAI[0] == 3.0)
                    {
                        this.localAI[0] = 0.0f;
                        for (int index1 = 0; index1 < 8; ++index1)
                        {
                            Vector2 vector2 = Utils.RotatedBy(Vector2.UnitX * -8f + -Utils.RotatedBy(Vector2.UnitY, (double)index1 * 3.14159274101257 / 4.0, new Vector2()) * new Vector2(2f, 4f), (double)this.rotation - 1.57079637050629, new Vector2());
                            int index2 = Dust.NewDust(this.Center, 0, 0, 135, 0.0f, 0.0f, 0, new Color(), 1f);
                            Main.dust[index2].scale = 1.5f;
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].position = this.Center + vector2;
                            Main.dust[index2].velocity = this.velocity * 0.66f;
                        }
                    }
                }
            }
            if (this.type == 440 || this.type == 449 || this.type == 606)
            {
                if (this.alpha > 0)
                    this.alpha -= 25;
                if (this.alpha < 0)
                    this.alpha = 0;
                if (this.type == 440)
                    Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, 0.25f, 0.4f, 0.7f);
                if (this.type == 449)
                    Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, 0.7f, 0.65f, 0.3f);
                if (this.type == 606)
                    Lighting.AddLight(this.Center, 0.7f, 0.3f, 0.3f);
                float num1 = 100f;
                float num2 = 3f;
                if (this.type == 606)
                {
                    num1 = 150f;
                    num2 = 5f;
                }
                if ((double)this.ai[1] == 0.0)
                {
                    this.localAI[0] += num2;
                    if ((double)this.localAI[0] == (double)num2 * 1.0 && this.type == 606)
                    {
                        for (int index1 = 0; index1 < 4; ++index1)
                        {
                            int index2 = Dust.NewDust(this.Center - this.velocity / 2f, 0, 0, 182, 0.0f, 0.0f, 100, new Color(), 1.4f);
                            Main.dust[index2].velocity *= 0.2f;
                            Main.dust[index2].velocity += this.velocity / 10f;
                            Main.dust[index2].noGravity = true;
                        }
                    }
                    if ((double)this.localAI[0] > (double)num1)
                        this.localAI[0] = num1;
                }
                else
                {
                    this.localAI[0] -= num2;
                    if ((double)this.localAI[0] <= 0.0)
                    {
                        this.Kill();
                        return;
                    }
                }
            }
            if (this.type == 438)
                Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, 0.4f, 0.1f, 0.2f);
            if (this.type == 593)
            {
                Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, 0.4f, 0.1f, 0.3f);
                if (++this.frameCounter >= 12)
                {
                    if (++this.frame >= Main.projFrames[this.type])
                        this.frame = 0;
                    this.frameCounter = 0;
                }
                if (Main.rand.Next(2) == 0)
                {
                    Vector2 spinningpoint = Utils.RotatedByRandom(Vector2.UnitY, 6.28318548202515);
                    Dust dust = Main.dust[Dust.NewDust(this.Center - spinningpoint * 8f, 0, 0, 240, 0.0f, 0.0f, 0, new Color(), 1f)];
                    dust.noGravity = true;
                    dust.position = this.Center - spinningpoint * 8f * this.scale;
                    dust.velocity = Utils.RotatedBy(spinningpoint, -1.57079637050629, new Vector2()) * 2f;
                    dust.velocity = Vector2.Zero;
                    dust.scale = 0.5f + Utils.NextFloat(Main.rand);
                    dust.fadeIn = 0.5f;
                }
            }
            if (this.type == 592)
                Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, 0.15f, 0.15f, 0.4f);
            if (this.type == 462)
            {
                int index = Dust.NewDust(this.Center, 0, 0, 229, 0.0f, 0.0f, 100, new Color(), 1f);
                Main.dust[index].noLight = true;
                Main.dust[index].noGravity = true;
                Main.dust[index].velocity = this.velocity;
                Main.dust[index].position -= Vector2.One * 4f;
                Main.dust[index].scale = 0.8f;
                if (++this.frameCounter >= 9)
                {
                    this.frameCounter = 0;
                    if (++this.frame >= 5)
                        this.frame = 0;
                }
            }
            if (this.type == 437)
            {
                if ((double)this.ai[1] == 0.0)
                {
                    this.ai[1] = 1f;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
                }
                if ((double)this.localAI[0] == 0.0)
                {
                    this.localAI[0] = 1f;
                    for (int index1 = 0; index1 < 4; ++index1)
                    {
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 226, this.velocity.X, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].position = Vector2.Lerp(Main.dust[index2].position, this.Center, 0.25f);
                        Main.dust[index2].scale = 0.5f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity /= 2f;
                        Main.dust[index2].velocity += this.velocity * 0.66f;
                    }
                }
                if ((double)this.ai[0] < 16.0)
                {
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 226, this.velocity.X, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].position = this.position + new Vector2((float)((this.direction == 1 ? 1 : 0) * this.width), (float)(2 + (this.height - 4) * index1));
                        Main.dust[index2].scale = 0.3f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity = Vector2.Zero;
                    }
                }
            }
            if (this.type == 435)
            {
                if ((double)this.ai[1] == 0.0)
                {
                    this.ai[1] = 1f;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
                }
                this.alpha -= 40;
                if (this.alpha < 0)
                    this.alpha = 0;
                this.spriteDirection = this.direction;
                ++this.frameCounter;
                if (this.frameCounter >= 3)
                {
                    ++this.frame;
                    this.frameCounter = 0;
                    if (this.frame >= 4)
                        this.frame = 0;
                }
                Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, 0.3f, 0.8f, 1.1f);
            }
            if (this.type == 408)
            {
                this.alpha -= 40;
                if (this.alpha < 0)
                    this.alpha = 0;
                this.spriteDirection = this.direction;
            }
            if (this.type == 282)
            {
                int index = Dust.NewDust(this.position, this.width, this.height, 171, 0.0f, 0.0f, 100, new Color(), 1f);
                Main.dust[index].scale = (float)Main.rand.Next(1, 10) * 0.1f;
                Main.dust[index].noGravity = true;
                Main.dust[index].fadeIn = 1.5f;
                Main.dust[index].velocity *= 0.25f;
                Main.dust[index].velocity += this.velocity * 0.25f;
            }
            if (this.type == 275 || this.type == 276)
            {
                ++this.frameCounter;
                if (this.frameCounter > 1)
                {
                    this.frameCounter = 0;
                    ++this.frame;
                    if (this.frame > 1)
                        this.frame = 0;
                }
            }
            if (this.type == 225)
            {
                int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 40, 0.0f, 0.0f, 0, new Color(), 1f);
                Main.dust[index].noGravity = true;
                Main.dust[index].scale = 1.3f;
                Main.dust[index].velocity *= 0.5f;
            }
            if (this.type == 174)
            {
                if (this.alpha == 0)
                {
                    int index = Dust.NewDust(this.oldPosition - this.velocity * 3f, this.width, this.height, 76, 0.0f, 0.0f, 50, new Color(), 1f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].noLight = true;
                    Main.dust[index].velocity *= 0.5f;
                }
                this.alpha -= 50;
                if (this.alpha < 0)
                    this.alpha = 0;
                if ((double)this.ai[1] == 0.0)
                {
                    this.ai[1] = 1f;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
                }
            }
            else if (this.type == 605)
            {
                if (this.alpha == 0 && Main.rand.Next(3) == 0)
                {
                    int index = Dust.NewDust(this.position - this.velocity * 3f, this.width, this.height, 4, 0.0f, 0.0f, 50, new Color(78, 136, (int)byte.MaxValue, 150), 1.2f);
                    Main.dust[index].velocity *= 0.3f;
                    Main.dust[index].velocity += this.velocity * 0.3f;
                    Main.dust[index].noGravity = true;
                }
                this.alpha -= 50;
                if (this.alpha < 0)
                    this.alpha = 0;
                if ((double)this.ai[1] == 0.0)
                {
                    this.ai[1] = 1f;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
                }
            }
            else if (this.type == 176)
            {
                if (this.alpha == 0)
                {
                    int index = Dust.NewDust(this.oldPosition, this.width, this.height, 22, 0.0f, 0.0f, 100, new Color(), 0.5f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].noLight = true;
                    Main.dust[index].velocity *= 0.15f;
                    Main.dust[index].fadeIn = 0.8f;
                }
                this.alpha -= 50;
                if (this.alpha < 0)
                    this.alpha = 0;
                if ((double)this.ai[1] == 0.0)
                {
                    this.ai[1] = 1f;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
                }
            }
            if (this.type == 350)
            {
                this.alpha -= 100;
                if (this.alpha < 0)
                    this.alpha = 0;
                Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, 0.9f, 0.6f, 0.2f);
                if (this.alpha == 0)
                {
                    int num = 2;
                    if (Main.rand.Next(2) == 0)
                    {
                        int index = Dust.NewDust(new Vector2(this.Center.X - (float)num, (float)((double)this.Center.Y - (double)num - 2.0)) - this.velocity * 0.5f, num * 2, num * 2, 6, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index].scale *= (float)(1.79999995231628 + (double)Main.rand.Next(10) * 0.100000001490116);
                        Main.dust[index].velocity *= 0.2f;
                        Main.dust[index].noGravity = true;
                    }
                    if (Main.rand.Next(4) == 0)
                    {
                        int index = Dust.NewDust(new Vector2(this.Center.X - (float)num, (float)((double)this.Center.Y - (double)num - 2.0)) - this.velocity * 0.5f, num * 2, num * 2, 31, 0.0f, 0.0f, 100, new Color(), 0.5f);
                        Main.dust[index].fadeIn = (float)(1.0 + (double)Main.rand.Next(5) * 0.100000001490116);
                        Main.dust[index].velocity *= 0.05f;
                    }
                }
                if ((double)this.ai[1] == 0.0)
                {
                    this.ai[1] = 1f;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 42);
                }
            }
            if (this.type == 325)
            {
                this.alpha -= 100;
                if (this.alpha < 0)
                    this.alpha = 0;
                Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, 0.9f, 0.6f, 0.2f);
                if (this.alpha == 0)
                {
                    int num = 2;
                    if (Main.rand.Next(2) == 0)
                    {
                        int index = Dust.NewDust(new Vector2(this.Center.X - (float)num, (float)((double)this.Center.Y - (double)num - 2.0)) - this.velocity * 0.5f, num * 2, num * 2, 6, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index].scale *= (float)(1.79999995231628 + (double)Main.rand.Next(10) * 0.100000001490116);
                        Main.dust[index].velocity *= 0.2f;
                        Main.dust[index].noGravity = true;
                    }
                    if (Main.rand.Next(4) == 0)
                    {
                        int index = Dust.NewDust(new Vector2(this.Center.X - (float)num, (float)((double)this.Center.Y - (double)num - 2.0)) - this.velocity * 0.5f, num * 2, num * 2, 31, 0.0f, 0.0f, 100, new Color(), 0.5f);
                        Main.dust[index].fadeIn = (float)(1.0 + (double)Main.rand.Next(5) * 0.100000001490116);
                        Main.dust[index].velocity *= 0.05f;
                    }
                }
                if ((double)this.ai[1] == 0.0)
                {
                    this.ai[1] = 1f;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 42);
                }
            }
            if (this.type == 469)
            {
                ++this.localAI[1];
                if ((double)this.localAI[1] > 2.0)
                {
                    this.alpha -= 50;
                    if (this.alpha < 0)
                        this.alpha = 0;
                }
            }
            else if (this.type == 83 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 33);
            }
            else if (this.type == 408 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 19);
            }
            else if (this.type == 259 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 33);
            }
            else if (this.type == 110 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 11);
            }
            else if (this.type == 302 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 11);
            }
            else if (this.type == 438 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
            }
            else if (this.type == 593 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 11);
            }
            else if (this.type == 592 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
            }
            else if (this.type == 462 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, Main.rand.Next(124, 126));
                Vector2 vector2 = Vector2.Normalize(this.velocity);
                int num = Main.rand.Next(5, 10);
                for (int index1 = 0; index1 < num; ++index1)
                {
                    int index2 = Dust.NewDust(this.Center, 0, 0, 229, 0.0f, 0.0f, 100, new Color(), 1f);
                    --Main.dust[index2].velocity.Y;
                    Main.dust[index2].velocity += vector2 * 2f;
                    Main.dust[index2].position -= Vector2.One * 4f;
                    Main.dust[index2].noGravity = true;
                }
            }
            else if (this.type == 84 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
            }
            else if (this.type == 389 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
            }
            else if (this.type == 257 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
            }
            else if (this.type == 100 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 33);
            }
            else if (this.type == 98 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
            }
            else if (this.type == 184 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
            }
            else if (this.type == 195 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
            }
            else if (this.type == 275 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
            }
            else if (this.type == 276 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
            }
            else if ((this.type == 81 || this.type == 82) && (double)this.ai[1] == 0.0)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 5);
                this.ai[1] = 1f;
            }
            else if (this.type == 180 && (double)this.ai[1] == 0.0)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 11);
                this.ai[1] = 1f;
            }
            else if (this.type == 248 && (double)this.ai[1] == 0.0)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
                this.ai[1] = 1f;
            }
            else if (this.type == 576 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 12);
            }
            else if (this.type == 577 && (double)this.ai[1] == 0.0)
            {
                this.ai[1] = 1f;
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 36);
            }
            else if (this.type == 639)
            {
                if ((double)this.localAI[0] == 0.0 && (double)this.localAI[1] == 0.0)
                {
                    this.localAI[0] = this.Center.X;
                    this.localAI[1] = this.Center.Y;
                    this.ai[0] = this.velocity.X;
                    this.ai[1] = this.velocity.Y;
                }
                this.alpha -= 25;
                if (this.alpha < 0)
                    this.alpha = 0;
            }
            else if (this.type == 640)
            {
                this.alpha -= 25;
                if (this.alpha < 0)
                    this.alpha = 0;
                if (this.velocity == Vector2.Zero)
                {
                    this.ai[0] = 0.0f;
                    bool flag = true;
                    for (int index = 1; index < this.oldPos.Length; ++index)
                    {
                        if (this.oldPos[index] != this.oldPos[0])
                            flag = false;
                    }
                    if (flag)
                    {
                        this.Kill();
                        return;
                    }
                    if (Main.rand.Next(this.extraUpdates) == 0 && (this.velocity != Vector2.Zero || Main.rand.Next((double)this.localAI[1] == 2.0 ? 2 : 6) == 0))
                    {
                        for (int index1 = 0; index1 < 2; ++index1)
                        {
                            float num1 = this.rotation + (float)((Main.rand.Next(2) == 1 ? -1.0 : 1.0) * 1.57079637050629);
                            float num2 = (float)(Main.rand.NextDouble() * 0.800000011920929 + 1.0);
                            Vector2 vector2 = new Vector2((float)Math.Cos((double)num1) * num2, (float)Math.Sin((double)num1) * num2);
                            int index2 = Dust.NewDust(this.Center, 0, 0, 229, vector2.X, vector2.Y, 0, new Color(), 1f);
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].scale = 1.2f;
                        }
                        if (Main.rand.Next(10) == 0)
                        {
                            int index = Dust.NewDust(this.Center + Utils.RotatedBy(this.velocity, 1.57079637050629, new Vector2()) * ((float)Main.rand.NextDouble() - 0.5f) * (float)this.width - Vector2.One * 4f, 8, 8, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                            Main.dust[index].velocity *= 0.5f;
                            Main.dust[index].velocity.Y = -Math.Abs(Main.dust[index].velocity.Y);
                        }
                    }
                }
                else if (this.numUpdates == 1)
                {
                    float num1 = (float)((double)this.rotation + 1.57079637050629 + (Main.rand.Next(2) == 1 ? -1.0 : 1.0) * 1.57079637050629);
                    float num2 = (float)(Main.rand.NextDouble() * 0.25 + 0.25);
                    Vector2 vector2 = new Vector2((float)Math.Cos((double)num1) * num2, (float)Math.Sin((double)num1) * num2);
                    int index = Dust.NewDust(this.position, 0, 0, 229, vector2.X, vector2.Y, 0, new Color(), 1f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].scale = 1.2f;
                }
            }
            if (this.type == 41)
            {
                int index1 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.6f);
                Main.dust[index1].noGravity = true;
                int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2f);
                Main.dust[index2].noGravity = true;
            }
            else if (this.type == 55)
            {
                int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 18, 0.0f, 0.0f, 0, new Color(), 0.9f);
                Main.dust[index].noGravity = true;
            }
            else if (this.type == 374)
            {
                if ((double)this.localAI[0] == 0.0)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
                    this.localAI[0] = 1f;
                }
                if (Main.rand.Next(2) == 0)
                {
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 18, 0.0f, 0.0f, 0, new Color(), 0.9f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity *= 0.5f;
                }
            }
            else if (this.type == 376)
            {
                if ((double)this.localAI[0] == 0.0)
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 20);
                ++this.localAI[0];
                if ((double)this.localAI[0] > 3.0)
                {
                    int num = 1;
                    if ((double)this.localAI[0] > 5.0)
                        num = 2;
                    for (int index1 = 0; index1 < num; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity.X *= 0.3f;
                        Main.dust[index2].velocity.Y *= 0.3f;
                        Main.dust[index2].noLight = true;
                    }
                    if (this.wet && !this.lavaWet)
                    {
                        this.Kill();
                        return;
                    }
                }
            }
            else if (this.type == 91 && Main.rand.Next(2) == 0)
            {
                int index = Dust.NewDust(this.position, this.width, this.height, Main.rand.Next(2) != 0 ? 58 : 15, this.velocity.X * 0.25f, this.velocity.Y * 0.25f, 150, new Color(), 0.9f);
                Main.dust[index].velocity *= 0.25f;
            }
            if (this.type == 163 || this.type == 310)
            {
                if (this.alpha > 0)
                    this.alpha -= 25;
                if (this.alpha < 0)
                    this.alpha = 0;
            }
            switch (this.type)
            {
                case 389:
                case 180:
                case 279:
                case 283:
                case 284:
                case 285:
                case 286:
                case 287:
                case 104:
                case 110:
                case 158:
                case 159:
                case 160:
                case 161:
                case 83:
                case 84:
                case 89:
                case 100:
                case 14:
                case 20:
                case 36:
                    if (this.alpha > 0)
                        this.alpha -= 15;
                    if (this.alpha < 0)
                    {
                        this.alpha = 0;
                        break;
                    }
                    break;
                case 576:
                case 577:
                    ++this.localAI[1];
                    if ((double)this.localAI[1] > 2.0)
                    {
                        if (this.alpha > 0)
                            this.alpha -= 15;
                        if (this.alpha < 0)
                        {
                            this.alpha = 0;
                            break;
                        }
                        break;
                    }
                    break;
            }
            if (this.type == 484)
            {
                int index = Dust.NewDust(this.position, this.width, this.height, 78, 0.0f, 0.0f, 0, new Color(), 1f);
                Main.dust[index].noGravity = true;
                Main.dust[index].velocity *= 0.1f;
                Main.dust[index].scale = 0.75f;
                Main.dust[index].position = (Main.dust[index].position + this.Center) / 2f;
                Main.dust[index].position += this.velocity * (float)Main.rand.Next(0, 101) * 0.01f;
            }
            if (this.type == 242 || this.type == 302 || (this.type == 438 || this.type == 462) || this.type == 592)
            {
                float num = (float)Math.Sqrt((double)this.velocity.X * (double)this.velocity.X + (double)this.velocity.Y * (double)this.velocity.Y);
                if (this.alpha > 0)
                    this.alpha -= (int)(byte)((double)num * 0.9);
                if (this.alpha < 0)
                    this.alpha = 0;
            }
            if (this.type == 638)
            {
                float num1 = this.velocity.Length();
                if (this.alpha > 0)
                    this.alpha -= (int)(byte)((double)num1 * 0.3);
                if (this.alpha < 0)
                    this.alpha = 0;
                Rectangle hitbox = this.Hitbox;
                hitbox.Offset((int)this.velocity.X, (int)this.velocity.Y);
                bool flag = false;
                for (int index = 0; index < 200; ++index)
                {
                    if (Main.npc[index].active && !Main.npc[index].dontTakeDamage && (Main.npc[index].immune[this.owner] == 0 && this.npcImmune[index] == 0) && Main.npc[index].Hitbox.Intersects(hitbox))
                    {
                        flag = true;
                        break;
                    }
                }
                if (flag)
                {
                    int num2 = Main.rand.Next(15, 31);
                    for (int index1 = 0; index1 < num2; ++index1)
                    {
                        int index2 = Dust.NewDust(this.Center, 0, 0, 229, 0.0f, 0.0f, 100, new Color(), 0.8f);
                        Main.dust[index2].velocity *= 1.6f;
                        --Main.dust[index2].velocity.Y;
                        Main.dust[index2].velocity += this.velocity;
                        Main.dust[index2].noGravity = true;
                    }
                }
            }
            if (this.type == 257 || this.type == 593)
            {
                if (this.alpha > 0)
                    this.alpha -= 10;
                if (this.alpha < 0)
                    this.alpha = 0;
            }
            if (this.type == 88)
            {
                if (this.alpha > 0)
                    this.alpha -= 10;
                if (this.alpha < 0)
                    this.alpha = 0;
            }
            if (this.type == 532)
                ++this.ai[0];
            bool flag1 = true;
            switch (this.type)
            {
                case 606:
                case 616:
                case 634:
                case 635:
                case 638:
                case 639:
                case 592:
                case 593:
                case 601:
                case 498:
                case 576:
                case 577:
                case 585:
                case 467:
                case 468:
                case 469:
                case 472:
                case 483:
                case 484:
                case 485:
                case 449:
                case 459:
                case 462:
                case 389:
                case 435:
                case 436:
                case 438:
                case 440:
                case 442:
                case 348:
                case 349:
                case 350:
                case 355:
                case 374:
                case 376:
                case 302:
                case 323:
                case 325:
                case 270:
                case 279:
                case 283:
                case 284:
                case 285:
                case 286:
                case 287:
                case 299:
                case 257:
                case 259:
                case 265:
                case 184:
                case 242:
                case 248:
                case 158:
                case 159:
                case 160:
                case 161:
                case 180:
                case 98:
                case 100:
                case 104:
                case 110:
                case 55:
                case 83:
                case 84:
                case 88:
                case 89:
                case 20:
                case 36:
                case 38:
                case 5:
                case 14:
                    flag1 = false;
                    break;
            }
            if (flag1)
                ++this.ai[0];
            if (this.type == 270)
            {
                int index1 = (int)Player.FindClosest(this.Center, 1, 1);
                ++this.ai[1];
                if ((double)this.ai[1] < 110.0 && (double)this.ai[1] > 30.0)
                {
                    float num = this.velocity.Length();
                    Vector2 vector2_1 = Main.player[index1].Center - this.Center;
                    vector2_1.Normalize();
                    this.velocity = (this.velocity * 24f + vector2_1 * num) / 25f;
                    this.velocity.Normalize();
                    Projectile projectile = this;
                    Vector2 vector2_2 = projectile.velocity * num;
                    projectile.velocity = vector2_2;
                }
                if ((double)this.ai[0] < 0.0)
                {
                    if ((double)this.velocity.Length() < 18.0)
                    {
                        Projectile projectile = this;
                        Vector2 vector2 = projectile.velocity * 1.02f;
                        projectile.velocity = vector2;
                    }
                    if ((double)this.localAI[0] == 0.0)
                    {
                        this.localAI[0] = 1f;
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
                        for (int index2 = 0; index2 < 10; ++index2)
                        {
                            int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 5, this.velocity.X, this.velocity.Y, 0, new Color(), 2f);
                            Main.dust[index3].noGravity = true;
                            Main.dust[index3].velocity = this.Center - Main.dust[index3].position;
                            Main.dust[index3].velocity.Normalize();
                            Main.dust[index3].velocity *= -5f;
                            Main.dust[index3].velocity += this.velocity / 2f;
                        }
                    }
                    this.friendly = false;
                    this.hostile = true;
                }
            }
            if (this.type == 585)
            {
                if ((double)this.localAI[0] == 0.0)
                {
                    this.localAI[0] = 1f;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
                    for (int index1 = 0; index1 < 3; ++index1)
                    {
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 27, this.velocity.X, this.velocity.Y, 0, new Color(), 2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity = this.Center - Main.dust[index2].position;
                        Main.dust[index2].velocity.Normalize();
                        Main.dust[index2].velocity *= -5f;
                        Main.dust[index2].velocity += this.velocity / 2f;
                        Main.dust[index2].noLight = true;
                    }
                }
                if (this.alpha > 0)
                    this.alpha -= 50;
                if (this.alpha < 0)
                    this.alpha = 0;
                ++this.frameCounter;
                if (this.frameCounter >= 12)
                    this.frameCounter = 0;
                this.frame = this.frameCounter / 2;
                if (this.frame > 3)
                    this.frame = 6 - this.frame;
                Vector3 vector3 = NPCID.Sets.MagicAuraColor[54].ToVector3();
                Lighting.AddLight(this.Center, vector3.X, vector3.Y, vector3.Z);
                if (Main.rand.Next(3) == 0)
                {
                    int index = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 27, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 2f);
                    Main.dust[index].position -= this.velocity * 2f;
                    Main.dust[index].noLight = true;
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity.X *= 0.3f;
                    Main.dust[index].velocity.Y *= 0.3f;
                }
            }
            if (this.type == 594)
            {
                int num = (int)(43.0 - (double)this.ai[1]) / 13;
                if (num < 1)
                    num = 1;
                int Type = (double)this.ai[1] < 20.0 ? 6 : 31;
                for (int index1 = 0; index1 < num; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, Type, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 0, new Color(), 2f);
                    Main.dust[index2].position -= this.velocity * 2f;
                    Main.dust[index2].noLight = true;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity.X *= 0.3f;
                    Main.dust[index2].velocity.Y *= 0.3f;
                    if (Type == 6)
                        Main.dust[index2].fadeIn = Utils.NextFloat(Main.rand) * 2f;
                }
                ++this.ai[1];
                if ((double)this.ai[1] > (double)(43 * this.MaxUpdates))
                {
                    this.Kill();
                    return;
                }
            }
            if (this.type == 622)
            {
                int Type = 229;
                if (Main.rand.Next(3) != 0)
                {
                    int index = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, Type, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 0, new Color(), 1.2f);
                    Main.dust[index].position -= this.velocity * 2f;
                    Main.dust[index].noLight = true;
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity.X *= 0.3f;
                    Main.dust[index].velocity.Y *= 0.3f;
                }
                ++this.ai[1];
                if ((double)this.ai[1] > (double)(23 * this.MaxUpdates))
                {
                    this.Kill();
                    return;
                }
            }
            if (this.type == 587)
            {
                Color newColor = Main.hslToRgb(this.ai[1], 1f, 0.5f);
                newColor.A = (byte)200;
                ++this.localAI[0];
                if ((double)this.localAI[0] >= 2.0)
                {
                    if ((double)this.localAI[0] == 2.0)
                    {
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 5);
                        for (int index1 = 0; index1 < 4; ++index1)
                        {
                            int index2 = Dust.NewDust(this.position, this.width, this.height, 76, this.velocity.X, this.velocity.Y, 0, newColor, 1.1f);
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].velocity = this.Center - Main.dust[index2].position;
                            Main.dust[index2].velocity.Normalize();
                            Main.dust[index2].velocity *= -3f;
                            Main.dust[index2].velocity += this.velocity / 2f;
                        }
                    }
                    else
                    {
                        ++this.frame;
                        if (this.frame > 2)
                            this.frame = 0;
                        for (int index1 = 0; index1 < 1; ++index1)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 76, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 0, newColor, 0.9f);
                            Main.dust[index2].position = this.Center;
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].velocity = this.velocity * 0.5f;
                        }
                    }
                }
            }
            if (this.type == 349)
            {
                this.frame = (int)this.ai[0];
                this.velocity.Y += 0.2f;
                if ((double)this.localAI[0] == 0.0 || (double)this.localAI[0] == 2.0)
                {
                    this.scale += 0.01f;
                    this.alpha -= 50;
                    if (this.alpha <= 0)
                    {
                        this.localAI[0] = 1f;
                        this.alpha = 0;
                    }
                }
                else if ((double)this.localAI[0] == 1.0)
                {
                    this.scale -= 0.01f;
                    this.alpha += 50;
                    if (this.alpha >= (int)byte.MaxValue)
                    {
                        this.localAI[0] = 2f;
                        this.alpha = (int)byte.MaxValue;
                    }
                }
            }
            if (this.type == 348)
            {
                if ((double)this.localAI[1] == 0.0)
                {
                    this.localAI[1] = 1f;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
                }
                if ((double)this.ai[0] == 0.0 || (double)this.ai[0] == 2.0)
                {
                    this.scale += 0.01f;
                    this.alpha -= 50;
                    if (this.alpha <= 0)
                    {
                        this.ai[0] = 1f;
                        this.alpha = 0;
                    }
                }
                else if ((double)this.ai[0] == 1.0)
                {
                    this.scale -= 0.01f;
                    this.alpha += 50;
                    if (this.alpha >= (int)byte.MaxValue)
                    {
                        this.ai[0] = 2f;
                        this.alpha = (int)byte.MaxValue;
                    }
                }
            }
            if (this.type == 572)
            {
                if ((double)this.localAI[0] == 0.0)
                {
                    this.localAI[0] = 1f;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
                }
                for (int index1 = 0; index1 < 2; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 40, this.velocity.X, this.velocity.Y, 100, new Color(), 1f);
                    Main.dust[index2].velocity *= 0.5f;
                    Main.dust[index2].velocity += this.velocity;
                    Main.dust[index2].velocity *= 0.5f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].scale = 1.2f;
                    Main.dust[index2].position = (this.Center + this.position) / 2f;
                }
            }
            if (this.type == 577)
                Lighting.AddLight(this.Center, 0.1f, 0.3f, 0.4f);
            else if (this.type == 576)
            {
                Lighting.AddLight(this.Center, 0.4f, 0.2f, 0.4f);
                for (int index = 0; index < 5; ++index)
                {
                    Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, 242, this.velocity.X, this.velocity.Y, 100, new Color(), 1f)];
                    dust.velocity = Vector2.Zero;
                    dust.position -= this.velocity / 5f * (float)index;
                    dust.noGravity = true;
                    dust.scale = 0.8f;
                    dust.noLight = true;
                }
            }
            else if (this.type == 581)
            {
                if ((double)this.localAI[0] == 0.0)
                {
                    this.localAI[0] = 1f;
                    Main.PlaySound(2, (int)this.Center.X, (int)this.Center.Y, 17);
                }
                for (int index = 0; index < 2; ++index)
                {
                    int Type = Utils.SelectRandom<int>(Main.rand, 229, 161, 161);
                    Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, Type, this.velocity.X, this.velocity.Y, 100, new Color(), 1f)];
                    dust.velocity = dust.velocity / 4f + this.velocity / 2f;
                    dust.noGravity = true;
                    dust.scale = 1.2f;
                    dust.position = this.Center;
                    dust.noLight = true;
                }
            }
            if (this.type == 299)
            {
                if ((double)this.localAI[0] == 6.0)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 8);
                    for (int index1 = 0; index1 < 40; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 181, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].velocity *= 3f;
                        Main.dust[index2].velocity += this.velocity * 0.75f;
                        Main.dust[index2].scale *= 1.2f;
                        Main.dust[index2].noGravity = true;
                    }
                }
                ++this.localAI[0];
                if ((double)this.localAI[0] > 6.0)
                {
                    for (int index1 = 0; index1 < 3; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 181, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.6f;
                        Main.dust[index2].scale *= 1.4f;
                        Main.dust[index2].noGravity = true;
                    }
                }
            }
            else if (this.type == 270)
            {
                if ((double)this.ai[0] < 0.0)
                    this.alpha = 0;
                if (this.alpha > 0)
                    this.alpha -= 50;
                if (this.alpha < 0)
                    this.alpha = 0;
                ++this.frame;
                if (this.frame > 2)
                    this.frame = 0;
                if ((double)this.ai[0] < 0.0)
                {
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 5, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 1.5f);
                        Main.dust[index2].position -= this.velocity;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity.X *= 0.3f;
                        Main.dust[index2].velocity.Y *= 0.3f;
                    }
                }
                else
                {
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 2f);
                        Main.dust[index2].position -= this.velocity * 2f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity.X *= 0.3f;
                        Main.dust[index2].velocity.Y *= 0.3f;
                    }
                }
            }
            if (this.type == 259)
            {
                if (this.alpha > 0)
                    this.alpha -= 10;
                if (this.alpha < 0)
                    this.alpha = 0;
            }
            if (this.type == 265)
            {
                if (this.alpha > 0)
                    this.alpha -= 50;
                if (this.alpha < 0)
                    this.alpha = 0;
                if (this.alpha == 0)
                {
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 163, this.velocity.X, this.velocity.Y, 100, new Color(), 1.2f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity *= 0.3f;
                    Main.dust[index].velocity -= this.velocity * 0.4f;
                }
            }
            if (this.type == 355)
            {
                if (this.alpha > 0)
                    this.alpha -= 50;
                if (this.alpha < 0)
                    this.alpha = 0;
                if (this.alpha == 0)
                {
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 205, this.velocity.X, this.velocity.Y, 100, new Color(), 1.2f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity *= 0.3f;
                    Main.dust[index].velocity -= this.velocity * 0.4f;
                }
            }
            if (this.type == 357)
            {
                if (this.alpha < 170)
                {
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        float x = this.position.X - this.velocity.X / 10f * (float)index1;
                        float y = this.position.Y - this.velocity.Y / 10f * (float)index1;
                        int index2 = Dust.NewDust(new Vector2(x, y), 1, 1, 206, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].alpha = this.alpha;
                        Main.dust[index2].position.X = x;
                        Main.dust[index2].position.Y = y;
                        Main.dust[index2].velocity *= 0.0f;
                        Main.dust[index2].noGravity = true;
                    }
                }
                if (this.alpha > 0)
                    this.alpha -= 25;
                if (this.alpha < 0)
                    this.alpha = 0;
            }
            else if (this.type == 207)
            {
                if (this.alpha < 170)
                {
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        float x = this.position.X - this.velocity.X / 10f * (float)index1;
                        float y = this.position.Y - this.velocity.Y / 10f * (float)index1;
                        int index2 = Dust.NewDust(new Vector2(x, y), 1, 1, 75, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].alpha = this.alpha;
                        Main.dust[index2].position.X = x;
                        Main.dust[index2].position.Y = y;
                        Main.dust[index2].velocity *= 0.0f;
                        Main.dust[index2].noGravity = true;
                    }
                }
                float num1 = (float)Math.Sqrt((double)this.velocity.X * (double)this.velocity.X + (double)this.velocity.Y * (double)this.velocity.Y);
                float num2 = this.localAI[0];
                if ((double)num2 == 0.0)
                {
                    this.localAI[0] = num1;
                    num2 = num1;
                }
                if (this.alpha > 0)
                    this.alpha -= 25;
                if (this.alpha < 0)
                    this.alpha = 0;
                float num3 = this.position.X;
                float num4 = this.position.Y;
                float num5 = 300f;
                bool flag2 = false;
                int num6 = 0;
                if ((double)this.ai[1] == 0.0)
                {
                    for (int index = 0; index < 200; ++index)
                    {
                        if (Main.npc[index].CanBeChasedBy((object)this, false) && ((double)this.ai[1] == 0.0 || (double)this.ai[1] == (double)(index + 1)))
                        {
                            float num7 = Main.npc[index].position.X + (float)(Main.npc[index].width / 2);
                            float num8 = Main.npc[index].position.Y + (float)(Main.npc[index].height / 2);
                            float num9 = Math.Abs(this.position.X + (float)(this.width / 2) - num7) + Math.Abs(this.position.Y + (float)(this.height / 2) - num8);
                            if ((double)num9 < (double)num5 && Collision.CanHit(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), 1, 1, Main.npc[index].position, Main.npc[index].width, Main.npc[index].height))
                            {
                                num5 = num9;
                                num3 = num7;
                                num4 = num8;
                                flag2 = true;
                                num6 = index;
                            }
                        }
                    }
                    if (flag2)
                        this.ai[1] = (float)(num6 + 1);
                    flag2 = false;
                }
                if ((double)this.ai[1] > 0.0)
                {
                    int index = (int)((double)this.ai[1] - 1.0);
                    if (Main.npc[index].active && Main.npc[index].CanBeChasedBy((object)this, true) && !Main.npc[index].dontTakeDamage)
                    {
                        if ((double)(Math.Abs(this.position.X + (float)(this.width / 2) - (Main.npc[index].position.X + (float)(Main.npc[index].width / 2))) + Math.Abs(this.position.Y + (float)(this.height / 2) - (Main.npc[index].position.Y + (float)(Main.npc[index].height / 2)))) < 1000.0)
                        {
                            flag2 = true;
                            num3 = Main.npc[index].position.X + (float)(Main.npc[index].width / 2);
                            num4 = Main.npc[index].position.Y + (float)(Main.npc[index].height / 2);
                        }
                    }
                    else
                        this.ai[1] = 0.0f;
                }
                if (!this.friendly)
                    flag2 = false;
                if (flag2)
                {
                    float num7 = num2;
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num8 = num3 - vector2.X;
                    float num9 = num4 - vector2.Y;
                    float num10 = (float)Math.Sqrt((double)num8 * (double)num8 + (double)num9 * (double)num9);
                    float num11 = num7 / num10;
                    float num12 = num8 * num11;
                    float num13 = num9 * num11;
                    int num14 = 8;
                    this.velocity.X = (this.velocity.X * (float)(num14 - 1) + num12) / (float)num14;
                    this.velocity.Y = (this.velocity.Y * (float)(num14 - 1) + num13) / (float)num14;
                }
            }
            else if (this.type == 81 || this.type == 91)
            {
                if ((double)this.ai[0] >= 20.0)
                {
                    this.ai[0] = 20f;
                    this.velocity.Y += 0.07f;
                }
            }
            else if (this.type == 174 || this.type == 605)
            {
                if ((double)this.ai[0] >= 5.0)
                {
                    this.ai[0] = 5f;
                    this.velocity.Y += 0.15f;
                }
            }
            else if (this.type == 337)
            {
                if ((double)this.position.Y > (double)Main.player[this.owner].position.Y - 300.0)
                    this.tileCollide = true;
                if ((double)this.position.Y < Main.worldSurface * 16.0)
                    this.tileCollide = true;
                this.frame = (int)this.ai[1];
                if (Main.rand.Next(2) == 0)
                {
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 197, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index].velocity *= 0.5f;
                    Main.dust[index].noGravity = true;
                }
            }
            else if (this.type == 645)
            {
                if ((double)this.ai[1] != -1.0 && (double)this.position.Y > (double)this.ai[1])
                    this.tileCollide = true;
                if (Utils.HasNaNs(this.position))
                {
                    this.Kill();
                    return;
                }
                bool flag2 = WorldGen.SolidTile(Framing.GetTileSafely((int)this.position.X / 16, (int)this.position.Y / 16));
                Dust dust = Main.dust[Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                dust.position = this.Center;
                dust.velocity = Vector2.Zero;
                dust.noGravity = true;
                if (flag2)
                    dust.noLight = true;
                if ((double)this.ai[1] == -1.0)
                {
                    ++this.ai[0];
                    this.velocity = Vector2.Zero;
                    this.tileCollide = false;
                    this.penetrate = -1;
                    this.position = this.Center;
                    this.width = this.height = 140;
                    this.Center = this.position;
                    this.alpha -= 10;
                    if (this.alpha < 0)
                        this.alpha = 0;
                    if (++this.frameCounter >= this.MaxUpdates * 3)
                    {
                        this.frameCounter = 0;
                        ++this.frame;
                    }
                    if ((double)this.ai[0] < (double)(Main.projFrames[this.type] * this.MaxUpdates * 3))
                        return;
                    this.Kill();
                    return;
                }
                this.alpha = (int)byte.MaxValue;
                if (this.numUpdates == 0)
                {
                    int num1 = -1;
                    float num2 = 60f;
                    for (int index = 0; index < 200; ++index)
                    {
                        NPC npc = Main.npc[index];
                        if (npc.CanBeChasedBy((object)this, false))
                        {
                            float num3 = this.Distance(npc.Center);
                            if ((double)num3 < (double)num2 && Collision.CanHitLine(this.Center, 0, 0, npc.Center, 0, 0))
                            {
                                num2 = num3;
                                num1 = index;
                            }
                        }
                    }
                    if (num1 != -1)
                    {
                        this.ai[0] = 0.0f;
                        this.ai[1] = -1f;
                        this.netUpdate = true;
                        return;
                    }
                }
            }
            else if (this.type >= 424 && this.type <= 426)
            {
                if ((double)this.position.Y > (double)Main.player[this.owner].position.Y - 300.0)
                    this.tileCollide = true;
                if ((double)this.position.Y < Main.worldSurface * 16.0)
                    this.tileCollide = true;
                this.scale = this.ai[1];
                this.rotation += this.velocity.X * 2f;
                Vector2 vector2 = this.Center + Vector2.Normalize(this.velocity) * 10f;
                Dust dust1 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0.0f, 0.0f, 0, new Color(), 1f)];
                dust1.position = vector2;
                dust1.velocity = Utils.RotatedBy(this.velocity, 1.57079637050629, new Vector2()) * 0.33f + this.velocity / 4f;
                dust1.position += Utils.RotatedBy(this.velocity, 1.57079637050629, new Vector2());
                dust1.fadeIn = 0.5f;
                dust1.noGravity = true;
                Dust dust2 = Main.dust[Dust.NewDust(this.position, this.width, this.height, 6, 0.0f, 0.0f, 0, new Color(), 1f)];
                dust2.position = vector2;
                dust2.velocity = Utils.RotatedBy(this.velocity, -1.57079637050629, new Vector2()) * 0.33f + this.velocity / 4f;
                dust2.position += Utils.RotatedBy(this.velocity, -1.57079637050629, new Vector2());
                dust2.fadeIn = 0.5f;
                dust2.noGravity = true;
                for (int index1 = 0; index1 < 1; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].velocity *= 0.5f;
                    Main.dust[index2].scale *= 1.3f;
                    Main.dust[index2].fadeIn = 1f;
                    Main.dust[index2].noGravity = true;
                }
            }
            else if (this.type == 344)
            {
                ++this.localAI[1];
                if ((double)this.localAI[1] > 5.0)
                {
                    this.alpha -= 50;
                    if (this.alpha < 0)
                        this.alpha = 0;
                }
                this.frame = (int)this.ai[1];
                if ((double)this.localAI[1] > 20.0)
                {
                    this.localAI[1] = 20f;
                    this.velocity.Y += 0.15f;
                }
                this.rotation += Main.windSpeed * 0.2f;
                this.velocity.X += Main.windSpeed * 0.1f;
            }
            else if (this.type == 336 || this.type == 345)
            {
                if (this.type == 345 && (double)this.localAI[0] == 0.0)
                {
                    this.localAI[0] = 1f;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 1);
                }
                if ((double)this.ai[0] >= 50.0)
                {
                    this.ai[0] = 50f;
                    this.velocity.Y += 0.5f;
                }
            }
            else if (this.type == 246)
            {
                this.alpha -= 20;
                if (this.alpha < 0)
                    this.alpha = 0;
                if ((double)this.ai[0] >= 60.0)
                {
                    this.ai[0] = 60f;
                    this.velocity.Y += 0.15f;
                }
            }
            else if (this.type == 311)
            {
                if (this.alpha > 0)
                    this.alpha -= 50;
                if (this.alpha < 0)
                    this.alpha = 0;
                if ((double)this.ai[0] >= 30.0)
                {
                    this.ai[0] = 30f;
                    if ((double)this.ai[1] == 0.0)
                        this.ai[1] = 1f;
                    this.velocity.Y += 0.5f;
                }
            }
            else if (this.type == 312)
            {
                if ((double)this.ai[0] >= 5.0)
                    this.alpha = 0;
                if ((double)this.ai[0] >= 20.0)
                {
                    this.ai[0] = 30f;
                    this.velocity.Y += 0.5f;
                }
            }
            else if (this.type != 239 && this.type != 264)
            {
                if (this.type == 176)
                {
                    if ((double)this.ai[0] >= 15.0)
                    {
                        this.ai[0] = 15f;
                        this.velocity.Y += 0.05f;
                    }
                }
                else if (this.type == 275 || this.type == 276)
                {
                    if (this.alpha > 0)
                        this.alpha -= 30;
                    if (this.alpha < 0)
                        this.alpha = 0;
                    if ((double)this.ai[0] >= 35.0)
                    {
                        this.ai[0] = 35f;
                        this.velocity.Y += 0.025f;
                    }
                    if (Main.expertMode)
                    {
                        float num1 = 18f;
                        int index = (int)Player.FindClosest(this.Center, 1, 1);
                        Vector2 vector2_1 = Main.player[index].Center - this.Center;
                        vector2_1.Normalize();
                        vector2_1 *= num1;
                        int num2 = 70;
                        this.velocity = (this.velocity * (float)(num2 - 1) + vector2_1) / (float)num2;
                        if ((double)this.velocity.Length() < 14.0)
                        {
                            this.velocity.Normalize();
                            Projectile projectile = this;
                            Vector2 vector2_2 = projectile.velocity * 14f;
                            projectile.velocity = vector2_2;
                        }
                        this.tileCollide = false;
                        if (this.timeLeft > 180)
                            this.timeLeft = 180;
                    }
                }
                else if (this.type == 172)
                {
                    if ((double)this.ai[0] >= 17.0)
                    {
                        this.ai[0] = 17f;
                        this.velocity.Y += 0.085f;
                    }
                }
                else if (this.type == 117)
                {
                    if ((double)this.ai[0] >= 35.0)
                    {
                        this.ai[0] = 35f;
                        this.velocity.Y += 0.06f;
                    }
                }
                else if (this.type == 120)
                {
                    int index = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 67, this.velocity.X, this.velocity.Y, 100, new Color(), 1.2f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity *= 0.3f;
                    if ((double)this.ai[0] >= 30.0)
                    {
                        this.ai[0] = 30f;
                        this.velocity.Y += 0.05f;
                    }
                }
                else if (this.type == 195)
                {
                    if ((double)this.ai[0] >= 20.0)
                    {
                        this.ai[0] = 20f;
                        this.velocity.Y += 0.075f;
                        this.tileCollide = true;
                    }
                    else
                        this.tileCollide = false;
                }
                else if (this.type == 267 || this.type == 477 || (this.type == 478 || this.type == 479))
                {
                    ++this.localAI[0];
                    if ((double)this.localAI[0] > 3.0)
                        this.alpha = 0;
                    if ((double)this.ai[0] >= 20.0)
                    {
                        this.ai[0] = 20f;
                        if (this.type != 477)
                            this.velocity.Y += 0.075f;
                    }
                    if (this.type == 479 && Main.myPlayer == this.owner)
                    {
                        if ((double)this.ai[1] >= 0.0)
                            this.penetrate = -1;
                        else if (this.penetrate < 0)
                            this.penetrate = 1;
                        if ((double)this.ai[1] >= 0.0)
                            ++this.ai[1];
                        if ((double)this.ai[1] > (double)Main.rand.Next(5, 30))
                        {
                            this.ai[1] = -1000f;
                            float num1 = this.velocity.Length();
                            Vector2 vector2_1 = this.velocity;
                            vector2_1.Normalize();
                            int num2 = Main.rand.Next(2, 4);
                            if (Main.rand.Next(4) == 0)
                                ++num2;
                            for (int index = 0; index < num2; ++index)
                            {
                                Vector2 vector2_2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                                vector2_2.Normalize();
                                Vector2 vector2_3 = vector2_2 + vector2_1 * 2f;
                                vector2_3.Normalize();
                                vector2_2 = vector2_3 * num1;
                                Projectile.NewProjectile(this.Center.X, this.Center.Y, vector2_2.X, vector2_2.Y, this.type, this.damage, this.knockBack, this.owner, 0.0f, -1000f);
                            }
                        }
                    }
                    if (this.type == 478 && Main.myPlayer == this.owner)
                    {
                        ++this.ai[1];
                        if ((double)this.ai[1] > (double)Main.rand.Next(5, 20))
                        {
                            if (this.timeLeft > 40)
                                this.timeLeft -= 20;
                            this.ai[1] = 0.0f;
                            Projectile.NewProjectile(this.Center.X, this.Center.Y, 0.0f, 0.0f, 480, (int)((double)this.damage * 0.8), this.knockBack * 0.5f, this.owner, 0.0f, 0.0f);
                        }
                    }
                }
                else if (this.type == 408)
                {
                    if ((double)this.ai[0] >= 45.0)
                    {
                        this.ai[0] = 45f;
                        this.velocity.Y += 0.05f;
                    }
                }
                else if (this.type == 616)
                {
                    if (this.alpha < 170)
                    {
                        float num = 3f;
                        for (int index1 = 0; (double)index1 < (double)num; ++index1)
                        {
                            int index2 = Dust.NewDust(this.position, 1, 1, 229, 0.0f, 0.0f, 0, new Color(), 1f);
                            Main.dust[index2].position = this.Center - this.velocity / num * (float)index1;
                            Main.dust[index2].velocity *= 0.0f;
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].alpha = 200;
                            Main.dust[index2].scale = 0.5f;
                        }
                    }
                    float num1 = (float)Math.Sqrt((double)this.velocity.X * (double)this.velocity.X + (double)this.velocity.Y * (double)this.velocity.Y);
                    float num2 = this.localAI[0];
                    if ((double)num2 == 0.0)
                    {
                        this.localAI[0] = num1;
                        num2 = num1;
                    }
                    if (this.alpha > 0)
                        this.alpha -= 25;
                    if (this.alpha < 0)
                        this.alpha = 0;
                    float num3 = this.position.X;
                    float num4 = this.position.Y;
                    float num5 = 800f;
                    bool flag2 = false;
                    int num6 = 0;
                    ++this.ai[0];
                    if ((double)this.ai[0] > 20.0)
                    {
                        --this.ai[0];
                        if ((double)this.ai[1] == 0.0)
                        {
                            for (int index = 0; index < 200; ++index)
                            {
                                if (Main.npc[index].CanBeChasedBy((object)this, false) && ((double)this.ai[1] == 0.0 || (double)this.ai[1] == (double)(index + 1)))
                                {
                                    float num7 = Main.npc[index].position.X + (float)(Main.npc[index].width / 2);
                                    float num8 = Main.npc[index].position.Y + (float)(Main.npc[index].height / 2);
                                    float num9 = Math.Abs(this.position.X + (float)(this.width / 2) - num7) + Math.Abs(this.position.Y + (float)(this.height / 2) - num8);
                                    if ((double)num9 < (double)num5 && Collision.CanHit(new Vector2(this.position.X + (float)(this.width / 2), this.position.Y + (float)(this.height / 2)), 1, 1, Main.npc[index].position, Main.npc[index].width, Main.npc[index].height))
                                    {
                                        num5 = num9;
                                        num3 = num7;
                                        num4 = num8;
                                        flag2 = true;
                                        num6 = index;
                                    }
                                }
                            }
                            if (flag2)
                                this.ai[1] = (float)(num6 + 1);
                            flag2 = false;
                        }
                        if ((double)this.ai[1] != 0.0)
                        {
                            int index = (int)((double)this.ai[1] - 1.0);
                            if (Main.npc[index].active && Main.npc[index].CanBeChasedBy((object)this, true) && (double)(Math.Abs(this.position.X + (float)(this.width / 2) - (Main.npc[index].position.X + (float)(Main.npc[index].width / 2))) + Math.Abs(this.position.Y + (float)(this.height / 2) - (Main.npc[index].position.Y + (float)(Main.npc[index].height / 2)))) < 1000.0)
                            {
                                flag2 = true;
                                num3 = Main.npc[index].position.X + (float)(Main.npc[index].width / 2);
                                num4 = Main.npc[index].position.Y + (float)(Main.npc[index].height / 2);
                            }
                        }
                        if (!this.friendly)
                            flag2 = false;
                        if (flag2)
                        {
                            float num7 = num2;
                            Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                            float num8 = num3 - vector2.X;
                            float num9 = num4 - vector2.Y;
                            float num10 = (float)Math.Sqrt((double)num8 * (double)num8 + (double)num9 * (double)num9);
                            float num11 = num7 / num10;
                            float num12 = num8 * num11;
                            float num13 = num9 * num11;
                            int num14 = 8;
                            this.velocity.X = (this.velocity.X * (float)(num14 - 1) + num12) / (float)num14;
                            this.velocity.Y = (this.velocity.Y * (float)(num14 - 1) + num13) / (float)num14;
                        }
                    }
                }
                else if (this.type == 507 || this.type == 508)
                {
                    if ((double)this.ai[0] > 45.0)
                    {
                        this.velocity.X *= 0.98f;
                        this.velocity.Y += 0.3f;
                    }
                }
                else if (this.type == 495)
                {
                    int index = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 27, this.velocity.X, this.velocity.Y, 100, new Color(), 1.2f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].velocity *= 0.3f;
                    if ((double)this.ai[0] >= 30.0)
                    {
                        this.ai[0] = 30f;
                        this.velocity.Y += 0.04f;
                    }
                }
                else if (this.type == 498)
                {
                    if ((double)this.localAI[0] == 0.0)
                    {
                        ++this.localAI[0];
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 17);
                    }
                    ++this.ai[0];
                    if ((double)this.ai[0] >= 50.0)
                    {
                        this.velocity.X *= 0.98f;
                        this.velocity.Y += 0.15f;
                        this.rotation += (float)this.direction * 0.5f;
                    }
                    else
                        this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
                }
                else if (this.type == 437)
                {
                    if ((double)this.ai[0] >= 12.0)
                    {
                        if ((double)this.ai[0] >= 20.0)
                            this.Kill();
                        this.alpha += 30;
                    }
                }
                else if (this.type != 442 && this.type != 634 && this.type != 635)
                {
                    if (this.type == 639)
                    {
                        if (this.timeLeft <= this.MaxUpdates * 45 - 14)
                            this.velocity.Y += 0.1f;
                    }
                    else if ((double)this.ai[0] >= 15.0)
                    {
                        this.ai[0] = 15f;
                        this.velocity.Y += 0.1f;
                    }
                }
            }
            if (this.type == 248)
            {
                if ((double)this.velocity.X < 0.0)
                    this.rotation -= (float)(((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y)) * 0.0500000007450581);
                else
                    this.rotation += (float)(((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y)) * 0.0500000007450581);
            }
            else if (this.type == 270 || this.type == 585 || this.type == 601)
            {
                this.spriteDirection = this.direction;
                this.rotation = this.direction >= 0 ? (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) : (float)Math.Atan2(-(double)this.velocity.Y, -(double)this.velocity.X);
            }
            else if (this.type == 311)
            {
                if ((double)this.ai[1] != 0.0)
                    this.rotation += (float)((double)this.velocity.X * 0.100000001490116 + (double)Main.rand.Next(-10, 11) * 0.025000000372529);
                else
                    this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
            }
            else if (this.type == 312)
                this.rotation += this.velocity.X * 0.02f;
            else if (this.type == 408)
            {
                this.rotation = Utils.ToRotation(this.velocity);
                if (this.direction == -1)
                    this.rotation += 3.141593f;
            }
            else if (this.type == 435 || this.type == 459)
            {
                this.rotation = Utils.ToRotation(this.velocity);
                if (this.direction == -1)
                    this.rotation += 3.141593f;
            }
            else if (this.type == 436)
            {
                this.rotation = Utils.ToRotation(this.velocity);
                this.rotation += 3.141593f;
                if (this.direction == -1)
                    this.rotation += 3.141593f;
            }
            else if (this.type == 469)
            {
                if ((double)this.velocity.X > 0.0)
                {
                    this.spriteDirection = -1;
                    this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
                }
                else
                {
                    this.spriteDirection = 1;
                    this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
                }
            }
            else if (this.type == 477)
            {
                if ((double)this.localAI[1] < 5.0)
                {
                    this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
                    ++this.localAI[1];
                }
                else
                    this.rotation = (float)(((double)this.rotation * 2.0 + Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57000005245209) / 3.0);
            }
            else if (this.type == 532)
                this.rotation += (float)(0.200000002980232 + (double)Math.Abs(this.velocity.X) * 0.100000001490116);
            else if (this.type == 483)
                this.rotation += this.velocity.X * 0.05f;
            else if (this.type == 485)
            {
                this.velocity = (this.velocity * 39f + new Vector2(this.ai[0], this.ai[1])) / 40f;
                int index = Dust.NewDust(this.position, this.width, this.height, 6, 0.0f, 0.0f, 0, new Color(), 1f);
                Main.dust[index].noGravity = true;
                Main.dust[index].velocity *= 0.2f;
                Main.dust[index].position = (Main.dust[index].position + this.Center) / 2f;
                ++this.frameCounter;
                if (this.frameCounter >= 2)
                {
                    this.frameCounter = 0;
                    ++this.frame;
                    if (this.frame >= 5)
                        this.frame = 0;
                }
                if ((double)this.velocity.X < 0.0)
                {
                    this.spriteDirection = -1;
                    this.rotation = (float)Math.Atan2(-(double)this.velocity.Y, -(double)this.velocity.X);
                }
                else
                {
                    this.spriteDirection = 1;
                    this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                }
            }
            else if (this.type == 640)
            {
                if (this.velocity != Vector2.Zero)
                    this.rotation = Utils.ToRotation(this.velocity) + 1.570796f;
            }
            else if (this.type != 344 && this.type != 498)
                this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
            if ((double)this.velocity.Y <= 16.0)
                return;
            this.velocity.Y = 16f;
        }

        private void AI_026()
        {
            if (!Main.player[this.owner].active)
            {
                this.active = false;
            }
            else
            {
                bool flag1 = false;
                bool flag2 = false;
                bool flag3 = false;
                bool flag4 = false;
                int num1 = 85;
                if (this.type == 324)
                    num1 = 120;
                if (this.type == 112)
                    num1 = 100;
                if (this.type == (int)sbyte.MaxValue)
                    num1 = 50;
                if (this.type >= 191 && this.type <= 194)
                {
                    if (this.lavaWet)
                    {
                        this.ai[0] = 1f;
                        this.ai[1] = 0.0f;
                    }
                    num1 = 60 + 30 * this.minionPos;
                }
                else if (this.type == 266)
                    num1 = 60 + 30 * this.minionPos;
                if (this.type == 111)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].bunny = false;
                    if (Main.player[this.owner].bunny)
                        this.timeLeft = 2;
                }
                if (this.type == 112)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].penguin = false;
                    if (Main.player[this.owner].penguin)
                        this.timeLeft = 2;
                }
                if (this.type == 334)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].puppy = false;
                    if (Main.player[this.owner].puppy)
                        this.timeLeft = 2;
                }
                if (this.type == 353)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].grinch = false;
                    if (Main.player[this.owner].grinch)
                        this.timeLeft = 2;
                }
                if (this.type == (int)sbyte.MaxValue)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].turtle = false;
                    if (Main.player[this.owner].turtle)
                        this.timeLeft = 2;
                }
                if (this.type == 175)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].eater = false;
                    if (Main.player[this.owner].eater)
                        this.timeLeft = 2;
                }
                if (this.type == 197)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].skeletron = false;
                    if (Main.player[this.owner].skeletron)
                        this.timeLeft = 2;
                }
                if (this.type == 198)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].hornet = false;
                    if (Main.player[this.owner].hornet)
                        this.timeLeft = 2;
                }
                if (this.type == 199)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].tiki = false;
                    if (Main.player[this.owner].tiki)
                        this.timeLeft = 2;
                }
                if (this.type == 200)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].lizard = false;
                    if (Main.player[this.owner].lizard)
                        this.timeLeft = 2;
                }
                if (this.type == 208)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].parrot = false;
                    if (Main.player[this.owner].parrot)
                        this.timeLeft = 2;
                }
                if (this.type == 209)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].truffle = false;
                    if (Main.player[this.owner].truffle)
                        this.timeLeft = 2;
                }
                if (this.type == 210)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].sapling = false;
                    if (Main.player[this.owner].sapling)
                        this.timeLeft = 2;
                }
                if (this.type == 324)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].cSapling = false;
                    if (Main.player[this.owner].cSapling)
                        this.timeLeft = 2;
                }
                if (this.type == 313)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].spider = false;
                    if (Main.player[this.owner].spider)
                        this.timeLeft = 2;
                }
                if (this.type == 314)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].squashling = false;
                    if (Main.player[this.owner].squashling)
                        this.timeLeft = 2;
                }
                if (this.type == 211)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].wisp = false;
                    if (Main.player[this.owner].wisp)
                        this.timeLeft = 2;
                }
                if (this.type == 236)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].dino = false;
                    if (Main.player[this.owner].dino)
                        this.timeLeft = 2;
                }
                if (this.type == 499)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].babyFaceMonster = false;
                    if (Main.player[this.owner].babyFaceMonster)
                        this.timeLeft = 2;
                }
                if (this.type == 266)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].slime = false;
                    if (Main.player[this.owner].slime)
                        this.timeLeft = 2;
                }
                if (this.type == 268)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].eyeSpring = false;
                    if (Main.player[this.owner].eyeSpring)
                        this.timeLeft = 2;
                }
                if (this.type == 269)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].snowman = false;
                    if (Main.player[this.owner].snowman)
                        this.timeLeft = 2;
                }
                if (this.type == 319)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].blackCat = false;
                    if (Main.player[this.owner].blackCat)
                        this.timeLeft = 2;
                }
                if (this.type == 380)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].zephyrfish = false;
                    if (Main.player[this.owner].zephyrfish)
                        this.timeLeft = 2;
                }
                if (this.type >= 191 && this.type <= 194)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].pygmy = false;
                    if (Main.player[this.owner].pygmy)
                        this.timeLeft = Main.rand.Next(2, 10);
                }
                if (this.type >= 390 && this.type <= 392)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].spiderMinion = false;
                    if (Main.player[this.owner].spiderMinion)
                        this.timeLeft = 2;
                }
                if (this.type == 398)
                {
                    if (Main.player[this.owner].dead)
                        Main.player[this.owner].miniMinotaur = false;
                    if (Main.player[this.owner].miniMinotaur)
                        this.timeLeft = 2;
                }
                if (this.type >= 191 && this.type <= 194 || this.type == 266 || this.type >= 390 && this.type <= 392)
                {
                    int num2 = 10;
                    int num3 = 40 * (this.minionPos + 1) * Main.player[this.owner].direction;
                    if ((double)Main.player[this.owner].position.X + (double)(Main.player[this.owner].width / 2) < (double)this.position.X + (double)(this.width / 2) - (double)num2 + (double)num3)
                        flag1 = true;
                    else if ((double)Main.player[this.owner].position.X + (double)(Main.player[this.owner].width / 2) > (double)this.position.X + (double)(this.width / 2) + (double)num2 + (double)num3)
                        flag2 = true;
                }
                else if ((double)Main.player[this.owner].position.X + (double)(Main.player[this.owner].width / 2) < (double)this.position.X + (double)(this.width / 2) - (double)num1)
                    flag1 = true;
                else if ((double)Main.player[this.owner].position.X + (double)(Main.player[this.owner].width / 2) > (double)this.position.X + (double)(this.width / 2) + (double)num1)
                    flag2 = true;
                if (this.type == 175)
                {
                    float num2 = 0.1f;
                    this.tileCollide = false;
                    int num3 = 300;
                    Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num4 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector2_1.X;
                    float num5 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector2_1.Y;
                    if (this.type == (int)sbyte.MaxValue)
                        num5 = Main.player[this.owner].position.Y - vector2_1.Y;
                    float num6 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                    float num7 = 7f;
                    if ((double)num6 < (double)num3 && (double)Main.player[this.owner].velocity.Y == 0.0 && ((double)this.position.Y + (double)this.height <= (double)Main.player[this.owner].position.Y + (double)Main.player[this.owner].height && !Collision.SolidCollision(this.position, this.width, this.height)))
                    {
                        this.ai[0] = 0.0f;
                        if ((double)this.velocity.Y < -6.0)
                            this.velocity.Y = -6f;
                    }
                    if ((double)num6 < 150.0)
                    {
                        if ((double)Math.Abs(this.velocity.X) > 2.0 || (double)Math.Abs(this.velocity.Y) > 2.0)
                        {
                            Projectile projectile = this;
                            Vector2 vector2_2 = projectile.velocity * 0.99f;
                            projectile.velocity = vector2_2;
                        }
                        num2 = 0.01f;
                        if ((double)num4 < -2.0)
                            num4 = -2f;
                        if ((double)num4 > 2.0)
                            num4 = 2f;
                        if ((double)num5 < -2.0)
                            num5 = -2f;
                        if ((double)num5 > 2.0)
                            num5 = 2f;
                    }
                    else
                    {
                        if ((double)num6 > 300.0)
                            num2 = 0.2f;
                        float num8 = num7 / num6;
                        num4 *= num8;
                        num5 *= num8;
                    }
                    if ((double)Math.Abs(num4) > (double)Math.Abs(num5) || (double)num2 == 0.0500000007450581)
                    {
                        if ((double)this.velocity.X < (double)num4)
                        {
                            this.velocity.X += num2;
                            if ((double)num2 > 0.0500000007450581 && (double)this.velocity.X < 0.0)
                                this.velocity.X += num2;
                        }
                        if ((double)this.velocity.X > (double)num4)
                        {
                            this.velocity.X -= num2;
                            if ((double)num2 > 0.0500000007450581 && (double)this.velocity.X > 0.0)
                                this.velocity.X -= num2;
                        }
                    }
                    if ((double)Math.Abs(num4) <= (double)Math.Abs(num5) || (double)num2 == 0.0500000007450581)
                    {
                        if ((double)this.velocity.Y < (double)num5)
                        {
                            this.velocity.Y += num2;
                            if ((double)num2 > 0.0500000007450581 && (double)this.velocity.Y < 0.0)
                                this.velocity.Y += num2;
                        }
                        if ((double)this.velocity.Y > (double)num5)
                        {
                            this.velocity.Y -= num2;
                            if ((double)num2 > 0.0500000007450581 && (double)this.velocity.Y > 0.0)
                                this.velocity.Y -= num2;
                        }
                    }
                    this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) - 1.57f;
                    ++this.frameCounter;
                    if (this.frameCounter > 6)
                    {
                        ++this.frame;
                        this.frameCounter = 0;
                    }
                    if (this.frame <= 1)
                        return;
                    this.frame = 0;
                }
                else if (this.type == 197)
                {
                    float num2 = 0.1f;
                    this.tileCollide = false;
                    int num3 = 300;
                    Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num4 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector2_1.X;
                    float num5 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector2_1.Y;
                    if (this.type == (int)sbyte.MaxValue)
                        num5 = Main.player[this.owner].position.Y - vector2_1.Y;
                    float num6 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                    float num7 = 3f;
                    if ((double)num6 > 500.0)
                        this.localAI[0] = 10000f;
                    if ((double)this.localAI[0] >= 10000.0)
                        num7 = 14f;
                    if ((double)num6 < (double)num3 && (double)Main.player[this.owner].velocity.Y == 0.0 && ((double)this.position.Y + (double)this.height <= (double)Main.player[this.owner].position.Y + (double)Main.player[this.owner].height && !Collision.SolidCollision(this.position, this.width, this.height)))
                    {
                        this.ai[0] = 0.0f;
                        if ((double)this.velocity.Y < -6.0)
                            this.velocity.Y = -6f;
                    }
                    if ((double)num6 < 150.0)
                    {
                        if ((double)Math.Abs(this.velocity.X) > 2.0 || (double)Math.Abs(this.velocity.Y) > 2.0)
                        {
                            Projectile projectile = this;
                            Vector2 vector2_2 = projectile.velocity * 0.99f;
                            projectile.velocity = vector2_2;
                        }
                        num2 = 0.01f;
                        if ((double)num4 < -2.0)
                            num4 = -2f;
                        if ((double)num4 > 2.0)
                            num4 = 2f;
                        if ((double)num5 < -2.0)
                            num5 = -2f;
                        if ((double)num5 > 2.0)
                            num5 = 2f;
                    }
                    else
                    {
                        if ((double)num6 > 300.0)
                            num2 = 0.2f;
                        float num8 = num7 / num6;
                        num4 *= num8;
                        num5 *= num8;
                    }
                    if ((double)this.velocity.X < (double)num4)
                    {
                        this.velocity.X += num2;
                        if ((double)num2 > 0.0500000007450581 && (double)this.velocity.X < 0.0)
                            this.velocity.X += num2;
                    }
                    if ((double)this.velocity.X > (double)num4)
                    {
                        this.velocity.X -= num2;
                        if ((double)num2 > 0.0500000007450581 && (double)this.velocity.X > 0.0)
                            this.velocity.X -= num2;
                    }
                    if ((double)this.velocity.Y < (double)num5)
                    {
                        this.velocity.Y += num2;
                        if ((double)num2 > 0.0500000007450581 && (double)this.velocity.Y < 0.0)
                            this.velocity.Y += num2;
                    }
                    if ((double)this.velocity.Y > (double)num5)
                    {
                        this.velocity.Y -= num2;
                        if ((double)num2 > 0.0500000007450581 && (double)this.velocity.Y > 0.0)
                            this.velocity.Y -= num2;
                    }
                    this.localAI[0] += (float)Main.rand.Next(10);
                    if ((double)this.localAI[0] > 10000.0)
                    {
                        if ((double)this.localAI[1] == 0.0)
                            this.localAI[1] = (double)this.velocity.X >= 0.0 ? 1f : -1f;
                        this.rotation += 0.25f * this.localAI[1];
                        if ((double)this.localAI[0] > 12000.0)
                            this.localAI[0] = 0.0f;
                    }
                    else
                    {
                        this.localAI[1] = 0.0f;
                        float num8 = this.velocity.X * 0.1f;
                        if ((double)this.rotation > (double)num8)
                        {
                            this.rotation -= (float)(((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y)) * 0.00999999977648258);
                            if ((double)this.rotation < (double)num8)
                                this.rotation = num8;
                        }
                        if ((double)this.rotation < (double)num8)
                        {
                            this.rotation += (float)(((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y)) * 0.00999999977648258);
                            if ((double)this.rotation > (double)num8)
                                this.rotation = num8;
                        }
                    }
                    if ((double)this.rotation > 6.28)
                        this.rotation -= 6.28f;
                    if ((double)this.rotation >= -6.28)
                        return;
                    this.rotation += 6.28f;
                }
                else if (this.type == 198 || this.type == 380)
                {
                    float num2 = 0.4f;
                    if (this.type == 380)
                        num2 = 0.3f;
                    this.tileCollide = false;
                    int num3 = 100;
                    Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num4 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector2_1.X;
                    float num5 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector2_1.Y + (float)Main.rand.Next(-10, 21);
                    float num6 = num4 + (float)Main.rand.Next(-10, 21) + (float)(60 * -Main.player[this.owner].direction);
                    float num7 = num5 - 60f;
                    if (this.type == (int)sbyte.MaxValue)
                        num7 = Main.player[this.owner].position.Y - vector2_1.Y;
                    float num8 = (float)Math.Sqrt((double)num6 * (double)num6 + (double)num7 * (double)num7);
                    float num9 = 14f;
                    if (this.type == 380)
                        num9 = 6f;
                    if ((double)num8 < (double)num3 && (double)Main.player[this.owner].velocity.Y == 0.0 && ((double)this.position.Y + (double)this.height <= (double)Main.player[this.owner].position.Y + (double)Main.player[this.owner].height && !Collision.SolidCollision(this.position, this.width, this.height)))
                    {
                        this.ai[0] = 0.0f;
                        if ((double)this.velocity.Y < -6.0)
                            this.velocity.Y = -6f;
                    }
                    if ((double)num8 < 50.0)
                    {
                        if ((double)Math.Abs(this.velocity.X) > 2.0 || (double)Math.Abs(this.velocity.Y) > 2.0)
                        {
                            Projectile projectile = this;
                            Vector2 vector2_2 = projectile.velocity * 0.99f;
                            projectile.velocity = vector2_2;
                        }
                        num2 = 0.01f;
                    }
                    else
                    {
                        if (this.type == 380)
                        {
                            if ((double)num8 < 100.0)
                                num2 = 0.1f;
                            if ((double)num8 > 300.0)
                                num2 = 0.4f;
                        }
                        else if (this.type == 198)
                        {
                            if ((double)num8 < 100.0)
                                num2 = 0.1f;
                            if ((double)num8 > 300.0)
                                num2 = 0.6f;
                        }
                        float num10 = num9 / num8;
                        num6 *= num10;
                        num7 *= num10;
                    }
                    if ((double)this.velocity.X < (double)num6)
                    {
                        this.velocity.X += num2;
                        if ((double)num2 > 0.0500000007450581 && (double)this.velocity.X < 0.0)
                            this.velocity.X += num2;
                    }
                    if ((double)this.velocity.X > (double)num6)
                    {
                        this.velocity.X -= num2;
                        if ((double)num2 > 0.0500000007450581 && (double)this.velocity.X > 0.0)
                            this.velocity.X -= num2;
                    }
                    if ((double)this.velocity.Y < (double)num7)
                    {
                        this.velocity.Y += num2;
                        if ((double)num2 > 0.0500000007450581 && (double)this.velocity.Y < 0.0)
                            this.velocity.Y += num2 * 2f;
                    }
                    if ((double)this.velocity.Y > (double)num7)
                    {
                        this.velocity.Y -= num2;
                        if ((double)num2 > 0.0500000007450581 && (double)this.velocity.Y > 0.0)
                            this.velocity.Y -= num2 * 2f;
                    }
                    if ((double)this.velocity.X > 0.25)
                        this.direction = -1;
                    else if ((double)this.velocity.X < -0.25)
                        this.direction = 1;
                    this.spriteDirection = this.direction;
                    this.rotation = this.velocity.X * 0.05f;
                    ++this.frameCounter;
                    int num11 = 2;
                    if (this.type == 380)
                        num11 = 5;
                    if (this.frameCounter > num11)
                    {
                        ++this.frame;
                        this.frameCounter = 0;
                    }
                    if (this.frame <= 3)
                        return;
                    this.frame = 0;
                }
                else if (this.type == 211)
                {
                    float num2 = 0.2f;
                    float num3 = 5f;
                    this.tileCollide = false;
                    Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num4 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector2_1.X;
                    float num5 = Main.player[this.owner].position.Y + Main.player[this.owner].gfxOffY + (float)(Main.player[this.owner].height / 2) - vector2_1.Y;
                    if (Main.player[this.owner].controlLeft)
                        num4 -= 120f;
                    else if (Main.player[this.owner].controlRight)
                        num4 += 120f;
                    float num6;
                    if (Main.player[this.owner].controlDown)
                    {
                        num6 = num5 + 120f;
                    }
                    else
                    {
                        if (Main.player[this.owner].controlUp)
                            num5 -= 120f;
                        num6 = num5 - 60f;
                    }
                    float num7 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num6 * (double)num6);
                    if ((double)num7 > 1000.0)
                    {
                        this.position.X += num4;
                        this.position.Y += num6;
                    }
                    if ((double)this.localAI[0] == 1.0)
                    {
                        if ((double)num7 < 10.0 && (double)Math.Abs(Main.player[this.owner].velocity.X) + (double)Math.Abs(Main.player[this.owner].velocity.Y) < (double)num3 && (double)Main.player[this.owner].velocity.Y == 0.0)
                            this.localAI[0] = 0.0f;
                        float num8 = 12f;
                        if ((double)num7 < (double)num8)
                        {
                            this.velocity.X = num4;
                            this.velocity.Y = num6;
                        }
                        else
                        {
                            float num9 = num8 / num7;
                            this.velocity.X = num4 * num9;
                            this.velocity.Y = num6 * num9;
                        }
                        if ((double)this.velocity.X > 0.5)
                            this.direction = -1;
                        else if ((double)this.velocity.X < -0.5)
                            this.direction = 1;
                        this.spriteDirection = this.direction;
                        this.rotation -= (float)(0.200000002980232 + (double)Math.Abs(this.velocity.X) * 0.025000000372529) * (float)this.direction;
                        ++this.frameCounter;
                        if (this.frameCounter > 3)
                        {
                            ++this.frame;
                            this.frameCounter = 0;
                        }
                        if (this.frame < 5)
                            this.frame = 5;
                        if (this.frame > 9)
                            this.frame = 5;
                        for (int index1 = 0; index1 < 2; ++index1)
                        {
                            int index2 = Dust.NewDust(new Vector2(this.position.X + 3f, this.position.Y + 4f), 14, 14, 156, 0.0f, 0.0f, 0, new Color(), 1f);
                            Main.dust[index2].velocity *= 0.2f;
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].scale = 1.25f;
                            Main.dust[index2].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].cLight, Main.player[this.owner]);
                        }
                    }
                    else
                    {
                        if ((double)num7 > 200.0)
                            this.localAI[0] = 1f;
                        if ((double)this.velocity.X > 0.5)
                            this.direction = -1;
                        else if ((double)this.velocity.X < -0.5)
                            this.direction = 1;
                        this.spriteDirection = this.direction;
                        if ((double)num7 < 10.0)
                        {
                            this.velocity.X = num4;
                            this.velocity.Y = num6;
                            this.rotation = this.velocity.X * 0.05f;
                            if ((double)num7 < (double)num3)
                            {
                                Projectile projectile1 = this;
                                Vector2 vector2_2 = projectile1.position + this.velocity;
                                projectile1.position = vector2_2;
                                Projectile projectile2 = this;
                                Vector2 vector2_3 = projectile2.velocity * 0.0f;
                                projectile2.velocity = vector2_3;
                                num2 = 0.0f;
                            }
                            this.direction = -Main.player[this.owner].direction;
                        }
                        float num8 = num3 / num7;
                        float num9 = num4 * num8;
                        float num10 = num6 * num8;
                        if ((double)this.velocity.X < (double)num9)
                        {
                            this.velocity.X += num2;
                            if ((double)this.velocity.X < 0.0)
                                this.velocity.X *= 0.99f;
                        }
                        if ((double)this.velocity.X > (double)num9)
                        {
                            this.velocity.X -= num2;
                            if ((double)this.velocity.X > 0.0)
                                this.velocity.X *= 0.99f;
                        }
                        if ((double)this.velocity.Y < (double)num10)
                        {
                            this.velocity.Y += num2;
                            if ((double)this.velocity.Y < 0.0)
                                this.velocity.Y *= 0.99f;
                        }
                        if ((double)this.velocity.Y > (double)num10)
                        {
                            this.velocity.Y -= num2;
                            if ((double)this.velocity.Y > 0.0)
                                this.velocity.Y *= 0.99f;
                        }
                        if ((double)this.velocity.X != 0.0 || (double)this.velocity.Y != 0.0)
                            this.rotation = this.velocity.X * 0.05f;
                        ++this.frameCounter;
                        if (this.frameCounter > 3)
                        {
                            ++this.frame;
                            this.frameCounter = 0;
                        }
                        if (this.frame <= 4)
                            return;
                        this.frame = 0;
                    }
                }
                else if (this.type == 199)
                {
                    float num2 = 0.1f;
                    this.tileCollide = false;
                    int num3 = 200;
                    Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num4 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector2.X;
                    float num5 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector2.Y - 60f;
                    float num6 = num4 - 2f;
                    if (this.type == (int)sbyte.MaxValue)
                        num5 = Main.player[this.owner].position.Y - vector2.Y;
                    float num7 = (float)Math.Sqrt((double)num6 * (double)num6 + (double)num5 * (double)num5);
                    float num8 = 4f;
                    float num9 = num7;
                    if ((double)num7 < (double)num3 && (double)Main.player[this.owner].velocity.Y == 0.0 && ((double)this.position.Y + (double)this.height <= (double)Main.player[this.owner].position.Y + (double)Main.player[this.owner].height && !Collision.SolidCollision(this.position, this.width, this.height)))
                    {
                        this.ai[0] = 0.0f;
                        if ((double)this.velocity.Y < -6.0)
                            this.velocity.Y = -6f;
                    }
                    if ((double)num7 < 4.0)
                    {
                        this.velocity.X = num6;
                        this.velocity.Y = num5;
                        num2 = 0.0f;
                    }
                    else
                    {
                        if ((double)num7 > 350.0)
                        {
                            num2 = 0.2f;
                            num8 = 10f;
                        }
                        float num10 = num8 / num7;
                        num6 *= num10;
                        num5 *= num10;
                    }
                    if ((double)this.velocity.X < (double)num6)
                    {
                        this.velocity.X += num2;
                        if ((double)this.velocity.X < 0.0)
                            this.velocity.X += num2;
                    }
                    if ((double)this.velocity.X > (double)num6)
                    {
                        this.velocity.X -= num2;
                        if ((double)this.velocity.X > 0.0)
                            this.velocity.X -= num2;
                    }
                    if ((double)this.velocity.Y < (double)num5)
                    {
                        this.velocity.Y += num2;
                        if ((double)this.velocity.Y < 0.0)
                            this.velocity.Y += num2;
                    }
                    if ((double)this.velocity.Y > (double)num5)
                    {
                        this.velocity.Y -= num2;
                        if ((double)this.velocity.Y > 0.0)
                            this.velocity.Y -= num2;
                    }
                    this.direction = -Main.player[this.owner].direction;
                    this.spriteDirection = 1;
                    this.rotation = this.velocity.Y * 0.05f * (float)-this.direction;
                    if ((double)num9 >= 50.0)
                    {
                        ++this.frameCounter;
                        if (this.frameCounter <= 6)
                            return;
                        this.frameCounter = 0;
                        if ((double)this.velocity.X < 0.0)
                        {
                            if (this.frame < 2)
                                ++this.frame;
                            if (this.frame <= 2)
                                return;
                            --this.frame;
                        }
                        else
                        {
                            if (this.frame < 6)
                                ++this.frame;
                            if (this.frame <= 6)
                                return;
                            --this.frame;
                        }
                    }
                    else
                    {
                        ++this.frameCounter;
                        if (this.frameCounter > 6)
                        {
                            this.frame += this.direction;
                            this.frameCounter = 0;
                        }
                        if (this.frame > 7)
                            this.frame = 0;
                        if (this.frame >= 0)
                            return;
                        this.frame = 7;
                    }
                }
                else
                {
                    if ((double)this.ai[1] == 0.0)
                    {
                        int num2 = 500;
                        if (this.type == (int)sbyte.MaxValue)
                            num2 = 200;
                        if (this.type == 208)
                            num2 = 300;
                        if (this.type >= 191 && this.type <= 194 || this.type == 266 || this.type >= 390 && this.type <= 392)
                        {
                            num2 += 40 * this.minionPos;
                            if ((double)this.localAI[0] > 0.0)
                                num2 += 500;
                            if (this.type == 266 && (double)this.localAI[0] > 0.0)
                                num2 += 100;
                            if (this.type >= 390 && this.type <= 392 && (double)this.localAI[0] > 0.0)
                                num2 += 400;
                        }
                        if (Main.player[this.owner].rocketDelay2 > 0)
                            this.ai[0] = 1f;
                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num3 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector2.X;
                        if (this.type >= 191)
                        {
                            int num4 = this.type;
                        }
                        float num5 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector2.Y;
                        float num6 = (float)Math.Sqrt((double)num3 * (double)num3 + (double)num5 * (double)num5);
                        if ((double)num6 > 2000.0)
                        {
                            this.position.X = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - (float)(this.width / 2);
                            this.position.Y = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - (float)(this.height / 2);
                        }
                        else if ((double)num6 > (double)num2 || (double)Math.Abs(num5) > 300.0 && ((this.type < 191 || this.type > 194) && this.type != 266 && (this.type < 390 || this.type > 392) || (double)this.localAI[0] <= 0.0))
                        {
                            if (this.type != 324)
                            {
                                if ((double)num5 > 0.0 && (double)this.velocity.Y < 0.0)
                                    this.velocity.Y = 0.0f;
                                if ((double)num5 < 0.0 && (double)this.velocity.Y > 0.0)
                                    this.velocity.Y = 0.0f;
                            }
                            this.ai[0] = 1f;
                        }
                    }
                    if (this.type == 209 && (double)this.ai[0] != 0.0)
                    {
                        if ((double)Main.player[this.owner].velocity.Y == 0.0 && this.alpha >= 100)
                        {
                            this.position.X = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - (float)(this.width / 2);
                            this.position.Y = Main.player[this.owner].position.Y + (float)Main.player[this.owner].height - (float)this.height;
                            this.ai[0] = 0.0f;
                        }
                        else
                        {
                            this.velocity.X = 0.0f;
                            this.velocity.Y = 0.0f;
                            this.alpha += 5;
                            if (this.alpha <= (int)byte.MaxValue)
                                return;
                            this.alpha = (int)byte.MaxValue;
                        }
                    }
                    else if ((double)this.ai[0] != 0.0)
                    {
                        float num2 = 0.2f;
                        int num3 = 200;
                        if (this.type == (int)sbyte.MaxValue)
                            num3 = 100;
                        if (this.type >= 191 && this.type <= 194)
                        {
                            num2 = 0.5f;
                            num3 = 100;
                        }
                        this.tileCollide = false;
                        Vector2 vector2_1 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                        float num4 = Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - vector2_1.X;
                        if (this.type >= 191 && this.type <= 194 || this.type == 266 || this.type >= 390 && this.type <= 392)
                        {
                            num4 -= (float)(40 * Main.player[this.owner].direction);
                            float num5 = 700f;
                            if (this.type >= 191 && this.type <= 194)
                                num5 += 100f;
                            bool flag5 = false;
                            int num6 = -1;
                            for (int index = 0; index < 200; ++index)
                            {
                                if (Main.npc[index].CanBeChasedBy((object)this, false))
                                {
                                    float num7 = Main.npc[index].position.X + (float)(Main.npc[index].width / 2);
                                    float num8 = Main.npc[index].position.Y + (float)(Main.npc[index].height / 2);
                                    if ((double)(Math.Abs(Main.player[this.owner].position.X + (float)(Main.player[this.owner].width / 2) - num7) + Math.Abs(Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - num8)) < (double)num5)
                                    {
                                        if (Collision.CanHit(this.position, this.width, this.height, Main.npc[index].position, Main.npc[index].width, Main.npc[index].height))
                                            num6 = index;
                                        flag5 = true;
                                        break;
                                    }
                                }
                            }
                            if (!flag5)
                                num4 -= (float)(40 * this.minionPos * Main.player[this.owner].direction);
                            if (flag5 && num6 >= 0)
                                this.ai[0] = 0.0f;
                        }
                        float num9 = Main.player[this.owner].position.Y + (float)(Main.player[this.owner].height / 2) - vector2_1.Y;
                        if (this.type == (int)sbyte.MaxValue)
                            num9 = Main.player[this.owner].position.Y - vector2_1.Y;
                        float num10 = (float)Math.Sqrt((double)num4 * (double)num4 + (double)num9 * (double)num9);
                        float num11 = 10f;
                        float num12 = num10;
                        if (this.type == 111)
                            num11 = 11f;
                        if (this.type == (int)sbyte.MaxValue)
                            num11 = 9f;
                        if (this.type == 324)
                            num11 = 20f;
                        if (this.type >= 191 && this.type <= 194)
                        {
                            num2 = 0.4f;
                            num11 = 12f;
                            if ((double)num11 < (double)Math.Abs(Main.player[this.owner].velocity.X) + (double)Math.Abs(Main.player[this.owner].velocity.Y))
                                num11 = Math.Abs(Main.player[this.owner].velocity.X) + Math.Abs(Main.player[this.owner].velocity.Y);
                        }
                        if (this.type == 208 && (double)Math.Abs(Main.player[this.owner].velocity.X) + (double)Math.Abs(Main.player[this.owner].velocity.Y) > 4.0)
                            num3 = -1;
                        if ((double)num10 < (double)num3 && (double)Main.player[this.owner].velocity.Y == 0.0 && ((double)this.position.Y + (double)this.height <= (double)Main.player[this.owner].position.Y + (double)Main.player[this.owner].height && !Collision.SolidCollision(this.position, this.width, this.height)))
                        {
                            this.ai[0] = 0.0f;
                            if ((double)this.velocity.Y < -6.0)
                                this.velocity.Y = -6f;
                        }
                        float num13;
                        float num14;
                        if ((double)num10 < 60.0)
                        {
                            num13 = this.velocity.X;
                            num14 = this.velocity.Y;
                        }
                        else
                        {
                            float num5 = num11 / num10;
                            num13 = num4 * num5;
                            num14 = num9 * num5;
                        }
                        if (this.type == 324)
                        {
                            if ((double)num12 > 1000.0)
                            {
                                if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) < (double)num11 - 1.25)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_2 = projectile.velocity * 1.025f;
                                    projectile.velocity = vector2_2;
                                }
                                if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) > (double)num11 + 1.25)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_2 = projectile.velocity * 0.975f;
                                    projectile.velocity = vector2_2;
                                }
                            }
                            else if ((double)num12 > 600.0)
                            {
                                if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) < (double)num11 - 1.0)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_2 = projectile.velocity * 1.05f;
                                    projectile.velocity = vector2_2;
                                }
                                if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) > (double)num11 + 1.0)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_2 = projectile.velocity * 0.95f;
                                    projectile.velocity = vector2_2;
                                }
                            }
                            else if ((double)num12 > 400.0)
                            {
                                if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) < (double)num11 - 0.5)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_2 = projectile.velocity * 1.075f;
                                    projectile.velocity = vector2_2;
                                }
                                if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) > (double)num11 + 0.5)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_2 = projectile.velocity * 0.925f;
                                    projectile.velocity = vector2_2;
                                }
                            }
                            else
                            {
                                if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) < (double)num11 - 0.25)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_2 = projectile.velocity * 1.1f;
                                    projectile.velocity = vector2_2;
                                }
                                if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) > (double)num11 + 0.25)
                                {
                                    Projectile projectile = this;
                                    Vector2 vector2_2 = projectile.velocity * 0.9f;
                                    projectile.velocity = vector2_2;
                                }
                            }
                            this.velocity.X = (float)(((double)this.velocity.X * 34.0 + (double)num13) / 35.0);
                            this.velocity.Y = (float)(((double)this.velocity.Y * 34.0 + (double)num14) / 35.0);
                        }
                        else
                        {
                            if ((double)this.velocity.X < (double)num13)
                            {
                                this.velocity.X += num2;
                                if ((double)this.velocity.X < 0.0)
                                    this.velocity.X += num2 * 1.5f;
                            }
                            if ((double)this.velocity.X > (double)num13)
                            {
                                this.velocity.X -= num2;
                                if ((double)this.velocity.X > 0.0)
                                    this.velocity.X -= num2 * 1.5f;
                            }
                            if ((double)this.velocity.Y < (double)num14)
                            {
                                this.velocity.Y += num2;
                                if ((double)this.velocity.Y < 0.0)
                                    this.velocity.Y += num2 * 1.5f;
                            }
                            if ((double)this.velocity.Y > (double)num14)
                            {
                                this.velocity.Y -= num2;
                                if ((double)this.velocity.Y > 0.0)
                                    this.velocity.Y -= num2 * 1.5f;
                            }
                        }
                        if (this.type == 111)
                            this.frame = 7;
                        if (this.type == 112)
                            this.frame = 2;
                        if (this.type >= 191 && this.type <= 194 && this.frame < 12)
                        {
                            this.frame = Main.rand.Next(12, 18);
                            this.frameCounter = 0;
                        }
                        if (this.type != 313)
                        {
                            if ((double)this.velocity.X > 0.5)
                                this.spriteDirection = -1;
                            else if ((double)this.velocity.X < -0.5)
                                this.spriteDirection = 1;
                        }
                        if (this.type == 398)
                        {
                            if ((double)this.velocity.X > 0.5)
                                this.spriteDirection = 1;
                            else if ((double)this.velocity.X < -0.5)
                                this.spriteDirection = -1;
                        }
                        if (this.type == 112)
                            this.rotation = this.spriteDirection != -1 ? (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f : (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.57f;
                        else if (this.type >= 390 && this.type <= 392)
                        {
                            int index1 = (int)((double)this.Center.X / 16.0);
                            int index2 = (int)((double)this.Center.Y / 16.0);
                            if (Main.tile[index1, index2] != null && (int)Main.tile[index1, index2].wall > 0)
                            {
                                this.rotation = Utils.ToRotation(this.velocity) + 1.570796f;
                                this.frameCounter = this.frameCounter + (int)((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y));
                                if (this.frameCounter > 5)
                                {
                                    ++this.frame;
                                    this.frameCounter = 0;
                                }
                                if (this.frame > 7)
                                    this.frame = 4;
                                if (this.frame < 4)
                                    this.frame = 7;
                            }
                            else
                            {
                                this.frameCounter = this.frameCounter + 1;
                                if (this.frameCounter > 2)
                                {
                                    ++this.frame;
                                    this.frameCounter = 0;
                                }
                                if (this.frame < 8 || this.frame > 10)
                                    this.frame = 8;
                                this.rotation = this.velocity.X * 0.1f;
                            }
                        }
                        else if (this.type == 334)
                        {
                            this.frameCounter = this.frameCounter + 1;
                            if (this.frameCounter > 1)
                            {
                                ++this.frame;
                                this.frameCounter = 0;
                            }
                            if (this.frame < 7 || this.frame > 10)
                                this.frame = 7;
                            this.rotation = this.velocity.X * 0.1f;
                        }
                        else if (this.type == 353)
                        {
                            this.frameCounter = this.frameCounter + 1;
                            if (this.frameCounter > 6)
                            {
                                ++this.frame;
                                this.frameCounter = 0;
                            }
                            if (this.frame < 10 || this.frame > 13)
                                this.frame = 10;
                            this.rotation = this.velocity.X * 0.05f;
                        }
                        else if (this.type == (int)sbyte.MaxValue)
                        {
                            this.frameCounter = this.frameCounter + 3;
                            if (this.frameCounter > 6)
                            {
                                ++this.frame;
                                this.frameCounter = 0;
                            }
                            if (this.frame <= 5 || this.frame > 15)
                                this.frame = 6;
                            this.rotation = this.velocity.X * 0.1f;
                        }
                        else if (this.type == 269)
                        {
                            if (this.frame == 6)
                                this.frameCounter = 0;
                            else if (this.frame < 4 || this.frame > 6)
                            {
                                this.frameCounter = 0;
                                this.frame = 4;
                            }
                            else
                            {
                                this.frameCounter = this.frameCounter + 1;
                                if (this.frameCounter > 6)
                                {
                                    ++this.frame;
                                    this.frameCounter = 0;
                                }
                            }
                            this.rotation = this.velocity.X * 0.05f;
                        }
                        else if (this.type == 266)
                        {
                            this.frameCounter = this.frameCounter + 1;
                            if (this.frameCounter > 6)
                            {
                                ++this.frame;
                                this.frameCounter = 0;
                            }
                            if (this.frame < 2 || this.frame > 5)
                                this.frame = 2;
                            this.rotation = this.velocity.X * 0.1f;
                        }
                        else if (this.type == 324)
                        {
                            this.frameCounter = this.frameCounter + 1;
                            if (this.frameCounter > 1)
                            {
                                ++this.frame;
                                this.frameCounter = 0;
                            }
                            if (this.frame < 6 || this.frame > 9)
                                this.frame = 6;
                            this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.58f;
                            Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, 0.9f, 0.6f, 0.2f);
                            for (int index1 = 0; index1 < 2; ++index1)
                            {
                                int num5 = 4;
                                int index2 = Dust.NewDust(new Vector2(this.Center.X - (float)num5, this.Center.Y - (float)num5) - this.velocity * 0.0f, num5 * 2, num5 * 2, 6, 0.0f, 0.0f, 100, new Color(), 1f);
                                Main.dust[index2].scale *= (float)(1.79999995231628 + (double)Main.rand.Next(10) * 0.100000001490116);
                                Main.dust[index2].velocity *= 0.2f;
                                if (index1 == 1)
                                    Main.dust[index2].position -= this.velocity * 0.5f;
                                Main.dust[index2].noGravity = true;
                                int index3 = Dust.NewDust(new Vector2(this.Center.X - (float)num5, this.Center.Y - (float)num5) - this.velocity * 0.0f, num5 * 2, num5 * 2, 31, 0.0f, 0.0f, 100, new Color(), 0.5f);
                                Main.dust[index3].fadeIn = (float)(1.0 + (double)Main.rand.Next(5) * 0.100000001490116);
                                Main.dust[index3].velocity *= 0.05f;
                                if (index1 == 1)
                                    Main.dust[index3].position -= this.velocity * 0.5f;
                            }
                        }
                        else if (this.type == 268)
                        {
                            this.frameCounter = this.frameCounter + 1;
                            if (this.frameCounter > 4)
                            {
                                ++this.frame;
                                this.frameCounter = 0;
                            }
                            if (this.frame < 6 || this.frame > 7)
                                this.frame = 6;
                            this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.58f;
                        }
                        else if (this.type == 200)
                        {
                            this.frameCounter = this.frameCounter + 3;
                            if (this.frameCounter > 6)
                            {
                                ++this.frame;
                                this.frameCounter = 0;
                            }
                            if (this.frame <= 5 || this.frame > 9)
                                this.frame = 6;
                            this.rotation = this.velocity.X * 0.1f;
                        }
                        else if (this.type == 208)
                        {
                            this.rotation = this.velocity.X * 0.075f;
                            ++this.frameCounter;
                            if (this.frameCounter > 6)
                            {
                                ++this.frame;
                                this.frameCounter = 0;
                            }
                            if (this.frame > 4)
                                this.frame = 1;
                            if (this.frame < 1)
                                this.frame = 1;
                        }
                        else if (this.type == 236)
                        {
                            this.rotation = this.velocity.Y * 0.05f * (float)this.direction;
                            if ((double)this.velocity.Y < 0.0)
                                this.frameCounter += 2;
                            else
                                ++this.frameCounter;
                            if (this.frameCounter >= 6)
                            {
                                ++this.frame;
                                this.frameCounter = 0;
                            }
                            if (this.frame > 12)
                                this.frame = 9;
                            if (this.frame < 9)
                                this.frame = 9;
                        }
                        else if (this.type == 499)
                        {
                            this.rotation = this.velocity.Y * 0.05f * (float)this.direction;
                            if ((double)this.velocity.Y < 0.0)
                                this.frameCounter += 2;
                            else
                                ++this.frameCounter;
                            if (this.frameCounter >= 6)
                            {
                                ++this.frame;
                                this.frameCounter = 0;
                            }
                            if (this.frame >= 12)
                                this.frame = 8;
                            if (this.frame < 8)
                                this.frame = 8;
                        }
                        else if (this.type == 314)
                        {
                            this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.58f;
                            ++this.frameCounter;
                            if (this.frameCounter >= 3)
                            {
                                ++this.frame;
                                this.frameCounter = 0;
                            }
                            if (this.frame > 12)
                                this.frame = 7;
                            if (this.frame < 7)
                                this.frame = 7;
                        }
                        else if (this.type == 319)
                        {
                            this.rotation = this.velocity.X * 0.05f;
                            ++this.frameCounter;
                            if (this.frameCounter >= 6)
                            {
                                ++this.frame;
                                this.frameCounter = 0;
                            }
                            if (this.frame > 10)
                                this.frame = 6;
                            if (this.frame < 6)
                                this.frame = 6;
                        }
                        else if (this.type == 210)
                        {
                            this.rotation = (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 1.58f;
                            this.frameCounter += 3;
                            if (this.frameCounter > 6)
                            {
                                ++this.frame;
                                this.frameCounter = 0;
                            }
                            if (this.frame > 11)
                                this.frame = 7;
                            if (this.frame < 7)
                                this.frame = 7;
                        }
                        else if (this.type == 313)
                        {
                            this.position.Y += (float)this.height;
                            this.height = 54;
                            this.position.Y -= (float)this.height;
                            this.position.X += (float)(this.width / 2);
                            this.width = 54;
                            this.position.X -= (float)(this.width / 2);
                            this.rotation += this.velocity.X * 0.01f;
                            this.frameCounter = 0;
                            this.frame = 11;
                        }
                        else if (this.type == 398)
                        {
                            this.frameCounter = this.frameCounter + 1;
                            if (this.frameCounter > 1)
                            {
                                ++this.frame;
                                this.frameCounter = 0;
                            }
                            if (this.frame < 6 || this.frame > 9)
                                this.frame = 6;
                            this.rotation = this.velocity.X * 0.1f;
                        }
                        else
                            this.rotation = this.spriteDirection != -1 ? (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X) + 3.14f : (float)Math.Atan2((double)this.velocity.Y, (double)this.velocity.X);
                        if (this.type >= 191 && this.type <= 194 || (this.type == 499 || this.type == 398) || (this.type == 390 || this.type == 391 || (this.type == 392 || this.type == (int)sbyte.MaxValue)) || (this.type == 200 || this.type == 208 || (this.type == 210 || this.type == 236) || (this.type == 266 || this.type == 268 || (this.type == 269 || this.type == 313))) || (this.type == 314 || this.type == 319 || (this.type == 324 || this.type == 334) || this.type == 353))
                            return;
                        int index4 = Dust.NewDust(new Vector2((float)((double)this.position.X + (double)(this.width / 2) - 4.0), (float)((double)this.position.Y + (double)(this.height / 2) - 4.0)) - this.velocity, 8, 8, 16, (float)(-(double)this.velocity.X * 0.5), this.velocity.Y * 0.5f, 50, new Color(), 1.7f);
                        Main.dust[index4].velocity.X = Main.dust[index4].velocity.X * 0.2f;
                        Main.dust[index4].velocity.Y = Main.dust[index4].velocity.Y * 0.2f;
                        Main.dust[index4].noGravity = true;
                    }
                    else
                    {
                        if (this.type >= 191 && this.type <= 194)
                        {
                            float num2 = (float)(40 * this.minionPos);
                            int num3 = 30;
                            int num4 = 60;
                            --this.localAI[0];
                            if ((double)this.localAI[0] < 0.0)
                                this.localAI[0] = 0.0f;
                            if ((double)this.ai[1] > 0.0)
                            {
                                --this.ai[1];
                            }
                            else
                            {
                                float num5 = this.position.X;
                                float num6 = this.position.Y;
                                float num7 = 100000f;
                                float num8 = num7;
                                int num9 = -1;
                                for (int index = 0; index < 200; ++index)
                                {
                                    if (Main.npc[index].CanBeChasedBy((object)this, false))
                                    {
                                        float num10 = Main.npc[index].position.X + (float)(Main.npc[index].width / 2);
                                        float num11 = Main.npc[index].position.Y + (float)(Main.npc[index].height / 2);
                                        float num12 = Math.Abs(this.position.X + (float)(this.width / 2) - num10) + Math.Abs(this.position.Y + (float)(this.height / 2) - num11);
                                        if ((double)num12 < (double)num7)
                                        {
                                            if (num9 == -1 && (double)num12 <= (double)num8)
                                            {
                                                num8 = num12;
                                                num5 = num10;
                                                num6 = num11;
                                            }
                                            if (Collision.CanHit(this.position, this.width, this.height, Main.npc[index].position, Main.npc[index].width, Main.npc[index].height))
                                            {
                                                num7 = num12;
                                                num5 = num10;
                                                num6 = num11;
                                                num9 = index;
                                            }
                                        }
                                    }
                                }
                                if (num9 == -1 && (double)num8 < (double)num7)
                                    num7 = num8;
                                float num13 = 400f;
                                if ((double)this.position.Y > Main.worldSurface * 16.0)
                                    num13 = 200f;
                                if ((double)num7 < (double)num13 + (double)num2 && num9 == -1)
                                {
                                    float num10 = num5 - (this.position.X + (float)(this.width / 2));
                                    if ((double)num10 < -5.0)
                                    {
                                        flag1 = true;
                                        flag2 = false;
                                    }
                                    else if ((double)num10 > 5.0)
                                    {
                                        flag2 = true;
                                        flag1 = false;
                                    }
                                }
                                else if (num9 >= 0 && (double)num7 < 800.0 + (double)num2)
                                {
                                    this.localAI[0] = (float)num4;
                                    float num10 = num5 - (this.position.X + (float)(this.width / 2));
                                    if ((double)num10 > 300.0 || (double)num10 < -300.0)
                                    {
                                        if ((double)num10 < -50.0)
                                        {
                                            flag1 = true;
                                            flag2 = false;
                                        }
                                        else if ((double)num10 > 50.0)
                                        {
                                            flag2 = true;
                                            flag1 = false;
                                        }
                                    }
                                    else if (this.owner == Main.myPlayer)
                                    {
                                        this.ai[1] = (float)num3;
                                        float num11 = 12f;
                                        Vector2 vector2 = new Vector2(this.position.X + (float)this.width * 0.5f, (float)((double)this.position.Y + (double)(this.height / 2) - 8.0));
                                        float num12 = num5 - vector2.X + (float)Main.rand.Next(-20, 21);
                                        float num14 = (float)((double)(Math.Abs(num12) * 0.1f) * (double)Main.rand.Next(0, 100) * (1.0 / 1000.0));
                                        float num15 = num6 - vector2.Y + (float)Main.rand.Next(-20, 21) - num14;
                                        float num16 = (float)Math.Sqrt((double)num12 * (double)num12 + (double)num15 * (double)num15);
                                        float num17 = num11 / num16;
                                        float SpeedX = num12 * num17;
                                        float SpeedY = num15 * num17;
                                        int Damage = this.damage;
                                        int Type = 195;
                                        int index = Projectile.NewProjectile(vector2.X, vector2.Y, SpeedX, SpeedY, Type, Damage, this.knockBack, Main.myPlayer, 0.0f, 0.0f);
                                        Main.projectile[index].timeLeft = 300;
                                        if ((double)SpeedX < 0.0)
                                            this.direction = -1;
                                        if ((double)SpeedX > 0.0)
                                            this.direction = 1;
                                        this.netUpdate = true;
                                    }
                                }
                            }
                        }
                        bool flag5 = false;
                        Vector2 vector2_1 = Vector2.Zero;
                        bool flag6 = false;
                        if (this.type == 266 || this.type >= 390 && this.type <= 392)
                        {
                            float num2 = (float)(40 * this.minionPos);
                            int num3 = 60;
                            --this.localAI[0];
                            if ((double)this.localAI[0] < 0.0)
                                this.localAI[0] = 0.0f;
                            if ((double)this.ai[1] > 0.0)
                            {
                                --this.ai[1];
                            }
                            else
                            {
                                float x = this.position.X;
                                float y = this.position.Y;
                                float num4 = 100000f;
                                float num5 = num4;
                                int index1 = -1;
                                for (int index2 = 0; index2 < 200; ++index2)
                                {
                                    if (Main.npc[index2].CanBeChasedBy((object)this, false))
                                    {
                                        float num6 = Main.npc[index2].position.X + (float)(Main.npc[index2].width / 2);
                                        float num7 = Main.npc[index2].position.Y + (float)(Main.npc[index2].height / 2);
                                        float num8 = Math.Abs(this.position.X + (float)(this.width / 2) - num6) + Math.Abs(this.position.Y + (float)(this.height / 2) - num7);
                                        if ((double)num8 < (double)num4)
                                        {
                                            if (index1 == -1 && (double)num8 <= (double)num5)
                                            {
                                                num5 = num8;
                                                x = num6;
                                                y = num7;
                                            }
                                            if (Collision.CanHit(this.position, this.width, this.height, Main.npc[index2].position, Main.npc[index2].width, Main.npc[index2].height))
                                            {
                                                num4 = num8;
                                                x = num6;
                                                y = num7;
                                                index1 = index2;
                                            }
                                        }
                                    }
                                }
                                if (this.type >= 390 && this.type <= 392 && !Collision.SolidCollision(this.position, this.width, this.height))
                                    this.tileCollide = true;
                                if (index1 == -1 && (double)num5 < (double)num4)
                                    num4 = num5;
                                else if (index1 >= 0)
                                {
                                    flag5 = true;
                                    vector2_1 = new Vector2(x, y) - this.Center;
                                    if (this.type >= 390 && this.type <= 392)
                                    {
                                        if ((double)Main.npc[index1].position.Y > (double)this.position.Y + (double)this.height)
                                        {
                                            int index2 = (int)((double)this.Center.X / 16.0);
                                            int index3 = (int)(((double)this.position.Y + (double)this.height + 1.0) / 16.0);
                                            if (Main.tile[index2, index3] != null && Main.tile[index2, index3].active() && (int)Main.tile[index2, index3].type == 19)
                                                this.tileCollide = false;
                                        }
                                        Rectangle rectangle1 = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
                                        Rectangle rectangle2 = new Rectangle((int)Main.npc[index1].position.X, (int)Main.npc[index1].position.Y, Main.npc[index1].width, Main.npc[index1].height);
                                        int num6 = 10;
                                        rectangle2.X -= num6;
                                        rectangle2.Y -= num6;
                                        rectangle2.Width += num6 * 2;
                                        rectangle2.Height += num6 * 2;
                                        if (rectangle1.Intersects(rectangle2))
                                        {
                                            flag6 = true;
                                            Vector2 v = Main.npc[index1].Center - this.Center;
                                            if ((double)this.velocity.Y > 0.0 && (double)v.Y < 0.0)
                                                this.velocity.Y *= 0.5f;
                                            if ((double)this.velocity.Y < 0.0 && (double)v.Y > 0.0)
                                                this.velocity.Y *= 0.5f;
                                            if ((double)this.velocity.X > 0.0 && (double)v.X < 0.0)
                                                this.velocity.X *= 0.5f;
                                            if ((double)this.velocity.X < 0.0 && (double)v.X > 0.0)
                                                this.velocity.X *= 0.5f;
                                            if ((double)v.Length() > 14.0)
                                            {
                                                v.Normalize();
                                                v *= 14f;
                                            }
                                            this.rotation = (float)(((double)this.rotation * 5.0 + (double)Utils.ToRotation(v) + 1.57079637050629) / 6.0);
                                            this.velocity = (this.velocity * 9f + v) / 10f;
                                            for (int index2 = 0; index2 < 1000; ++index2)
                                            {
                                                if (this.whoAmI != index2 && this.owner == Main.projectile[index2].owner && (Main.projectile[index2].type >= 390 && Main.projectile[index2].type <= 392) && (double)(Main.projectile[index2].Center - this.Center).Length() < 15.0)
                                                {
                                                    float num7 = 0.5f;
                                                    if ((double)this.Center.Y > (double)Main.projectile[index2].Center.Y)
                                                    {
                                                        Main.projectile[index2].velocity.Y -= num7;
                                                        this.velocity.Y += num7;
                                                    }
                                                    else
                                                    {
                                                        Main.projectile[index2].velocity.Y += num7;
                                                        this.velocity.Y -= num7;
                                                    }
                                                    if ((double)this.Center.X > (double)Main.projectile[index2].Center.X)
                                                    {
                                                        this.velocity.X += num7;
                                                        Main.projectile[index2].velocity.X -= num7;
                                                    }
                                                    else
                                                    {
                                                        this.velocity.X -= num7;
                                                        Main.projectile[index2].velocity.Y += num7;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                float num9 = 300f;
                                if ((double)this.position.Y > Main.worldSurface * 16.0)
                                    num9 = 150f;
                                if (this.type >= 390 && this.type <= 392)
                                {
                                    num9 = 500f;
                                    if ((double)this.position.Y > Main.worldSurface * 16.0)
                                        num9 = 250f;
                                }
                                if ((double)num4 < (double)num9 + (double)num2 && index1 == -1)
                                {
                                    float num6 = x - (this.position.X + (float)(this.width / 2));
                                    if ((double)num6 < -5.0)
                                    {
                                        flag1 = true;
                                        flag2 = false;
                                    }
                                    else if ((double)num6 > 5.0)
                                    {
                                        flag2 = true;
                                        flag1 = false;
                                    }
                                }
                                bool flag7 = false;
                                if (this.type >= 390 && this.type <= 392 && (double)this.localAI[1] > 0.0)
                                {
                                    flag7 = true;
                                    --this.localAI[1];
                                }
                                if (index1 >= 0 && (double)num4 < 800.0 + (double)num2)
                                {
                                    this.friendly = true;
                                    this.localAI[0] = (float)num3;
                                    float num6 = x - (this.position.X + (float)(this.width / 2));
                                    if ((double)num6 < -10.0)
                                    {
                                        flag1 = true;
                                        flag2 = false;
                                    }
                                    else if ((double)num6 > 10.0)
                                    {
                                        flag2 = true;
                                        flag1 = false;
                                    }
                                    if ((double)y < (double)this.Center.Y - 100.0 && (double)num6 > -50.0 && ((double)num6 < 50.0 && (double)this.velocity.Y == 0.0))
                                    {
                                        float num7 = Math.Abs(y - this.Center.Y);
                                        if ((double)num7 < 120.0)
                                            this.velocity.Y = -10f;
                                        else if ((double)num7 < 210.0)
                                            this.velocity.Y = -13f;
                                        else if ((double)num7 < 270.0)
                                            this.velocity.Y = -15f;
                                        else if ((double)num7 < 310.0)
                                            this.velocity.Y = -17f;
                                        else if ((double)num7 < 380.0)
                                            this.velocity.Y = -18f;
                                    }
                                    if (flag7)
                                    {
                                        this.friendly = false;
                                        if ((double)this.velocity.X < 0.0)
                                            flag1 = true;
                                        else if ((double)this.velocity.X > 0.0)
                                            flag2 = true;
                                    }
                                }
                                else
                                    this.friendly = false;
                            }
                        }
                        if ((double)this.ai[1] != 0.0)
                        {
                            flag1 = false;
                            flag2 = false;
                        }
                        else if (this.type >= 191 && this.type <= 194 && (double)this.localAI[0] == 0.0)
                            this.direction = Main.player[this.owner].direction;
                        else if (this.type >= 390 && this.type <= 392)
                        {
                            int index1 = (int)((double)this.Center.X / 16.0);
                            int index2 = (int)((double)this.Center.Y / 16.0);
                            if (Main.tile[index1, index2] != null && (int)Main.tile[index1, index2].wall > 0)
                                flag1 = flag2 = false;
                        }
                        if (this.type == (int)sbyte.MaxValue)
                        {
                            if ((double)this.rotation > -0.1 && (double)this.rotation < 0.1)
                                this.rotation = 0.0f;
                            else if ((double)this.rotation < 0.0)
                                this.rotation += 0.1f;
                            else
                                this.rotation -= 0.1f;
                        }
                        else if (this.type != 313 && !flag6)
                            this.rotation = 0.0f;
                        if (this.type < 390 || this.type > 392)
                            this.tileCollide = true;
                        float num18 = 0.08f;
                        float num19 = 6.5f;
                        if (this.type == (int)sbyte.MaxValue)
                        {
                            num19 = 2f;
                            num18 = 0.04f;
                        }
                        if (this.type == 112)
                        {
                            num19 = 6f;
                            num18 = 0.06f;
                        }
                        if (this.type == 334)
                        {
                            num19 = 8f;
                            num18 = 0.08f;
                        }
                        if (this.type == 268)
                        {
                            num19 = 8f;
                            num18 = 0.4f;
                        }
                        if (this.type == 324)
                        {
                            num18 = 0.1f;
                            num19 = 3f;
                        }
                        if (this.type >= 191 && this.type <= 194 || this.type == 266 || this.type >= 390 && this.type <= 392)
                        {
                            num19 = 6f;
                            num18 = 0.2f;
                            if ((double)num19 < (double)Math.Abs(Main.player[this.owner].velocity.X) + (double)Math.Abs(Main.player[this.owner].velocity.Y))
                            {
                                num19 = Math.Abs(Main.player[this.owner].velocity.X) + Math.Abs(Main.player[this.owner].velocity.Y);
                                num18 = 0.3f;
                            }
                        }
                        if (this.type >= 390 && this.type <= 392)
                            num18 *= 2f;
                        if (flag1)
                        {
                            if ((double)this.velocity.X > -3.5)
                                this.velocity.X -= num18;
                            else
                                this.velocity.X -= num18 * 0.25f;
                        }
                        else if (flag2)
                        {
                            if ((double)this.velocity.X < 3.5)
                                this.velocity.X += num18;
                            else
                                this.velocity.X += num18 * 0.25f;
                        }
                        else
                        {
                            this.velocity.X *= 0.9f;
                            if ((double)this.velocity.X >= -(double)num18 && (double)this.velocity.X <= (double)num18)
                                this.velocity.X = 0.0f;
                        }
                        if (this.type == 208)
                        {
                            this.velocity.X *= 0.95f;
                            if ((double)this.velocity.X > -0.1 && (double)this.velocity.X < 0.1)
                                this.velocity.X = 0.0f;
                            flag1 = false;
                            flag2 = false;
                        }
                        if (flag1 || flag2)
                        {
                            int num2 = (int)((double)this.position.X + (double)(this.width / 2)) / 16;
                            int j = (int)((double)this.position.Y + (double)(this.height / 2)) / 16;
                            if (this.type == 236)
                                num2 += this.direction;
                            if (flag1)
                                --num2;
                            if (flag2)
                                ++num2;
                            if (WorldGen.SolidTile(num2 + (int)this.velocity.X, j))
                                flag4 = true;
                        }
                        if ((double)Main.player[this.owner].position.Y + (double)Main.player[this.owner].height - 8.0 > (double)this.position.Y + (double)this.height)
                            flag3 = true;
                        if (this.type == 268 && this.frameCounter < 10)
                            flag4 = false;
                        Collision.StepUp(ref this.position, ref this.velocity, this.width, this.height, ref this.stepSpeed, ref this.gfxOffY, 1, false, 0);
                        if ((double)this.velocity.Y == 0.0 || this.type == 200)
                        {
                            if (!flag3 && ((double)this.velocity.X < 0.0 || (double)this.velocity.X > 0.0))
                            {
                                int i = (int)((double)this.position.X + (double)(this.width / 2)) / 16;
                                int j = (int)((double)this.position.Y + (double)(this.height / 2)) / 16 + 1;
                                if (flag1)
                                    --i;
                                if (flag2)
                                    ++i;
                                WorldGen.SolidTile(i, j);
                            }
                            if (flag4)
                            {
                                int i1 = (int)((double)this.position.X + (double)(this.width / 2)) / 16;
                                int j = (int)((double)this.position.Y + (double)this.height) / 16 + 1;
                                if (WorldGen.SolidTile(i1, j) || Main.tile[i1, j].halfBrick() || ((int)Main.tile[i1, j].slope() > 0 || this.type == 200))
                                {
                                    if (this.type == 200)
                                    {
                                        this.velocity.Y = -3.1f;
                                    }
                                    else
                                    {
                                        try
                                        {
                                            int num2 = (int)((double)this.position.X + (double)(this.width / 2)) / 16;
                                            int num3 = (int)((double)this.position.Y + (double)(this.height / 2)) / 16;
                                            if (flag1)
                                                --num2;
                                            if (flag2)
                                                ++num2;
                                            int i2 = num2 + (int)this.velocity.X;
                                            if (!WorldGen.SolidTile(i2, num3 - 1) && !WorldGen.SolidTile(i2, num3 - 2))
                                                this.velocity.Y = -5.1f;
                                            else if (!WorldGen.SolidTile(i2, num3 - 2))
                                                this.velocity.Y = -7.1f;
                                            else if (WorldGen.SolidTile(i2, num3 - 5))
                                                this.velocity.Y = -11.1f;
                                            else if (WorldGen.SolidTile(i2, num3 - 4))
                                                this.velocity.Y = -10.1f;
                                            else
                                                this.velocity.Y = -9.1f;
                                        }
                                        catch
                                        {
                                            this.velocity.Y = -9.1f;
                                        }
                                    }
                                    if (this.type == (int)sbyte.MaxValue)
                                        this.ai[0] = 1f;
                                }
                            }
                            else if (this.type == 266 && (flag1 || flag2))
                                this.velocity.Y -= 6f;
                        }
                        if ((double)this.velocity.X > (double)num19)
                            this.velocity.X = num19;
                        if ((double)this.velocity.X < -(double)num19)
                            this.velocity.X = -num19;
                        if ((double)this.velocity.X < 0.0)
                            this.direction = -1;
                        if ((double)this.velocity.X > 0.0)
                            this.direction = 1;
                        if ((double)this.velocity.X > (double)num18 && flag2)
                            this.direction = 1;
                        if ((double)this.velocity.X < -(double)num18 && flag1)
                            this.direction = -1;
                        if (this.type != 313)
                        {
                            if (this.direction == -1)
                                this.spriteDirection = 1;
                            if (this.direction == 1)
                                this.spriteDirection = -1;
                        }
                        if (this.type == 398)
                            this.spriteDirection = this.direction;
                        if (this.type >= 191 && this.type <= 194)
                        {
                            if ((double)this.ai[1] > 0.0)
                            {
                                if ((double)this.localAI[1] == 0.0)
                                {
                                    this.localAI[1] = 1f;
                                    this.frame = 1;
                                }
                                if (this.frame != 0)
                                {
                                    ++this.frameCounter;
                                    if (this.frameCounter > 4)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame == 4)
                                        this.frame = 0;
                                }
                            }
                            else if ((double)this.velocity.Y == 0.0)
                            {
                                this.localAI[1] = 0.0f;
                                if ((double)this.velocity.X == 0.0)
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                                else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
                                {
                                    this.frameCounter = this.frameCounter + (int)Math.Abs(this.velocity.X);
                                    ++this.frameCounter;
                                    if (this.frameCounter > 6)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame < 5)
                                        this.frame = 5;
                                    if (this.frame >= 11)
                                        this.frame = 5;
                                }
                                else
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                            }
                            else if ((double)this.velocity.Y < 0.0)
                            {
                                this.frameCounter = 0;
                                this.frame = 4;
                            }
                            else if ((double)this.velocity.Y > 0.0)
                            {
                                this.frameCounter = 0;
                                this.frame = 4;
                            }
                            this.velocity.Y += 0.4f;
                            if ((double)this.velocity.Y > 10.0)
                                this.velocity.Y = 10f;
                            double num2 = (double)this.velocity.Y;
                        }
                        else if (this.type == 268)
                        {
                            if ((double)this.velocity.Y == 0.0)
                            {
                                if (this.frame > 5)
                                    this.frameCounter = 0;
                                if ((double)this.velocity.X == 0.0)
                                {
                                    int num2 = 3;
                                    ++this.frameCounter;
                                    if (this.frameCounter < num2)
                                        this.frame = 0;
                                    else if (this.frameCounter < num2 * 2)
                                        this.frame = 1;
                                    else if (this.frameCounter < num2 * 3)
                                        this.frame = 2;
                                    else if (this.frameCounter < num2 * 4)
                                        this.frame = 3;
                                    else
                                        this.frameCounter = num2 * 4;
                                }
                                else
                                {
                                    this.velocity.X *= 0.8f;
                                    ++this.frameCounter;
                                    int num2 = 3;
                                    if (this.frameCounter < num2)
                                        this.frame = 0;
                                    else if (this.frameCounter < num2 * 2)
                                        this.frame = 1;
                                    else if (this.frameCounter < num2 * 3)
                                        this.frame = 2;
                                    else if (this.frameCounter < num2 * 4)
                                        this.frame = 3;
                                    else if (flag1 || flag2)
                                    {
                                        this.velocity.X *= 2f;
                                        this.frame = 4;
                                        this.velocity.Y = -6.1f;
                                        this.frameCounter = 0;
                                        for (int index1 = 0; index1 < 4; ++index1)
                                        {
                                            int index2 = Dust.NewDust(new Vector2(this.position.X, (float)((double)this.position.Y + (double)this.height - 2.0)), this.width, 4, 5, 0.0f, 0.0f, 0, new Color(), 1f);
                                            Main.dust[index2].velocity += this.velocity;
                                            Main.dust[index2].velocity *= 0.4f;
                                        }
                                    }
                                    else
                                        this.frameCounter = num2 * 4;
                                }
                            }
                            else if ((double)this.velocity.Y < 0.0)
                            {
                                this.frameCounter = 0;
                                this.frame = 5;
                            }
                            else
                            {
                                this.frame = 4;
                                this.frameCounter = 3;
                            }
                            this.velocity.Y += 0.4f;
                            if ((double)this.velocity.Y <= 10.0)
                                return;
                            this.velocity.Y = 10f;
                        }
                        else if (this.type == 269)
                        {
                            if ((double)this.velocity.Y >= 0.0 && (double)this.velocity.Y <= 0.8)
                            {
                                if ((double)this.velocity.X == 0.0)
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                                else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
                                {
                                    int index = Dust.NewDust(new Vector2(this.position.X, (float)((double)this.position.Y + (double)this.height - 2.0)), this.width, 6, 76, 0.0f, 0.0f, 0, new Color(), 1f);
                                    Main.dust[index].noGravity = true;
                                    Main.dust[index].velocity *= 0.3f;
                                    Main.dust[index].noLight = true;
                                    this.frameCounter = this.frameCounter + (int)Math.Abs(this.velocity.X);
                                    ++this.frameCounter;
                                    if (this.frameCounter > 6)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame > 3)
                                        this.frame = 0;
                                }
                                else
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                            }
                            else
                            {
                                this.frameCounter = 0;
                                this.frame = 2;
                            }
                            this.velocity.Y += 0.4f;
                            if ((double)this.velocity.Y <= 10.0)
                                return;
                            this.velocity.Y = 10f;
                        }
                        else if (this.type == 313)
                        {
                            int index1 = (int)((double)this.Center.X / 16.0);
                            int index2 = (int)((double)this.Center.Y / 16.0);
                            if (Main.tile[index1, index2] != null && (int)Main.tile[index1, index2].wall > 0)
                            {
                                this.position.Y += (float)this.height;
                                this.height = 34;
                                this.position.Y -= (float)this.height;
                                this.position.X += (float)(this.width / 2);
                                this.width = 34;
                                this.position.X -= (float)(this.width / 2);
                                float num2 = 4f;
                                Vector2 vector2_2 = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                                float num3 = Main.player[this.owner].Center.X - vector2_2.X;
                                float num4 = Main.player[this.owner].Center.Y - vector2_2.Y;
                                float num5 = (float)Math.Sqrt((double)num3 * (double)num3 + (double)num4 * (double)num4);
                                float num6 = num2 / num5;
                                float num7 = num3 * num6;
                                float num8 = num4 * num6;
                                if ((double)num5 < 120.0)
                                {
                                    this.velocity.X *= 0.9f;
                                    this.velocity.Y *= 0.9f;
                                    if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) < 0.1)
                                    {
                                        Projectile projectile = this;
                                        Vector2 vector2_3 = projectile.velocity * 0.0f;
                                        projectile.velocity = vector2_3;
                                    }
                                }
                                else
                                {
                                    this.velocity.X = (float)(((double)this.velocity.X * 9.0 + (double)num7) / 10.0);
                                    this.velocity.Y = (float)(((double)this.velocity.Y * 9.0 + (double)num8) / 10.0);
                                }
                                if ((double)num5 >= 120.0)
                                {
                                    this.spriteDirection = this.direction;
                                    this.rotation = (float)Math.Atan2((double)this.velocity.Y * (double)-this.direction, (double)this.velocity.X * (double)-this.direction);
                                }
                                this.frameCounter = this.frameCounter + (int)((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y));
                                if (this.frameCounter > 6)
                                {
                                    ++this.frame;
                                    this.frameCounter = 0;
                                }
                                if (this.frame > 10)
                                    this.frame = 5;
                                if (this.frame >= 5)
                                    return;
                                this.frame = 10;
                            }
                            else
                            {
                                this.rotation = 0.0f;
                                if (this.direction == -1)
                                    this.spriteDirection = 1;
                                if (this.direction == 1)
                                    this.spriteDirection = -1;
                                this.position.Y += (float)this.height;
                                this.height = 30;
                                this.position.Y -= (float)this.height;
                                this.position.X += (float)(this.width / 2);
                                this.width = 30;
                                this.position.X -= (float)(this.width / 2);
                                if ((double)this.velocity.Y >= 0.0 && (double)this.velocity.Y <= 0.8)
                                {
                                    if ((double)this.velocity.X == 0.0)
                                    {
                                        this.frame = 0;
                                        this.frameCounter = 0;
                                    }
                                    else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
                                    {
                                        this.frameCounter = this.frameCounter + (int)Math.Abs(this.velocity.X);
                                        ++this.frameCounter;
                                        if (this.frameCounter > 6)
                                        {
                                            ++this.frame;
                                            this.frameCounter = 0;
                                        }
                                        if (this.frame > 3)
                                            this.frame = 0;
                                    }
                                    else
                                    {
                                        this.frame = 0;
                                        this.frameCounter = 0;
                                    }
                                }
                                else
                                {
                                    this.frameCounter = 0;
                                    this.frame = 4;
                                }
                                this.velocity.Y += 0.4f;
                                if ((double)this.velocity.Y <= 10.0)
                                    return;
                                this.velocity.Y = 10f;
                            }
                        }
                        else if (this.type >= 390 && this.type <= 392)
                        {
                            int index1 = (int)((double)this.Center.X / 16.0);
                            int index2 = (int)((double)this.Center.Y / 16.0);
                            if (Main.tile[index1, index2] != null && (int)Main.tile[index1, index2].wall > 0)
                            {
                                this.position.Y += (float)this.height;
                                this.height = 34;
                                this.position.Y -= (float)this.height;
                                this.position.X += (float)(this.width / 2);
                                this.width = 34;
                                this.position.X -= (float)(this.width / 2);
                                float num2 = 9f;
                                float num3 = (float)(40 * (this.minionPos + 1));
                                Vector2 v = Main.player[this.owner].Center - this.Center;
                                if (flag5)
                                {
                                    v = vector2_1;
                                    num3 = 10f;
                                }
                                else if (!Collision.CanHitLine(this.Center, 1, 1, Main.player[this.owner].Center, 1, 1))
                                    this.ai[0] = 1f;
                                if ((double)v.Length() < (double)num3)
                                {
                                    Projectile projectile1 = this;
                                    Vector2 vector2_2 = projectile1.velocity * 0.9f;
                                    projectile1.velocity = vector2_2;
                                    if ((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y) < 0.1)
                                    {
                                        Projectile projectile2 = this;
                                        Vector2 vector2_3 = projectile2.velocity * 0.0f;
                                        projectile2.velocity = vector2_3;
                                    }
                                }
                                else if ((double)v.Length() < 800.0 || !flag5)
                                    this.velocity = (this.velocity * 9f + Vector2.Normalize(v) * num2) / 10f;
                                if ((double)v.Length() >= (double)num3)
                                {
                                    this.spriteDirection = this.direction;
                                    this.rotation = Utils.ToRotation(this.velocity) + 1.570796f;
                                }
                                else
                                    this.rotation = Utils.ToRotation(v) + 1.570796f;
                                this.frameCounter = this.frameCounter + (int)((double)Math.Abs(this.velocity.X) + (double)Math.Abs(this.velocity.Y));
                                if (this.frameCounter > 5)
                                {
                                    ++this.frame;
                                    this.frameCounter = 0;
                                }
                                if (this.frame > 7)
                                    this.frame = 4;
                                if (this.frame >= 4)
                                    return;
                                this.frame = 7;
                            }
                            else
                            {
                                if (!flag6)
                                    this.rotation = 0.0f;
                                if (this.direction == -1)
                                    this.spriteDirection = 1;
                                if (this.direction == 1)
                                    this.spriteDirection = -1;
                                this.position.Y += (float)this.height;
                                this.height = 30;
                                this.position.Y -= (float)this.height;
                                this.position.X += (float)(this.width / 2);
                                this.width = 30;
                                this.position.X -= (float)(this.width / 2);
                                if (!flag5 && !Collision.CanHitLine(this.Center, 1, 1, Main.player[this.owner].Center, 1, 1))
                                    this.ai[0] = 1f;
                                if (!flag6 && this.frame >= 4 && this.frame <= 7)
                                {
                                    Vector2 vector2_2 = Main.player[this.owner].Center - this.Center;
                                    if (flag5)
                                        vector2_2 = vector2_1;
                                    float num2 = -vector2_2.Y;
                                    if ((double)vector2_2.Y <= 0.0)
                                    {
                                        if ((double)num2 < 120.0)
                                            this.velocity.Y = -10f;
                                        else if ((double)num2 < 210.0)
                                            this.velocity.Y = -13f;
                                        else if ((double)num2 < 270.0)
                                            this.velocity.Y = -15f;
                                        else if ((double)num2 < 310.0)
                                            this.velocity.Y = -17f;
                                        else if ((double)num2 < 380.0)
                                            this.velocity.Y = -18f;
                                    }
                                }
                                if (flag6)
                                {
                                    ++this.frameCounter;
                                    if (this.frameCounter > 3)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame >= 8)
                                        this.frame = 4;
                                    if (this.frame <= 3)
                                        this.frame = 7;
                                }
                                else if ((double)this.velocity.Y >= 0.0 && (double)this.velocity.Y <= 0.8)
                                {
                                    if ((double)this.velocity.X == 0.0)
                                    {
                                        this.frame = 0;
                                        this.frameCounter = 0;
                                    }
                                    else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
                                    {
                                        this.frameCounter = this.frameCounter + (int)Math.Abs(this.velocity.X);
                                        ++this.frameCounter;
                                        if (this.frameCounter > 5)
                                        {
                                            ++this.frame;
                                            this.frameCounter = 0;
                                        }
                                        if (this.frame > 2)
                                            this.frame = 0;
                                    }
                                    else
                                    {
                                        this.frame = 0;
                                        this.frameCounter = 0;
                                    }
                                }
                                else
                                {
                                    this.frameCounter = 0;
                                    this.frame = 3;
                                }
                                this.velocity.Y += 0.4f;
                                if ((double)this.velocity.Y <= 10.0)
                                    return;
                                this.velocity.Y = 10f;
                            }
                        }
                        else if (this.type == 314)
                        {
                            if ((double)this.velocity.Y >= 0.0 && (double)this.velocity.Y <= 0.8)
                            {
                                if ((double)this.velocity.X == 0.0)
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                                else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
                                {
                                    this.frameCounter = this.frameCounter + (int)Math.Abs(this.velocity.X);
                                    ++this.frameCounter;
                                    if (this.frameCounter > 6)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame > 6)
                                        this.frame = 1;
                                }
                                else
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                            }
                            else
                            {
                                this.frameCounter = 0;
                                this.frame = 7;
                            }
                            this.velocity.Y += 0.4f;
                            if ((double)this.velocity.Y <= 10.0)
                                return;
                            this.velocity.Y = 10f;
                        }
                        else if (this.type == 319)
                        {
                            if ((double)this.velocity.Y >= 0.0 && (double)this.velocity.Y <= 0.8)
                            {
                                if ((double)this.velocity.X == 0.0)
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                                else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
                                {
                                    this.frameCounter = this.frameCounter + (int)Math.Abs(this.velocity.X);
                                    ++this.frameCounter;
                                    if (this.frameCounter > 8)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame > 5)
                                        this.frame = 2;
                                }
                                else
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                            }
                            else
                            {
                                this.frameCounter = 0;
                                this.frame = 1;
                            }
                            this.velocity.Y += 0.4f;
                            if ((double)this.velocity.Y <= 10.0)
                                return;
                            this.velocity.Y = 10f;
                        }
                        else if (this.type == 236)
                        {
                            if ((double)this.velocity.Y >= 0.0 && (double)this.velocity.Y <= 0.8)
                            {
                                if ((double)this.velocity.X == 0.0)
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                                else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
                                {
                                    if (this.frame < 2)
                                        this.frame = 2;
                                    this.frameCounter = this.frameCounter + (int)Math.Abs(this.velocity.X);
                                    ++this.frameCounter;
                                    if (this.frameCounter > 6)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame > 8)
                                        this.frame = 2;
                                }
                                else
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                            }
                            else
                            {
                                this.frameCounter = 0;
                                this.frame = 1;
                            }
                            this.velocity.Y += 0.4f;
                            if ((double)this.velocity.Y <= 10.0)
                                return;
                            this.velocity.Y = 10f;
                        }
                        else if (this.type == 499)
                        {
                            if ((double)this.velocity.Y >= 0.0 && (double)this.velocity.Y <= 0.8)
                            {
                                if ((double)this.velocity.X == 0.0)
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                                else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
                                {
                                    if (this.frame < 2)
                                        this.frame = 2;
                                    this.frameCounter = this.frameCounter + (int)Math.Abs(this.velocity.X);
                                    ++this.frameCounter;
                                    if (this.frameCounter > 6)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame >= 8)
                                        this.frame = 2;
                                }
                                else
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                            }
                            else
                            {
                                this.frameCounter = 0;
                                this.frame = 1;
                            }
                            this.velocity.Y += 0.4f;
                            if ((double)this.velocity.Y <= 10.0)
                                return;
                            this.velocity.Y = 10f;
                        }
                        else if (this.type == 266)
                        {
                            if ((double)this.velocity.Y >= 0.0 && (double)this.velocity.Y <= 0.8)
                            {
                                if ((double)this.velocity.X == 0.0)
                                    ++this.frameCounter;
                                else
                                    this.frameCounter += 3;
                            }
                            else
                                this.frameCounter += 5;
                            if (this.frameCounter >= 20)
                            {
                                this.frameCounter -= 20;
                                ++this.frame;
                            }
                            if (this.frame > 1)
                                this.frame = 0;
                            if (this.wet && (double)Main.player[this.owner].position.Y + (double)Main.player[this.owner].height < (double)this.position.Y + (double)this.height && (double)this.localAI[0] == 0.0)
                            {
                                if ((double)this.velocity.Y > -4.0)
                                    this.velocity.Y -= 0.2f;
                                if ((double)this.velocity.Y > 0.0)
                                    this.velocity.Y *= 0.95f;
                            }
                            else
                                this.velocity.Y += 0.4f;
                            if ((double)this.velocity.Y <= 10.0)
                                return;
                            this.velocity.Y = 10f;
                        }
                        else if (this.type == 334)
                        {
                            if ((double)this.velocity.Y == 0.0)
                            {
                                if ((double)this.velocity.X == 0.0)
                                {
                                    if (this.frame > 0)
                                    {
                                        this.frameCounter += 2;
                                        if (this.frameCounter > 6)
                                        {
                                            ++this.frame;
                                            this.frameCounter = 0;
                                        }
                                        if (this.frame >= 7)
                                            this.frame = 0;
                                    }
                                    else
                                    {
                                        this.frame = 0;
                                        this.frameCounter = 0;
                                    }
                                }
                                else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
                                {
                                    this.frameCounter = this.frameCounter + (int)Math.Abs((double)this.velocity.X * 0.75);
                                    ++this.frameCounter;
                                    if (this.frameCounter > 6)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame >= 7 || this.frame < 1)
                                        this.frame = 1;
                                }
                                else if (this.frame > 0)
                                {
                                    this.frameCounter += 2;
                                    if (this.frameCounter > 6)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame >= 7)
                                        this.frame = 0;
                                }
                                else
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                            }
                            else if ((double)this.velocity.Y < 0.0)
                            {
                                this.frameCounter = 0;
                                this.frame = 2;
                            }
                            else if ((double)this.velocity.Y > 0.0)
                            {
                                this.frameCounter = 0;
                                this.frame = 4;
                            }
                            this.velocity.Y += 0.4f;
                            if ((double)this.velocity.Y <= 10.0)
                                return;
                            this.velocity.Y = 10f;
                        }
                        else if (this.type == 353)
                        {
                            if ((double)this.velocity.Y == 0.0)
                            {
                                if ((double)this.velocity.X == 0.0)
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                                else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
                                {
                                    this.frameCounter = this.frameCounter + (int)Math.Abs(this.velocity.X);
                                    ++this.frameCounter;
                                    if (this.frameCounter > 6)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame > 9)
                                        this.frame = 2;
                                }
                                else
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                            }
                            else if ((double)this.velocity.Y < 0.0)
                            {
                                this.frameCounter = 0;
                                this.frame = 1;
                            }
                            else if ((double)this.velocity.Y > 0.0)
                            {
                                this.frameCounter = 0;
                                this.frame = 1;
                            }
                            this.velocity.Y += 0.4f;
                            if ((double)this.velocity.Y <= 10.0)
                                return;
                            this.velocity.Y = 10f;
                        }
                        else if (this.type == 111)
                        {
                            if ((double)this.velocity.Y == 0.0)
                            {
                                if ((double)this.velocity.X == 0.0)
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                                else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
                                {
                                    this.frameCounter = this.frameCounter + (int)Math.Abs(this.velocity.X);
                                    ++this.frameCounter;
                                    if (this.frameCounter > 6)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame >= 7)
                                        this.frame = 0;
                                }
                                else
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                            }
                            else if ((double)this.velocity.Y < 0.0)
                            {
                                this.frameCounter = 0;
                                this.frame = 4;
                            }
                            else if ((double)this.velocity.Y > 0.0)
                            {
                                this.frameCounter = 0;
                                this.frame = 6;
                            }
                            this.velocity.Y += 0.4f;
                            if ((double)this.velocity.Y <= 10.0)
                                return;
                            this.velocity.Y = 10f;
                        }
                        else if (this.type == 112)
                        {
                            if ((double)this.velocity.Y == 0.0)
                            {
                                if ((double)this.velocity.X == 0.0)
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                                else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
                                {
                                    this.frameCounter = this.frameCounter + (int)Math.Abs(this.velocity.X);
                                    ++this.frameCounter;
                                    if (this.frameCounter > 6)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame >= 3)
                                        this.frame = 0;
                                }
                                else
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                            }
                            else if ((double)this.velocity.Y < 0.0)
                            {
                                this.frameCounter = 0;
                                this.frame = 2;
                            }
                            else if ((double)this.velocity.Y > 0.0)
                            {
                                this.frameCounter = 0;
                                this.frame = 2;
                            }
                            this.velocity.Y += 0.4f;
                            if ((double)this.velocity.Y <= 10.0)
                                return;
                            this.velocity.Y = 10f;
                        }
                        else if (this.type == (int)sbyte.MaxValue)
                        {
                            if ((double)this.velocity.Y == 0.0)
                            {
                                if ((double)this.velocity.X == 0.0)
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                                else if ((double)this.velocity.X < -0.1 || (double)this.velocity.X > 0.1)
                                {
                                    this.frameCounter = this.frameCounter + (int)Math.Abs(this.velocity.X);
                                    ++this.frameCounter;
                                    if (this.frameCounter > 6)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame > 5)
                                        this.frame = 0;
                                }
                                else
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                            }
                            else
                            {
                                this.frame = 0;
                                this.frameCounter = 0;
                            }
                            this.velocity.Y += 0.4f;
                            if ((double)this.velocity.Y <= 10.0)
                                return;
                            this.velocity.Y = 10f;
                        }
                        else if (this.type == 200)
                        {
                            if ((double)this.velocity.Y == 0.0)
                            {
                                if ((double)this.velocity.X == 0.0)
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                                else if ((double)this.velocity.X < -0.1 || (double)this.velocity.X > 0.1)
                                {
                                    this.frameCounter = this.frameCounter + (int)Math.Abs(this.velocity.X);
                                    ++this.frameCounter;
                                    if (this.frameCounter > 6)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame > 5)
                                        this.frame = 0;
                                }
                                else
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                            }
                            else
                            {
                                this.rotation = this.velocity.X * 0.1f;
                                ++this.frameCounter;
                                if ((double)this.velocity.Y < 0.0)
                                    this.frameCounter += 2;
                                if (this.frameCounter > 6)
                                {
                                    ++this.frame;
                                    this.frameCounter = 0;
                                }
                                if (this.frame > 9)
                                    this.frame = 6;
                                if (this.frame < 6)
                                    this.frame = 6;
                            }
                            this.velocity.Y += 0.1f;
                            if ((double)this.velocity.Y <= 4.0)
                                return;
                            this.velocity.Y = 4f;
                        }
                        else if (this.type == 208)
                        {
                            if ((double)this.velocity.Y == 0.0 && (double)this.velocity.X == 0.0)
                            {
                                if ((double)Main.player[this.owner].position.X + (double)(Main.player[this.owner].width / 2) < (double)this.position.X + (double)(this.width / 2))
                                    this.direction = -1;
                                else if ((double)Main.player[this.owner].position.X + (double)(Main.player[this.owner].width / 2) > (double)this.position.X + (double)(this.width / 2))
                                    this.direction = 1;
                                this.rotation = 0.0f;
                                this.frame = 0;
                            }
                            else
                            {
                                this.rotation = this.velocity.X * 0.075f;
                                ++this.frameCounter;
                                if (this.frameCounter > 6)
                                {
                                    ++this.frame;
                                    this.frameCounter = 0;
                                }
                                if (this.frame > 4)
                                    this.frame = 1;
                                if (this.frame < 1)
                                    this.frame = 1;
                            }
                            this.velocity.Y += 0.1f;
                            if ((double)this.velocity.Y <= 4.0)
                                return;
                            this.velocity.Y = 4f;
                        }
                        else if (this.type == 209)
                        {
                            if (this.alpha > 0)
                            {
                                this.alpha -= 5;
                                if (this.alpha < 0)
                                    this.alpha = 0;
                            }
                            if ((double)this.velocity.Y == 0.0)
                            {
                                if ((double)this.velocity.X == 0.0)
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                                else if ((double)this.velocity.X < -0.1 || (double)this.velocity.X > 0.1)
                                {
                                    this.frameCounter = this.frameCounter + (int)Math.Abs(this.velocity.X);
                                    ++this.frameCounter;
                                    if (this.frameCounter > 6)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame > 11)
                                        this.frame = 2;
                                    if (this.frame < 2)
                                        this.frame = 2;
                                }
                                else
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                            }
                            else
                            {
                                this.frame = 1;
                                this.frameCounter = 0;
                                this.rotation = 0.0f;
                            }
                            this.velocity.Y += 0.4f;
                            if ((double)this.velocity.Y <= 10.0)
                                return;
                            this.velocity.Y = 10f;
                        }
                        else if (this.type == 324)
                        {
                            if ((double)this.velocity.Y == 0.0)
                            {
                                if ((double)this.velocity.X < -0.1 || (double)this.velocity.X > 0.1)
                                {
                                    this.frameCounter = this.frameCounter + (int)Math.Abs(this.velocity.X);
                                    ++this.frameCounter;
                                    if (this.frameCounter > 6)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame > 5)
                                        this.frame = 2;
                                    if (this.frame < 2)
                                        this.frame = 2;
                                }
                                else
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                            }
                            else
                            {
                                this.frameCounter = 0;
                                this.frame = 1;
                            }
                            this.velocity.Y += 0.4f;
                            if ((double)this.velocity.Y <= 14.0)
                                return;
                            this.velocity.Y = 14f;
                        }
                        else if (this.type == 210)
                        {
                            if ((double)this.velocity.Y == 0.0)
                            {
                                if ((double)this.velocity.X < -0.1 || (double)this.velocity.X > 0.1)
                                {
                                    this.frameCounter = this.frameCounter + (int)Math.Abs(this.velocity.X);
                                    ++this.frameCounter;
                                    if (this.frameCounter > 6)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame > 6)
                                        this.frame = 0;
                                }
                                else
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                            }
                            else
                            {
                                this.rotation = this.velocity.X * 0.05f;
                                ++this.frameCounter;
                                if (this.frameCounter > 6)
                                {
                                    ++this.frame;
                                    this.frameCounter = 0;
                                }
                                if (this.frame > 11)
                                    this.frame = 7;
                                if (this.frame < 7)
                                    this.frame = 7;
                            }
                            this.velocity.Y += 0.4f;
                            if ((double)this.velocity.Y <= 10.0)
                                return;
                            this.velocity.Y = 10f;
                        }
                        else
                        {
                            if (this.type != 398)
                                return;
                            if ((double)this.velocity.Y == 0.0)
                            {
                                if ((double)this.velocity.X == 0.0)
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                                else if ((double)this.velocity.X < -0.8 || (double)this.velocity.X > 0.8)
                                {
                                    this.frameCounter = this.frameCounter + (int)Math.Abs(this.velocity.X);
                                    ++this.frameCounter;
                                    if (this.frameCounter > 6)
                                    {
                                        ++this.frame;
                                        this.frameCounter = 0;
                                    }
                                    if (this.frame >= 5)
                                        this.frame = 0;
                                }
                                else
                                {
                                    this.frame = 0;
                                    this.frameCounter = 0;
                                }
                            }
                            else if ((double)this.velocity.Y != 0.0)
                            {
                                this.frameCounter = 0;
                                this.frame = 5;
                            }
                            this.velocity.Y += 0.4f;
                            if ((double)this.velocity.Y <= 10.0)
                                return;
                            this.velocity.Y = 10f;
                        }
                    }
                }
            }
        }

        private void AI_062()
        {
            if (this.type == 373)
            {
                if (Main.player[this.owner].dead)
                    Main.player[this.owner].hornetMinion = false;
                if (Main.player[this.owner].hornetMinion)
                    this.timeLeft = 2;
            }
            if (this.type == 375)
            {
                if (Main.player[this.owner].dead)
                    Main.player[this.owner].impMinion = false;
                if (Main.player[this.owner].impMinion)
                    this.timeLeft = 2;
            }
            if (this.type == 407)
            {
                if (Main.player[this.owner].dead)
                    Main.player[this.owner].sharknadoMinion = false;
                if (Main.player[this.owner].sharknadoMinion)
                    this.timeLeft = 2;
            }
            if (this.type == 423)
            {
                if (Main.player[this.owner].dead)
                    Main.player[this.owner].UFOMinion = false;
                if (Main.player[this.owner].UFOMinion)
                    this.timeLeft = 2;
            }
            if (this.type == 613)
            {
                if (Main.player[this.owner].dead)
                    Main.player[this.owner].stardustMinion = false;
                if (Main.player[this.owner].stardustMinion)
                    this.timeLeft = 2;
                Lighting.AddLight(this.Center, 0.2f, 0.6f, 0.7f);
                if ((double)this.localAI[1] > 0.0)
                    --this.localAI[1];
            }
            if (this.type == 423)
            {
                if ((double)this.ai[0] == 2.0)
                {
                    --this.ai[1];
                    this.tileCollide = false;
                    if ((double)this.ai[1] > 3.0)
                    {
                        int index = Dust.NewDust(this.Center, 0, 0, 220 + Main.rand.Next(2), this.velocity.X, this.velocity.Y, 100, new Color(), 1f);
                        Main.dust[index].scale = (float)(0.5 + Main.rand.NextDouble() * 0.300000011920929);
                        Main.dust[index].velocity /= 2.5f;
                        Main.dust[index].noGravity = true;
                        Main.dust[index].noLight = true;
                        Main.dust[index].frame.Y = 80;
                    }
                    if ((double)this.ai[1] != 0.0)
                        return;
                    this.ai[1] = 30f;
                    this.ai[0] = 0.0f;
                    Projectile projectile = this;
                    Vector2 vector2 = projectile.velocity / 5f;
                    projectile.velocity = vector2;
                    this.velocity.Y = 0.0f;
                    this.extraUpdates = 0;
                    this.numUpdates = 0;
                    this.netUpdate = true;
                    this.extraUpdates = 0;
                    this.numUpdates = 0;
                }
                if (this.extraUpdates > 1)
                    this.extraUpdates = 0;
                if (this.numUpdates > 1)
                    this.numUpdates = 0;
            }
            if (this.type == 613)
            {
                if ((double)this.ai[0] == 2.0)
                {
                    --this.ai[1];
                    this.tileCollide = false;
                    if ((double)this.ai[1] > 3.0)
                    {
                        if (this.numUpdates < 20)
                        {
                            for (int index = 0; index < 3; ++index)
                            {
                                Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                                dust.noGravity = true;
                                dust.position = this.Center;
                                dust.velocity *= 3f;
                                dust.velocity += this.velocity * 3f;
                                dust.fadeIn = 1f;
                            }
                        }
                        float num1 = (float)(2.0 - (double)this.numUpdates / 30.0);
                        if ((double)this.scale > 0.0)
                        {
                            float num2 = 2f;
                            for (int index = 0; (double)index < (double)num2; ++index)
                            {
                                Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                                dust.noGravity = true;
                                dust.position = this.Center + Utils.RotatedBy(Vector2.UnitY, (double)this.numUpdates * 0.104719758033752 + (double)this.whoAmI * 0.785398185253143 + 1.57079637050629, new Vector2()) * (float)(this.height / 2) - this.velocity * ((float)index / num2);
                                dust.velocity = this.velocity / 3f;
                                dust.fadeIn = num1 / 2f;
                                dust.scale = num1;
                            }
                        }
                    }
                    if ((double)this.ai[1] != 0.0)
                        return;
                    this.ai[1] = 30f;
                    this.ai[0] = 0.0f;
                    Projectile projectile = this;
                    Vector2 vector2 = projectile.velocity / 5f;
                    projectile.velocity = vector2;
                    this.velocity.Y = 0.0f;
                    this.extraUpdates = 0;
                    this.numUpdates = 0;
                    this.netUpdate = true;
                    float num = 15f;
                    for (int index = 0; (double)index < (double)num; ++index)
                    {
                        Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                        dust.noGravity = true;
                        dust.position = this.Center - this.velocity * 5f;
                        dust.velocity *= 3f;
                        dust.velocity += this.velocity * 3f;
                        dust.fadeIn = 1f;
                        if (Main.rand.Next(3) != 0)
                        {
                            dust.fadeIn = 2f;
                            dust.scale = 2f;
                            dust.velocity /= 8f;
                        }
                    }
                    for (int index = 0; (double)index < (double)num; ++index)
                    {
                        Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                        dust.noGravity = true;
                        dust.position = this.Center;
                        dust.velocity *= 3f;
                        dust.velocity += this.velocity * 3f;
                        dust.fadeIn = 1f;
                        if (Main.rand.Next(3) != 0)
                        {
                            dust.fadeIn = 2f;
                            dust.scale = 2f;
                            dust.velocity /= 8f;
                        }
                    }
                    this.extraUpdates = 0;
                    this.numUpdates = 0;
                }
                if (this.extraUpdates > 1)
                    this.extraUpdates = 0;
                if (this.numUpdates > 1)
                    this.numUpdates = 0;
            }
            if (this.type == 423 && (double)this.localAI[0] > 0.0)
                --this.localAI[0];
            if (this.type == 613 && (double)this.localAI[0] > 0.0)
                --this.localAI[0];
            float num3 = 0.05f;
            float num4 = (float)this.width;
            if (this.type == 407)
            {
                num3 = 0.1f;
                num4 *= 2f;
            }
            for (int index = 0; index < 1000; ++index)
            {
                if (index != this.whoAmI && Main.projectile[index].active && (Main.projectile[index].owner == this.owner && Main.projectile[index].type == this.type) && (double)Math.Abs(this.position.X - Main.projectile[index].position.X) + (double)Math.Abs(this.position.Y - Main.projectile[index].position.Y) < (double)num4)
                {
                    if ((double)this.position.X < (double)Main.projectile[index].position.X)
                        this.velocity.X -= num3;
                    else
                        this.velocity.X += num3;
                    if ((double)this.position.Y < (double)Main.projectile[index].position.Y)
                        this.velocity.Y -= num3;
                    else
                        this.velocity.Y += num3;
                }
            }
            Vector2 vector2_1 = this.position;
            float num5 = 400f;
            if (this.type == 423)
                num5 = 300f;
            if (this.type == 613)
                num5 = 300f;
            bool flag = false;
            int num6 = -1;
            this.tileCollide = true;
            if (this.type == 407)
            {
                this.tileCollide = false;
                if (Collision.SolidCollision(this.position, this.width, this.height))
                {
                    this.alpha += 20;
                    if (this.alpha > 150)
                        this.alpha = 150;
                }
                else
                {
                    this.alpha -= 50;
                    if (this.alpha < 60)
                        this.alpha = 60;
                }
            }
            if (this.type == 407 || this.type == 613 || this.type == 423)
            {
                Vector2 center = Main.player[this.owner].Center;
                Vector2 vector2_2 = new Vector2(0.5f);
                if (this.type == 423)
                    vector2_2.Y = 0.0f;
                for (int index = 0; index < 200; ++index)
                {
                    NPC npc = Main.npc[index];
                    if (npc.CanBeChasedBy((object)this, false))
                    {
                        Vector2 vector2_3 = npc.position + npc.Size * vector2_2;
                        float num1 = Vector2.Distance(vector2_3, center);
                        if (((double)Vector2.Distance(center, vector2_1) > (double)num1 && (double)num1 < (double)num5 || !flag) && Collision.CanHitLine(this.position, this.width, this.height, npc.position, npc.width, npc.height))
                        {
                            num5 = num1;
                            vector2_1 = vector2_3;
                            flag = true;
                            num6 = index;
                        }
                    }
                }
            }
            else
            {
                for (int index = 0; index < 200; ++index)
                {
                    NPC npc = Main.npc[index];
                    if (npc.CanBeChasedBy((object)this, false))
                    {
                        float num1 = Vector2.Distance(npc.Center, this.Center);
                        if (((double)Vector2.Distance(this.Center, vector2_1) > (double)num1 && (double)num1 < (double)num5 || !flag) && Collision.CanHitLine(this.position, this.width, this.height, npc.position, npc.width, npc.height))
                        {
                            num5 = num1;
                            vector2_1 = npc.Center;
                            flag = true;
                            num6 = index;
                        }
                    }
                }
            }
            int num7 = 500;
            if (flag)
                num7 = 1000;
            if (flag && this.type == 423)
                num7 = 1200;
            if (flag && this.type == 613)
                num7 = 1350;
            Player player = Main.player[this.owner];
            if ((double)Vector2.Distance(player.Center, this.Center) > (double)num7)
            {
                this.ai[0] = 1f;
                this.netUpdate = true;
            }
            if ((double)this.ai[0] == 1.0)
                this.tileCollide = false;
            if (flag && (double)this.ai[0] == 0.0)
            {
                Vector2 vector2_2 = vector2_1 - this.Center;
                float num1 = vector2_2.Length();
                vector2_2.Normalize();
                if (this.type == 423)
                {
                    Vector2 vector2_3 = vector2_1 - Vector2.UnitY * 80f;
                    int index = (int)vector2_3.Y / 16;
                    if (index < 0)
                        index = 0;
                    Tile tile1 = Main.tile[(int)vector2_3.X / 16, index];
                    if (tile1 != null && tile1.active() && (Main.tileSolid[(int)tile1.type] && !Main.tileSolidTop[(int)tile1.type]))
                    {
                        vector2_3 += Vector2.UnitY * 16f;
                        Tile tile2 = Main.tile[(int)vector2_3.X / 16, (int)vector2_3.Y / 16];
                        if (tile2 != null && tile2.active() && (Main.tileSolid[(int)tile2.type] && !Main.tileSolidTop[(int)tile2.type]))
                            vector2_3 += Vector2.UnitY * 16f;
                    }
                    vector2_2 = vector2_3 - this.Center;
                    num1 = vector2_2.Length();
                    vector2_2.Normalize();
                    if ((double)num1 > 300.0 && (double)num1 <= 800.0 && (double)this.localAI[0] == 0.0)
                    {
                        this.ai[0] = 2f;
                        this.ai[1] = (float)(int)((double)num1 / 10.0);
                        this.extraUpdates = (int)this.ai[1];
                        this.velocity = vector2_2 * 10f;
                        this.localAI[0] = 60f;
                        return;
                    }
                }
                if (this.type == 613)
                {
                    Vector2 vector2_3 = vector2_1;
                    Vector2 vector2_4 = this.Center - vector2_3;
                    if (vector2_4 == Vector2.Zero)
                        vector2_4 = -Vector2.UnitY;
                    vector2_4.Normalize();
                    Vector2 vector2_5 = vector2_3 + vector2_4 * 60f;
                    int index = (int)vector2_5.Y / 16;
                    if (index < 0)
                        index = 0;
                    Tile tile1 = Main.tile[(int)vector2_5.X / 16, index];
                    if (tile1 != null && tile1.active() && (Main.tileSolid[(int)tile1.type] && !Main.tileSolidTop[(int)tile1.type]))
                    {
                        vector2_5 += Vector2.UnitY * 16f;
                        Tile tile2 = Main.tile[(int)vector2_5.X / 16, (int)vector2_5.Y / 16];
                        if (tile2 != null && tile2.active() && (Main.tileSolid[(int)tile2.type] && !Main.tileSolidTop[(int)tile2.type]))
                            vector2_5 += Vector2.UnitY * 16f;
                    }
                    vector2_2 = vector2_5 - this.Center;
                    num1 = vector2_2.Length();
                    vector2_2.Normalize();
                    if ((double)num1 > 400.0 && (double)num1 <= 800.0 && (double)this.localAI[0] == 0.0)
                    {
                        this.ai[0] = 2f;
                        this.ai[1] = (float)(int)((double)num1 / 10.0);
                        this.extraUpdates = (int)this.ai[1];
                        this.velocity = vector2_2 * 10f;
                        this.localAI[0] = 60f;
                        return;
                    }
                }
                if (this.type == 407)
                {
                    if ((double)num1 > 400.0)
                    {
                        float num2 = 2f;
                        vector2_2 *= num2;
                        this.velocity = (this.velocity * 20f + vector2_2) / 21f;
                    }
                    else
                    {
                        Projectile projectile = this;
                        Vector2 vector2_3 = projectile.velocity * 0.96f;
                        projectile.velocity = vector2_3;
                    }
                }
                if ((double)num1 > 200.0)
                {
                    float num2 = 6f;
                    Vector2 vector2_3 = vector2_2 * num2;
                    this.velocity.X = (float)(((double)this.velocity.X * 40.0 + (double)vector2_3.X) / 41.0);
                    this.velocity.Y = (float)(((double)this.velocity.Y * 40.0 + (double)vector2_3.Y) / 41.0);
                }
                else if (this.type == 423 || this.type == 613)
                {
                    if ((double)num1 > 70.0 && (double)num1 < 130.0)
                    {
                        float num2 = 7f;
                        if ((double)num1 < 100.0)
                            num2 = -3f;
                        Vector2 vector2_3 = vector2_2 * num2;
                        this.velocity = (this.velocity * 20f + vector2_3) / 21f;
                        if ((double)Math.Abs(vector2_3.X) > (double)Math.Abs(vector2_3.Y))
                            this.velocity.X = (float)(((double)this.velocity.X * 10.0 + (double)vector2_3.X) / 11.0);
                    }
                    else
                    {
                        Projectile projectile = this;
                        Vector2 vector2_3 = projectile.velocity * 0.97f;
                        projectile.velocity = vector2_3;
                    }
                }
                else if (this.type == 375)
                {
                    if ((double)num1 < 150.0)
                    {
                        float num2 = 4f;
                        Vector2 vector2_3 = vector2_2 * -num2;
                        this.velocity.X = (float)(((double)this.velocity.X * 40.0 + (double)vector2_3.X) / 41.0);
                        this.velocity.Y = (float)(((double)this.velocity.Y * 40.0 + (double)vector2_3.Y) / 41.0);
                    }
                    else
                    {
                        Projectile projectile = this;
                        Vector2 vector2_3 = projectile.velocity * 0.97f;
                        projectile.velocity = vector2_3;
                    }
                }
                else if ((double)this.velocity.Y > -1.0)
                    this.velocity.Y -= 0.1f;
            }
            else
            {
                if (!Collision.CanHitLine(this.Center, 1, 1, Main.player[this.owner].Center, 1, 1))
                    this.ai[0] = 1f;
                float num1 = 6f;
                if ((double)this.ai[0] == 1.0)
                    num1 = 15f;
                if (this.type == 407)
                    num1 = 9f;
                Vector2 center = this.Center;
                Vector2 vector2_2 = player.Center - center + new Vector2(0.0f, -60f);
                if (this.type == 407)
                    vector2_2 += new Vector2(0.0f, 40f);
                if (this.type == 375)
                {
                    this.ai[1] = 3600f;
                    this.netUpdate = true;
                    vector2_2 = player.Center - center;
                    int num2 = 1;
                    for (int index = 0; index < this.whoAmI; ++index)
                    {
                        if (Main.projectile[index].active && Main.projectile[index].owner == this.owner && Main.projectile[index].type == this.type)
                            ++num2;
                    }
                    vector2_2.X -= (float)(10 * Main.player[this.owner].direction);
                    vector2_2.X -= (float)(num2 * 40 * Main.player[this.owner].direction);
                    vector2_2.Y -= 10f;
                }
                float num8 = vector2_2.Length();
                if ((double)num8 > 200.0 && (double)num1 < 9.0)
                    num1 = 9f;
                if (this.type == 375)
                    num1 = (float)(int)((double)num1 * 0.75);
                if ((double)num8 < 100.0 && (double)this.ai[0] == 1.0 && !Collision.SolidCollision(this.position, this.width, this.height))
                {
                    this.ai[0] = 0.0f;
                    this.netUpdate = true;
                }
                if ((double)num8 > 2000.0)
                {
                    this.position.X = Main.player[this.owner].Center.X - (float)(this.width / 2);
                    this.position.Y = Main.player[this.owner].Center.Y - (float)(this.width / 2);
                }
                if (this.type == 375)
                {
                    if ((double)num8 > 10.0)
                    {
                        vector2_2.Normalize();
                        if ((double)num8 < 50.0)
                            num1 /= 2f;
                        vector2_2 *= num1;
                        this.velocity = (this.velocity * 20f + vector2_2) / 21f;
                    }
                    else
                    {
                        this.direction = Main.player[this.owner].direction;
                        Projectile projectile = this;
                        Vector2 vector2_3 = projectile.velocity * 0.9f;
                        projectile.velocity = vector2_3;
                    }
                }
                else if (this.type == 407)
                {
                    if ((double)Math.Abs(vector2_2.X) > 40.0 || (double)Math.Abs(vector2_2.Y) > 10.0)
                    {
                        vector2_2.Normalize();
                        vector2_2 *= num1;
                        vector2_2 *= new Vector2(1.25f, 0.65f);
                        this.velocity = (this.velocity * 20f + vector2_2) / 21f;
                    }
                    else
                    {
                        if ((double)this.velocity.X == 0.0 && (double)this.velocity.Y == 0.0)
                        {
                            this.velocity.X = -0.15f;
                            this.velocity.Y = -0.05f;
                        }
                        Projectile projectile = this;
                        Vector2 vector2_3 = projectile.velocity * 1.01f;
                        projectile.velocity = vector2_3;
                    }
                }
                else if ((double)num8 > 70.0)
                {
                    vector2_2.Normalize();
                    vector2_2 *= num1;
                    this.velocity = (this.velocity * 20f + vector2_2) / 21f;
                }
                else
                {
                    if ((double)this.velocity.X == 0.0 && (double)this.velocity.Y == 0.0)
                    {
                        this.velocity.X = -0.15f;
                        this.velocity.Y = -0.05f;
                    }
                    Projectile projectile = this;
                    Vector2 vector2_3 = projectile.velocity * 1.01f;
                    projectile.velocity = vector2_3;
                }
            }
            this.rotation = this.velocity.X * 0.05f;
            ++this.frameCounter;
            if (this.type == 373)
            {
                if (this.frameCounter > 1)
                {
                    ++this.frame;
                    this.frameCounter = 0;
                }
                if (this.frame > 2)
                    this.frame = 0;
            }
            if (this.type == 375)
            {
                if (this.frameCounter >= 16)
                    this.frameCounter = 0;
                this.frame = this.frameCounter / 4;
                if ((double)this.ai[1] > 0.0 && (double)this.ai[1] < 16.0)
                    this.frame += 4;
                if (Main.rand.Next(6) == 0)
                {
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2f);
                    Main.dust[index].velocity *= 0.3f;
                    Main.dust[index].noGravity = true;
                    Main.dust[index].noLight = true;
                }
            }
            if (this.type == 407)
            {
                int num1 = 2;
                if (this.frameCounter >= 6 * num1)
                    this.frameCounter = 0;
                this.frame = this.frameCounter / num1;
                if (Main.rand.Next(5) == 0)
                {
                    int index = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 217, 0.0f, 0.0f, 100, new Color(), 2f);
                    Main.dust[index].velocity *= 0.3f;
                    Main.dust[index].noGravity = true;
                    Main.dust[index].noLight = true;
                }
            }
            if (this.type == 423 || this.type == 613)
            {
                int num1 = 3;
                if (this.frameCounter >= 4 * num1)
                    this.frameCounter = 0;
                this.frame = this.frameCounter / num1;
            }
            if ((double)this.velocity.X > 0.0)
                this.spriteDirection = this.direction = -1;
            else if ((double)this.velocity.X < 0.0)
                this.spriteDirection = this.direction = 1;
            if (this.type == 373)
            {
                if ((double)this.ai[1] > 0.0)
                    this.ai[1] += (float)Main.rand.Next(1, 4);
                if ((double)this.ai[1] > 90.0)
                {
                    this.ai[1] = 0.0f;
                    this.netUpdate = true;
                }
            }
            else if (this.type == 375)
            {
                if ((double)this.ai[1] > 0.0)
                {
                    ++this.ai[1];
                    if (Main.rand.Next(3) == 0)
                        ++this.ai[1];
                }
                if ((double)this.ai[1] > (double)Main.rand.Next(180, 900))
                {
                    this.ai[1] = 0.0f;
                    this.netUpdate = true;
                }
            }
            else if (this.type == 407)
            {
                if ((double)this.ai[1] > 0.0)
                {
                    ++this.ai[1];
                    if (Main.rand.Next(3) != 0)
                        ++this.ai[1];
                }
                if ((double)this.ai[1] > 60.0)
                {
                    this.ai[1] = 0.0f;
                    this.netUpdate = true;
                }
            }
            else if (this.type == 423)
            {
                if ((double)this.ai[1] > 0.0)
                {
                    ++this.ai[1];
                    if (Main.rand.Next(3) != 0)
                        ++this.ai[1];
                }
                if ((double)this.ai[1] > 30.0)
                {
                    this.ai[1] = 0.0f;
                    this.netUpdate = true;
                }
            }
            else if (this.type == 613)
            {
                if ((double)this.ai[1] > 0.0)
                {
                    ++this.ai[1];
                    if (Main.rand.Next(3) != 0)
                        ++this.ai[1];
                }
                if ((double)this.ai[1] > 60.0)
                {
                    this.ai[1] = 0.0f;
                    this.netUpdate = true;
                }
            }
            if ((double)this.ai[0] != 0.0)
                return;
            float num9 = 0.0f;
            int Type = 0;
            if (this.type == 373)
            {
                num9 = 10f;
                Type = 374;
            }
            else if (this.type == 375)
            {
                num9 = 11f;
                Type = 376;
            }
            else if (this.type == 407)
            {
                num9 = 14f;
                Type = 408;
            }
            else if (this.type == 423)
            {
                num9 = 4f;
                Type = 433;
            }
            else if (this.type == 613)
            {
                num9 = 14f;
                Type = 614;
            }
            if (!flag)
                return;
            if (this.type == 375)
            {
                if ((double)(vector2_1 - this.Center).X > 0.0)
                    this.spriteDirection = this.direction = -1;
                else if ((double)(vector2_1 - this.Center).X < 0.0)
                    this.spriteDirection = this.direction = 1;
            }
            if (this.type == 407 && Collision.SolidCollision(this.position, this.width, this.height))
                return;
            if (this.type == 423)
            {
                if ((double)Math.Abs(Utils.ToRotation(vector2_1 - this.Center) - 1.570796f) > 0.785398185253143)
                {
                    Projectile projectile = this;
                    Vector2 vector2_2 = projectile.velocity + Vector2.Normalize(vector2_1 - this.Center - Vector2.UnitY * 80f);
                    projectile.velocity = vector2_2;
                }
                else
                {
                    if ((double)(vector2_1 - this.Center).Length() > 400.0 || (double)this.ai[1] != 0.0)
                        return;
                    ++this.ai[1];
                    if (Main.myPlayer != this.owner)
                        return;
                    Vector2 vector2_2 = vector2_1 - this.Center;
                    vector2_2.Normalize();
                    Vector2 vector2_3 = vector2_2 * num9;
                    Projectile.NewProjectile(this.Center.X, this.Center.Y, vector2_3.X, vector2_3.Y, Type, this.damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                    this.netUpdate = true;
                }
            }
            else if ((double)this.ai[1] == 0.0 && this.type == 613)
            {
                if ((double)(vector2_1 - this.Center).Length() > 500.0 || (double)this.ai[1] != 0.0)
                    return;
                ++this.ai[1];
                if (Main.myPlayer == this.owner)
                {
                    Vector2 vector2_2 = vector2_1 - this.Center;
                    vector2_2.Normalize();
                    Vector2 vector2_3 = vector2_2 * num9;
                    int index = Projectile.NewProjectile(this.Center.X, this.Center.Y, vector2_3.X, vector2_3.Y, Type, this.damage, 0.0f, Main.myPlayer, 0.0f, (float)num6);
                    Main.projectile[index].timeLeft = 300;
                    Main.projectile[index].netUpdate = true;
                    Projectile projectile = this;
                    Vector2 vector2_4 = projectile.velocity - vector2_3 / 3f;
                    projectile.velocity = vector2_4;
                    this.netUpdate = true;
                }
                for (int index1 = 0; index1 < 5; ++index1)
                {
                    int num1 = this.width / 4;
                    Vector2 vector2_2 = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f) * (float)Main.rand.Next(24, 41) / 8f;
                    int index2 = Dust.NewDust(this.Center - Vector2.One * (float)num1, num1 * 2, num1 * 2, 88, 0.0f, 0.0f, 0, new Color(), 1f);
                    Dust dust = Main.dust[index2];
                    Vector2 vector2_3 = Vector2.Normalize(dust.position - this.Center);
                    dust.position = this.Center + vector2_3 * (float)num1 * this.scale - new Vector2(4f);
                    dust.velocity = index1 >= 30 ? 2f * vector2_3 * (float)Main.rand.Next(45, 91) / 10f : vector2_3 * dust.velocity.Length() * 2f;
                    dust.noGravity = true;
                    dust.scale = 0.7f + Utils.NextFloat(Main.rand);
                }
            }
            else
            {
                if ((double)this.ai[1] != 0.0)
                    return;
                ++this.ai[1];
                if (Main.myPlayer != this.owner)
                    return;
                Vector2 vector2_2 = vector2_1 - this.Center;
                vector2_2.Normalize();
                Vector2 vector2_3 = vector2_2 * num9;
                int index = Projectile.NewProjectile(this.Center.X, this.Center.Y, vector2_3.X, vector2_3.Y, Type, this.damage, 0.0f, Main.myPlayer, 0.0f, 0.0f);
                Main.projectile[index].timeLeft = 300;
                Main.projectile[index].netUpdate = true;
                this.netUpdate = true;
            }
        }

        private void AI_075()
        {
            Player player = Main.player[this.owner];
            float num1 = 1.570796f;
            Vector2 vector2_1 = player.RotatedRelativePoint(player.MountedCenter, true);
            if (this.type == 439)
            {
                ++this.ai[0];
                int num2 = 0;
                if ((double)this.ai[0] >= 40.0)
                    ++num2;
                if ((double)this.ai[0] >= 80.0)
                    ++num2;
                if ((double)this.ai[0] >= 120.0)
                    ++num2;
                int num3 = 24;
                int num4 = 6;
                ++this.ai[1];
                bool flag = false;
                if ((double)this.ai[1] >= (double)(num3 - num4 * num2))
                {
                    this.ai[1] = 0.0f;
                    flag = true;
                }
                this.frameCounter += 1 + num2;
                if (this.frameCounter >= 4)
                {
                    this.frameCounter = 0;
                    ++this.frame;
                    if (this.frame >= 6)
                        this.frame = 0;
                }
                if (this.soundDelay <= 0)
                {
                    this.soundDelay = num3 - num4 * num2;
                    if ((double)this.ai[0] != 1.0)
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 91);
                }
                if ((double)this.ai[1] == 1.0 && (double)this.ai[0] != 1.0)
                {
                    Vector2 vector2_2 = this.Center + Utils.RotatedBy(Vector2.UnitX * 24f, (double)this.rotation - 1.57079637050629, new Vector2());
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        int index2 = Dust.NewDust(vector2_2 - Vector2.One * 8f, 16, 16, 135, this.velocity.X / 2f, this.velocity.Y / 2f, 100, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.66f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].scale = 1.4f;
                    }
                }
                if (flag && Main.myPlayer == this.owner)
                {
                    if (player.channel && player.CheckMana(player.inventory[player.selectedItem].mana, true, false) && !player.noItems)
                    {
                        float num5 = player.inventory[player.selectedItem].shootSpeed * this.scale;
                        Vector2 vector2_2 = vector2_1;
                        Vector2 vector2_3 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - vector2_2;
                        if ((double)player.gravDir == -1.0)
                            vector2_3.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector2_2.Y;
                        Vector2 vector2_4 = Vector2.Normalize(vector2_3);
                        if (float.IsNaN(vector2_4.X) || float.IsNaN(vector2_4.Y))
                            vector2_4 = -Vector2.UnitY;
                        vector2_4 *= num5;
                        if ((double)vector2_4.X != (double)this.velocity.X || (double)vector2_4.Y != (double)this.velocity.Y)
                            this.netUpdate = true;
                        this.velocity = vector2_4;
                        int Type = 440;
                        float num6 = 14f;
                        int num7 = 7;
                        for (int index = 0; index < 2; ++index)
                        {
                            Vector2 vector2_5 = this.Center + new Vector2((float)Main.rand.Next(-num7, num7 + 1), (float)Main.rand.Next(-num7, num7 + 1));
                            Vector2 spinningpoint = Vector2.Normalize(this.velocity) * num6;
                            spinningpoint = Utils.RotatedBy(spinningpoint, Main.rand.NextDouble() * 0.196349546313286 - 0.0981747731566429, new Vector2());
                            if (float.IsNaN(spinningpoint.X) || float.IsNaN(spinningpoint.Y))
                                spinningpoint = -Vector2.UnitY;
                            Projectile.NewProjectile(vector2_5.X, vector2_5.Y, spinningpoint.X, spinningpoint.Y, Type, this.damage, this.knockBack, this.owner, 0.0f, 0.0f);
                        }
                    }
                    else
                        this.Kill();
                }
            }
            if (this.type == 445)
            {
                ++this.localAI[0];
                if ((double)this.localAI[0] >= 60.0)
                    this.localAI[0] = 0.0f;
                if ((double)Vector2.Distance(vector2_1, this.Center) >= 5.0)
                {
                    float num2 = this.localAI[0] / 60f;
                    if ((double)num2 > 0.5)
                        num2 = 1f - num2;
                    Vector3 vector3 = Vector3.Lerp(new Vector3(0.0f, 1f, 0.7f), new Vector3(0.0f, 0.7f, 1f), (float)(1.0 - (double)num2 * 2.0)) * 0.5f;
                    if ((double)Vector2.Distance(vector2_1, this.Center) >= 30.0)
                    {
                        Vector2 vector2_2 = this.Center - vector2_1;
                        vector2_2.Normalize();
                        Vector2 vector2_3 = vector2_2 * (Vector2.Distance(vector2_1, this.Center) - 30f);
                        DelegateMethods.v3_1 = vector3 * 0.8f;
                        Utils.PlotTileLine(this.Center - vector2_3, this.Center, 8f, new Utils.PerLinePoint(DelegateMethods.CastLightOpen));
                    }
                    Lighting.AddLight((int)this.Center.X / 16, (int)this.Center.Y / 16, vector3.X, vector3.Y, vector3.Z);
                }
                if (Main.myPlayer == this.owner)
                {
                    if ((double)this.localAI[1] > 0.0)
                        --this.localAI[1];
                    if (!player.channel || player.noItems)
                        this.Kill();
                    else if ((double)this.localAI[1] == 0.0)
                    {
                        Vector2 vector2_2 = vector2_1;
                        Vector2 vector2_3 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - vector2_2;
                        if ((double)player.gravDir == -1.0)
                            vector2_3.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector2_2.Y;
                        if (Main.tile[Player.tileTargetX, Player.tileTargetY].active())
                        {
                            vector2_3 = new Vector2((float)Player.tileTargetX, (float)Player.tileTargetY) * 16f + Vector2.One * 8f - vector2_2;
                            this.localAI[1] = 2f;
                        }
                        Vector2 vector2_4 = Vector2.Lerp(vector2_3, this.velocity, 0.7f);
                        if (float.IsNaN(vector2_4.X) || float.IsNaN(vector2_4.Y))
                            vector2_4 = -Vector2.UnitY;
                        float num2 = 30f;
                        if ((double)vector2_4.Length() < (double)num2)
                            vector2_4 = Vector2.Normalize(vector2_4) * num2;
                        int num3 = player.inventory[player.selectedItem].tileBoost;
                        int num4 = -Player.tileRangeX - num3 + 1;
                        int num5 = Player.tileRangeX + num3 - 1;
                        int num6 = -Player.tileRangeY - num3;
                        int num7 = Player.tileRangeY + num3 - 1;
                        int num8 = 12;
                        bool flag = false;
                        if ((double)vector2_4.X < (double)(num4 * 16 - num8))
                            flag = true;
                        if ((double)vector2_4.Y < (double)(num6 * 16 - num8))
                            flag = true;
                        if ((double)vector2_4.X > (double)(num5 * 16 + num8))
                            flag = true;
                        if ((double)vector2_4.Y > (double)(num7 * 16 + num8))
                            flag = true;
                        if (flag)
                        {
                            Vector2 vector2_5 = Vector2.Normalize(vector2_4);
                            float num9 = -1f;
                            if ((double)vector2_5.X < 0.0 && ((double)(num4 * 16 - num8) / (double)vector2_5.X < (double)num9 || (double)num9 == -1.0))
                                num9 = (float)(num4 * 16 - num8) / vector2_5.X;
                            if ((double)vector2_5.X > 0.0 && ((double)(num5 * 16 + num8) / (double)vector2_5.X < (double)num9 || (double)num9 == -1.0))
                                num9 = (float)(num5 * 16 + num8) / vector2_5.X;
                            if ((double)vector2_5.Y < 0.0 && ((double)(num6 * 16 - num8) / (double)vector2_5.Y < (double)num9 || (double)num9 == -1.0))
                                num9 = (float)(num6 * 16 - num8) / vector2_5.Y;
                            if ((double)vector2_5.Y > 0.0 && ((double)(num7 * 16 + num8) / (double)vector2_5.Y < (double)num9 || (double)num9 == -1.0))
                                num9 = (float)(num7 * 16 + num8) / vector2_5.Y;
                            vector2_4 = vector2_5 * num9;
                        }
                        if ((double)vector2_4.X != (double)this.velocity.X || (double)vector2_4.Y != (double)this.velocity.Y)
                            this.netUpdate = true;
                        this.velocity = vector2_4;
                    }
                }
            }
            if (this.type == 460)
            {
                ++this.ai[0];
                int num2 = 0;
                if ((double)this.ai[0] >= 60.0)
                    ++num2;
                if ((double)this.ai[0] >= 180.0)
                    ++num2;
                bool flag1 = false;
                if ((double)this.ai[0] == 60.0 || (double)this.ai[0] == 180.0 || (double)this.ai[0] > 180.0 && (double)this.ai[0] % 20.0 == 0.0)
                    flag1 = true;
                bool flag2 = (double)this.ai[0] >= 180.0;
                int num3 = 10;
                if (!flag2)
                    ++this.ai[1];
                bool flag3 = false;
                if (flag2 && (double)this.ai[0] % 20.0 == 0.0)
                    flag3 = true;
                if ((double)this.ai[1] >= (double)num3 && !flag2)
                {
                    this.ai[1] = 0.0f;
                    flag3 = true;
                    if (!flag2)
                    {
                        float num4 = player.inventory[player.selectedItem].shootSpeed * this.scale;
                        Vector2 vector2_2 = vector2_1;
                        Vector2 vector2_3 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - vector2_2;
                        if ((double)player.gravDir == -1.0)
                            vector2_3.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector2_2.Y;
                        Vector2 vector2_4 = Vector2.Normalize(vector2_3);
                        if (float.IsNaN(vector2_4.X) || float.IsNaN(vector2_4.Y))
                            vector2_4 = -Vector2.UnitY;
                        vector2_4 *= num4;
                        if ((double)vector2_4.X != (double)this.velocity.X || (double)vector2_4.Y != (double)this.velocity.Y)
                            this.netUpdate = true;
                        this.velocity = vector2_4;
                    }
                }
                if (this.soundDelay <= 0 && !flag2)
                {
                    this.soundDelay = num3 - num2;
                    this.soundDelay *= 2;
                    if ((double)this.ai[0] != 1.0)
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 15);
                }
                if ((double)this.ai[0] > 10.0 && !flag2)
                {
                    Vector2 vector2_2 = this.Center + Utils.RotatedBy(Vector2.UnitX * 18f, (double)this.rotation - 1.57079637050629, new Vector2());
                    for (int index1 = 0; index1 < num2 + 1; ++index1)
                    {
                        int Type = 226;
                        float num4 = 0.4f;
                        if (index1 % 2 == 1)
                        {
                            Type = 226;
                            num4 = 0.65f;
                        }
                        Vector2 vector2_3 = vector2_2 + Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f) * (12f - (float)(num2 * 2));
                        int index2 = Dust.NewDust(vector2_3 - Vector2.One * 8f, 16, 16, Type, this.velocity.X / 2f, this.velocity.Y / 2f, 0, new Color(), 1f);
                        Main.dust[index2].velocity = Vector2.Normalize(vector2_2 - vector2_3) * 1.5f * (float)(10.0 - (double)num2 * 2.0) / 10f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].scale = num4;
                        Main.dust[index2].customData = (object)player;
                    }
                }
                if (flag3 && Main.myPlayer == this.owner)
                {
                    bool flag4 = !flag1 || player.CheckMana(player.inventory[player.selectedItem].mana, true, false);
                    if (player.channel && flag4 && !player.noItems)
                    {
                        if ((double)this.ai[0] == 180.0)
                        {
                            Vector2 center = this.Center;
                            Vector2 vector2_2 = Vector2.Normalize(this.velocity);
                            if (float.IsNaN(vector2_2.X) || float.IsNaN(vector2_2.Y))
                                vector2_2 = -Vector2.UnitY;
                            int Damage = (int)((double)this.damage * 3.0);
                            this.ai[1] = (float)Projectile.NewProjectile(center.X, center.Y, vector2_2.X, vector2_2.Y, 461, Damage, this.knockBack, this.owner, 0.0f, (float)this.whoAmI);
                            this.netUpdate = true;
                        }
                        else if (flag2)
                        {
                            Projectile projectile = Main.projectile[(int)this.ai[1]];
                            if (!projectile.active || projectile.type != 461)
                            {
                                this.Kill();
                                return;
                            }
                        }
                    }
                    else
                    {
                        if (!flag2)
                        {
                            int Type = 459;
                            float num4 = 10f;
                            Vector2 center = this.Center;
                            Vector2 vector2_2 = Vector2.Normalize(this.velocity) * num4;
                            if (float.IsNaN(vector2_2.X) || float.IsNaN(vector2_2.Y))
                                vector2_2 = -Vector2.UnitY;
                            float ai1 = (float)(0.699999988079071 + (double)num2 * 0.300000011920929);
                            int Damage = (double)ai1 < 1.0 ? this.damage : (int)((double)this.damage * 2.0);
                            Projectile.NewProjectile(center.X, center.Y, vector2_2.X, vector2_2.Y, Type, Damage, this.knockBack, this.owner, 0.0f, ai1);
                        }
                        this.Kill();
                    }
                }
            }
            if (this.type == 633)
            {
                float num2 = 30f;
                if ((double)this.ai[0] > 90.0)
                    num2 = 15f;
                if ((double)this.ai[0] > 120.0)
                    num2 = 5f;
                this.damage = (int)((double)player.inventory[player.selectedItem].damage * (double)player.magicDamage);
                ++this.ai[0];
                ++this.ai[1];
                bool flag1 = false;
                if ((double)this.ai[0] % (double)num2 == 0.0)
                    flag1 = true;
                int num3 = 10;
                bool flag2 = false;
                if ((double)this.ai[0] % (double)num2 == 0.0)
                    flag2 = true;
                if ((double)this.ai[1] >= 1.0)
                {
                    this.ai[1] = 0.0f;
                    flag2 = true;
                    if (Main.myPlayer == this.owner)
                    {
                        float num4 = player.inventory[player.selectedItem].shootSpeed * this.scale;
                        Vector2 vector2_2 = vector2_1;
                        Vector2 vector2_3 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - vector2_2;
                        if ((double)player.gravDir == -1.0)
                            vector2_3.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector2_2.Y;
                        Vector2 vector2_4 = Vector2.Normalize(vector2_3);
                        if (float.IsNaN(vector2_4.X) || float.IsNaN(vector2_4.Y))
                            vector2_4 = -Vector2.UnitY;
                        vector2_4 = Vector2.Normalize(Vector2.Lerp(vector2_4, Vector2.Normalize(this.velocity), 0.92f));
                        vector2_4 *= num4;
                        if ((double)vector2_4.X != (double)this.velocity.X || (double)vector2_4.Y != (double)this.velocity.Y)
                            this.netUpdate = true;
                        this.velocity = vector2_4;
                    }
                }
                ++this.frameCounter;
                if (this.frameCounter >= ((double)this.ai[0] < 120.0 ? 4 : 1))
                {
                    this.frameCounter = 0;
                    if (++this.frame >= 5)
                        this.frame = 0;
                }
                if (this.soundDelay <= 0)
                {
                    this.soundDelay = num3;
                    this.soundDelay *= 2;
                    if ((double)this.ai[0] != 1.0)
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 15);
                }
                if (flag2 && Main.myPlayer == this.owner)
                {
                    bool flag3 = !flag1 || player.CheckMana(player.inventory[player.selectedItem].mana, true, false);
                    if (player.channel && flag3 && !player.noItems)
                    {
                        if ((double)this.ai[0] == 1.0)
                        {
                            Vector2 center = this.Center;
                            Vector2 vector2_2 = Vector2.Normalize(this.velocity);
                            if (float.IsNaN(vector2_2.X) || float.IsNaN(vector2_2.Y))
                                vector2_2 = -Vector2.UnitY;
                            int Damage = this.damage;
                            for (int index = 0; index < 6; ++index)
                                Projectile.NewProjectile(center.X, center.Y, vector2_2.X, vector2_2.Y, 632, Damage, this.knockBack, this.owner, (float)index, (float)this.whoAmI);
                            this.netUpdate = true;
                        }
                    }
                    else
                        this.Kill();
                }
            }
            if (this.type == 595)
            {
                num1 = 0.0f;
                if (this.spriteDirection == -1)
                    num1 = 3.141593f;
                if (++this.frame >= Main.projFrames[this.type])
                    this.frame = 0;
                --this.soundDelay;
                if (this.soundDelay <= 0)
                {
                    Main.PlaySound(2, (int)this.Center.X, (int)this.Center.Y, 1);
                    this.soundDelay = 12;
                }
                if (Main.myPlayer == this.owner)
                {
                    if (player.channel && !player.noItems)
                    {
                        float num2 = 1f;
                        if (player.inventory[player.selectedItem].shoot == this.type)
                            num2 = player.inventory[player.selectedItem].shootSpeed * this.scale;
                        Vector2 vec = Main.MouseWorld - vector2_1;
                        vec.Normalize();
                        if (Utils.HasNaNs(vec))
                            vec = Vector2.UnitX * (float)player.direction;
                        vec *= num2;
                        if ((double)vec.X != (double)this.velocity.X || (double)vec.Y != (double)this.velocity.Y)
                            this.netUpdate = true;
                        this.velocity = vec;
                    }
                    else
                        this.Kill();
                }
                Vector2 position = this.Center + this.velocity * 3f;
                Lighting.AddLight(position, 0.8f, 0.8f, 0.8f);
                if (Main.rand.Next(3) == 0)
                {
                    int index = Dust.NewDust(position - this.Size / 2f, this.width, this.height, 63, this.velocity.X, this.velocity.Y, 100, new Color(), 2f);
                    Main.dust[index].noGravity = true;
                    Main.dust[index].position -= this.velocity;
                }
            }
            if (this.type == 600)
            {
                if ((double)this.ai[0] == 0.0)
                {
                    if ((double)this.ai[1] != 0.0)
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 114);
                    else
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 115);
                }
                ++this.ai[0];
                if (Main.myPlayer == this.owner && (double)this.ai[0] == 1.0)
                {
                    float num2 = player.inventory[player.selectedItem].shootSpeed * this.scale;
                    Vector2 vector2_2 = vector2_1;
                    Vector2 vector2_3 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - vector2_2;
                    if ((double)player.gravDir == -1.0)
                        vector2_3.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector2_2.Y;
                    Vector2 vector2_4 = Vector2.Normalize(vector2_3);
                    if (float.IsNaN(vector2_4.X) || float.IsNaN(vector2_4.Y))
                        vector2_4 = -Vector2.UnitY;
                    vector2_4 *= num2;
                    if ((double)vector2_4.X != (double)this.velocity.X || (double)vector2_4.Y != (double)this.velocity.Y)
                        this.netUpdate = true;
                    this.velocity = vector2_4;
                    int Type = 601;
                    float num3 = 3f;
                    Vector2 center = this.Center;
                    Vector2 vector2_5 = Vector2.Normalize(this.velocity) * num3;
                    if (float.IsNaN(vector2_5.X) || float.IsNaN(vector2_5.Y))
                        vector2_5 = -Vector2.UnitY;
                    Projectile.NewProjectile(center.X, center.Y, vector2_5.X, vector2_5.Y, Type, this.damage, this.knockBack, this.owner, this.ai[1], 0.0f);
                }
                if ((double)this.ai[0] >= 30.0)
                    this.Kill();
            }
            if (this.type == 611)
            {
                if ((double)this.localAI[1] > 0.0)
                    --this.localAI[1];
                this.alpha -= 42;
                if (this.alpha < 0)
                    this.alpha = 0;
                if ((double)this.localAI[0] == 0.0)
                    this.localAI[0] = Utils.ToRotation(this.velocity);
                float num2 = (double)Utils.ToRotationVector2(this.localAI[0]).X >= 0.0 ? 1f : -1f;
                if ((double)this.ai[1] <= 0.0)
                    num2 *= -1f;
                Vector2 spinningpoint = Utils.ToRotationVector2(num2 * (float)((double)this.ai[0] / 30.0 * 6.28318548202515 - 1.57079637050629));
                spinningpoint.Y *= (float)Math.Sin((double)this.ai[1]);
                if ((double)this.ai[1] <= 0.0)
                    spinningpoint.Y *= -1f;
                Vector2 vector2_2 = Utils.RotatedBy(spinningpoint, (double)this.localAI[0], new Vector2());
                ++this.ai[0];
                if ((double)this.ai[0] < 30.0)
                {
                    Projectile projectile = this;
                    Vector2 vector2_3 = projectile.velocity + 48f * vector2_2;
                    projectile.velocity = vector2_3;
                }
                else
                    this.Kill();
            }
            if (this.type == 615)
            {
                num1 = 0.0f;
                if (this.spriteDirection == -1)
                    num1 = 3.141593f;
                ++this.ai[0];
                int num2 = 0;
                if ((double)this.ai[0] >= 40.0)
                    ++num2;
                if ((double)this.ai[0] >= 80.0)
                    ++num2;
                if ((double)this.ai[0] >= 120.0)
                    ++num2;
                int num3 = 5;
                int num4 = 0;
                --this.ai[1];
                bool flag = false;
                int num5 = -1;
                if ((double)this.ai[1] <= 0.0)
                {
                    this.ai[1] = (float)(num3 - num4 * num2);
                    flag = true;
                    if ((int)this.ai[0] / (num3 - num4 * num2) % 7 == 0)
                        num5 = 0;
                }
                this.frameCounter += 1 + num2;
                if (this.frameCounter >= 4)
                {
                    this.frameCounter = 0;
                    ++this.frame;
                    if (this.frame >= Main.projFrames[this.type])
                        this.frame = 0;
                }
                if (this.soundDelay <= 0)
                {
                    this.soundDelay = num3 - num4 * num2;
                    if ((double)this.ai[0] != 1.0)
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 36);
                }
                if (flag && Main.myPlayer == this.owner)
                {
                    bool canShoot = player.channel && player.HasAmmo(player.inventory[player.selectedItem], true) && !player.noItems;
                    int shoot = 14;
                    float speed = 14f;
                    int Damage = player.inventory[player.selectedItem].damage;
                    float KnockBack = player.inventory[player.selectedItem].knockBack;
                    if (canShoot)
                    {
                        player.PickAmmo(player.inventory[player.selectedItem], ref shoot, ref speed, ref canShoot, ref Damage, ref KnockBack, false);
                        float num6 = player.inventory[player.selectedItem].shootSpeed * this.scale;
                        Vector2 vector2_2 = vector2_1;
                        Vector2 vector2_3 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - vector2_2;
                        if ((double)player.gravDir == -1.0)
                            vector2_3.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector2_2.Y;
                        Vector2 spinningpoint1 = Vector2.Normalize(vector2_3);
                        if (float.IsNaN(spinningpoint1.X) || float.IsNaN(spinningpoint1.Y))
                            spinningpoint1 = -Vector2.UnitY;
                        spinningpoint1 *= num6;
                        spinningpoint1 = Utils.RotatedBy(spinningpoint1, Main.rand.NextDouble() * 0.130899697542191 - 0.0654498487710953, new Vector2());
                        if ((double)spinningpoint1.X != (double)this.velocity.X || (double)spinningpoint1.Y != (double)this.velocity.Y)
                            this.netUpdate = true;
                        this.velocity = spinningpoint1;
                        for (int index = 0; index < 1; ++index)
                        {
                            Vector2 spinningpoint2 = Vector2.Normalize(this.velocity) * speed;
                            spinningpoint2 = Utils.RotatedBy(spinningpoint2, Main.rand.NextDouble() * 0.196349546313286 - 0.0981747731566429, new Vector2());
                            if (float.IsNaN(spinningpoint2.X) || float.IsNaN(spinningpoint2.Y))
                                spinningpoint2 = -Vector2.UnitY;
                            Projectile.NewProjectile(vector2_2.X, vector2_2.Y, spinningpoint2.X, spinningpoint2.Y, shoot, Damage, KnockBack, this.owner, 0.0f, 0.0f);
                        }
                        if (num5 == 0)
                        {
                            shoot = 616;
                            float num7 = 8f;
                            for (int index = 0; index < 1; ++index)
                            {
                                Vector2 spinningpoint2 = Vector2.Normalize(this.velocity) * num7;
                                spinningpoint2 = Utils.RotatedBy(spinningpoint2, Main.rand.NextDouble() * 0.392699092626572 - 0.196349546313286, new Vector2());
                                if (float.IsNaN(spinningpoint2.X) || float.IsNaN(spinningpoint2.Y))
                                    spinningpoint2 = -Vector2.UnitY;
                                Projectile.NewProjectile(vector2_2.X, vector2_2.Y, spinningpoint2.X, spinningpoint2.Y, shoot, Damage + 20, KnockBack * 1.25f, this.owner, 0.0f, 0.0f);
                            }
                        }
                    }
                    else
                        this.Kill();
                }
            }
            if (this.type == 630)
            {
                num1 = 0.0f;
                if (this.spriteDirection == -1)
                    num1 = 3.141593f;
                ++this.ai[0];
                int num2 = 0;
                if ((double)this.ai[0] >= 40.0)
                    ++num2;
                if ((double)this.ai[0] >= 80.0)
                    ++num2;
                if ((double)this.ai[0] >= 120.0)
                    ++num2;
                int num3 = 24;
                int num4 = 2;
                --this.ai[1];
                bool flag = false;
                if ((double)this.ai[1] <= 0.0)
                {
                    this.ai[1] = (float)(num3 - num4 * num2);
                    flag = true;
                    int num5 = (int)this.ai[0] / (num3 - num4 * num2);
                }
                bool canShoot = player.channel && player.HasAmmo(player.inventory[player.selectedItem], true) && !player.noItems;
                if ((double)this.localAI[0] > 0.0)
                    --this.localAI[0];
                if (this.soundDelay <= 0 && canShoot)
                {
                    this.soundDelay = num3 - num4 * num2;
                    if ((double)this.ai[0] != 1.0)
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 5);
                    this.localAI[0] = 12f;
                }
                player.phantasmTime = 2;
                if (flag && Main.myPlayer == this.owner)
                {
                    int shoot = 14;
                    float speed = 14f;
                    int Damage = player.inventory[player.selectedItem].damage;
                    float KnockBack = player.inventory[player.selectedItem].knockBack;
                    if (canShoot)
                    {
                        player.PickAmmo(player.inventory[player.selectedItem], ref shoot, ref speed, ref canShoot, ref Damage, ref KnockBack, false);
                        float num5 = player.inventory[player.selectedItem].shootSpeed * this.scale;
                        Vector2 vector2_2 = vector2_1;
                        Vector2 vector2_3 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY) - vector2_2;
                        if ((double)player.gravDir == -1.0)
                            vector2_3.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y - vector2_2.Y;
                        Vector2 vector2_4 = Vector2.Normalize(vector2_3);
                        if (float.IsNaN(vector2_4.X) || float.IsNaN(vector2_4.Y))
                            vector2_4 = -Vector2.UnitY;
                        vector2_4 *= num5;
                        if ((double)vector2_4.X != (double)this.velocity.X || (double)vector2_4.Y != (double)this.velocity.Y)
                            this.netUpdate = true;
                        this.velocity = vector2_4 * 0.55f;
                        for (int index1 = 0; index1 < 4; ++index1)
                        {
                            Vector2 vector2_5 = Vector2.Normalize(this.velocity) * speed * (float)(0.600000023841858 + (double)Utils.NextFloat(Main.rand) * 0.800000011920929);
                            if (float.IsNaN(vector2_5.X) || float.IsNaN(vector2_5.Y))
                                vector2_5 = -Vector2.UnitY;
                            Vector2 vector2_6 = vector2_2 + Utils.RandomVector2(Main.rand, -15f, 15f);
                            int index2 = Projectile.NewProjectile(vector2_6.X, vector2_6.Y, vector2_5.X, vector2_5.Y, shoot, Damage, KnockBack, this.owner, 0.0f, 0.0f);
                            Main.projectile[index2].noDropItem = true;
                        }
                    }
                    else
                        this.Kill();
                }
            }
            this.position = player.RotatedRelativePoint(player.MountedCenter, true) - this.Size / 2f;
            this.rotation = Utils.ToRotation(this.velocity) + num1;
            this.spriteDirection = this.direction;
            this.timeLeft = 2;
            player.ChangeDir(this.direction);
            player.heldProj = this.whoAmI;
            player.itemTime = 2;
            player.itemAnimation = 2;
            player.itemRotation = (float)Math.Atan2((double)this.velocity.Y * (double)this.direction, (double)this.velocity.X * (double)this.direction);
            if (this.type == 460 || this.type == 611)
            {
                Vector2 vector2_2 = Main.OffsetsPlayerOnhand[player.bodyFrame.Y / 56] * 2f;
                if (player.direction != 1)
                    vector2_2.X = (float)player.bodyFrame.Width - vector2_2.X;
                if ((double)player.gravDir != 1.0)
                    vector2_2.Y = (float)player.bodyFrame.Height - vector2_2.Y;
                Vector2 vector2_3 = vector2_2 - new Vector2((float)(player.bodyFrame.Width - player.width), (float)(player.bodyFrame.Height - 42)) / 2f;
                this.Center = player.RotatedRelativePoint(player.position + vector2_3, true) - this.velocity;
            }
            if (this.type == 615)
                this.position.Y += player.gravDir * 2f;
            if (this.type != 611 || this.alpha != 0)
                return;
            for (int index = 0; index < 2; ++index)
            {
                Dust dust = Main.dust[Dust.NewDust(this.position + this.velocity * 2f, this.width, this.height, 6, 0.0f, 0.0f, 100, Color.Transparent, 2f)];
                dust.noGravity = true;
                dust.velocity *= 2f;
                dust.velocity += Utils.ToRotationVector2(this.localAI[0]);
                dust.fadeIn = 1.5f;
            }
            float num10 = 18f;
            for (int index = 0; (double)index < (double)num10; ++index)
            {
                if (Main.rand.Next(4) == 0)
                {
                    Vector2 Position = this.position + this.velocity + this.velocity * ((float)index / num10);
                    Dust dust = Main.dust[Dust.NewDust(Position, this.width, this.height, 6, 0.0f, 0.0f, 100, Color.Transparent, 1f)];
                    dust.noGravity = true;
                    dust.fadeIn = 0.5f;
                    dust.velocity += Utils.ToRotationVector2(this.localAI[0]);
                    dust.noLight = true;
                }
            }
        }

        private void AI_099_1()
        {
            this.timeLeft = 6;
            bool flag1 = true;
            float num1 = 250f;
            float num2 = 0.1f;
            float num3 = 15f;
            float num4 = 12f;
            float num5 = num1 * 0.5f;
            float num6 = num3 * 0.8f;
            float num7 = num4 * 1.5f;
            if (this.owner == Main.myPlayer)
            {
                bool flag2 = false;
                for (int index = 0; index < 1000; ++index)
                {
                    if (Main.projectile[index].active && Main.projectile[index].owner == this.owner && Main.projectile[index].aiStyle == 99 && (Main.projectile[index].type < 556 || Main.projectile[index].type > 561))
                        flag2 = true;
                }
                if (!flag2)
                {
                    this.ai[0] = -1f;
                    this.netUpdate = true;
                }
            }
            if (Main.player[this.owner].yoyoString)
                num5 += (float)((double)num5 * 0.25 + 10.0);
            this.rotation += 0.5f;
            if (Main.player[this.owner].dead)
            {
                this.Kill();
            }
            else
            {
                if (!flag1)
                {
                    Main.player[this.owner].heldProj = this.whoAmI;
                    Main.player[this.owner].itemAnimation = 2;
                    Main.player[this.owner].itemTime = 2;
                    if ((double)this.position.X + (double)(this.width / 2) > (double)Main.player[this.owner].position.X + (double)(Main.player[this.owner].width / 2))
                    {
                        Main.player[this.owner].ChangeDir(1);
                        this.direction = 1;
                    }
                    else
                    {
                        Main.player[this.owner].ChangeDir(-1);
                        this.direction = -1;
                    }
                }
                if ((double)this.ai[0] == 0.0 || (double)this.ai[0] == 1.0)
                {
                    if ((double)this.ai[0] == 1.0)
                        num5 *= 0.75f;
                    float num8 = num7 * 0.5f;
                    bool flag2 = false;
                    Vector2 vector2_1 = Main.player[this.owner].Center - this.Center;
                    if ((double)vector2_1.Length() > (double)num5 * 0.9)
                        flag2 = true;
                    if ((double)vector2_1.Length() > (double)num5)
                    {
                        float num9 = vector2_1.Length() - num5;
                        Vector2 vector2_2;
                        vector2_2.X = vector2_1.Y;
                        vector2_2.Y = vector2_1.X;
                        vector2_1.Normalize();
                        vector2_1 *= num5;
                        this.position = Main.player[this.owner].Center - vector2_1;
                        this.position.X -= (float)(this.width / 2);
                        this.position.Y -= (float)(this.height / 2);
                        float num10 = this.velocity.Length();
                        this.velocity.Normalize();
                        if ((double)num9 > (double)num10 - 1.0)
                            num9 = num10 - 1f;
                        Projectile projectile = this;
                        Vector2 vector2_3 = projectile.velocity * (num10 - num9);
                        projectile.velocity = vector2_3;
                        this.velocity.Length();
                        Vector2 vector2_4 = new Vector2(this.Center.X, this.Center.Y);
                        Vector2 vector2_5 = new Vector2(Main.player[this.owner].Center.X, Main.player[this.owner].Center.Y);
                        if ((double)vector2_4.Y < (double)vector2_5.Y)
                            vector2_2.Y = Math.Abs(vector2_2.Y);
                        else if ((double)vector2_4.Y > (double)vector2_5.Y)
                            vector2_2.Y = -Math.Abs(vector2_2.Y);
                        if ((double)vector2_4.X < (double)vector2_5.X)
                            vector2_2.X = Math.Abs(vector2_2.X);
                        else if ((double)vector2_4.X > (double)vector2_5.X)
                            vector2_2.X = -Math.Abs(vector2_2.X);
                        vector2_2.Normalize();
                        Vector2 vector2_6 = vector2_2 * this.velocity.Length();
                        Vector2 vector2_7 = new Vector2(vector2_6.X, vector2_6.Y);
                        if ((double)Math.Abs(this.velocity.X) > (double)Math.Abs(this.velocity.Y))
                        {
                            Vector2 vector2_8 = this.velocity;
                            vector2_8.Y += vector2_6.Y;
                            vector2_8.Normalize();
                            vector2_8 *= this.velocity.Length();
                            if ((double)Math.Abs(vector2_6.X) < 0.1 || (double)Math.Abs(vector2_6.Y) < 0.1)
                                this.velocity = vector2_8;
                            else
                                this.velocity = (vector2_8 + this.velocity * 2f) / 3f;
                        }
                        else
                        {
                            Vector2 vector2_8 = this.velocity;
                            vector2_8.X += vector2_6.X;
                            vector2_8.Normalize();
                            vector2_8 *= this.velocity.Length();
                            if ((double)Math.Abs(vector2_6.X) < 0.2 || (double)Math.Abs(vector2_6.Y) < 0.2)
                                this.velocity = vector2_8;
                            else
                                this.velocity = (vector2_8 + this.velocity * 2f) / 3f;
                        }
                    }
                    if (Main.myPlayer == this.owner)
                    {
                        if (Main.player[this.owner].channel)
                        {
                            Vector2 vector2_2 = new Vector2((float)(Main.mouseX - Main.lastMouseX), (float)(Main.mouseY - Main.lastMouseY));
                            if ((double)this.velocity.X != 0.0 || (double)this.velocity.Y != 0.0)
                            {
                                if (flag1)
                                    vector2_2 *= -1f;
                                if (flag2)
                                {
                                    if ((double)this.Center.X < (double)Main.player[this.owner].Center.X && (double)vector2_2.X < 0.0)
                                        vector2_2.X = 0.0f;
                                    if ((double)this.Center.X > (double)Main.player[this.owner].Center.X && (double)vector2_2.X > 0.0)
                                        vector2_2.X = 0.0f;
                                    if ((double)this.Center.Y < (double)Main.player[this.owner].Center.Y && (double)vector2_2.Y < 0.0)
                                        vector2_2.Y = 0.0f;
                                    if ((double)this.Center.Y > (double)Main.player[this.owner].Center.Y && (double)vector2_2.Y > 0.0)
                                        vector2_2.Y = 0.0f;
                                }
                                Projectile projectile = this;
                                Vector2 vector2_3 = projectile.velocity + vector2_2 * num2;
                                projectile.velocity = vector2_3;
                                this.netUpdate = true;
                            }
                        }
                        else
                        {
                            this.ai[0] = 10f;
                            this.netUpdate = true;
                        }
                    }
                    if (flag1 || this.type == 562 || (this.type == 547 || this.type == 555) || (this.type == 564 || this.type == 552 || (this.type == 563 || this.type == 549)) || (this.type == 550 || this.type == 554 || (this.type == 553 || this.type == 603)))
                    {
                        float num9 = 800f;
                        Vector2 vector2_2 = new Vector2();
                        bool flag3 = false;
                        if (this.type == 549)
                            num9 = 200f;
                        if (this.type == 554)
                            num9 = 400f;
                        if (this.type == 553)
                            num9 = 250f;
                        if (this.type == 603)
                            num9 = 320f;
                        for (int index = 0; index < 200; ++index)
                        {
                            if (Main.npc[index].CanBeChasedBy((object)this, false))
                            {
                                float num10 = Main.npc[index].position.X + (float)(Main.npc[index].width / 2);
                                float num11 = Main.npc[index].position.Y + (float)(Main.npc[index].height / 2);
                                float num12 = Math.Abs(this.position.X + (float)(this.width / 2) - num10) + Math.Abs(this.position.Y + (float)(this.height / 2) - num11);
                                if ((double)num12 < (double)num9 && (this.type != 563 || (double)num12 >= 200.0) && Collision.CanHit(this.position, this.width, this.height, Main.npc[index].position, Main.npc[index].width, Main.npc[index].height) && (double)(Main.npc[index].Center - Main.player[this.owner].Center).Length() < (double)num5 * 0.9)
                                {
                                    num9 = num12;
                                    vector2_2.X = num10;
                                    vector2_2.Y = num11;
                                    flag3 = true;
                                }
                            }
                        }
                        if (flag3)
                        {
                            vector2_2 -= this.Center;
                            vector2_2.Normalize();
                            if (this.type == 563)
                            {
                                vector2_2 *= 4f;
                                this.velocity = (this.velocity * 14f + vector2_2) / 15f;
                            }
                            else if (this.type == 553)
                            {
                                vector2_2 *= 5f;
                                this.velocity = (this.velocity * 12f + vector2_2) / 13f;
                            }
                            else if (this.type == 603)
                            {
                                vector2_2 *= 16f;
                                this.velocity = (this.velocity * 9f + vector2_2) / 10f;
                            }
                            else if (this.type == 554)
                            {
                                vector2_2 *= 8f;
                                this.velocity = (this.velocity * 6f + vector2_2) / 7f;
                            }
                            else
                            {
                                vector2_2 *= 6f;
                                this.velocity = (this.velocity * 7f + vector2_2) / 8f;
                            }
                        }
                    }
                    if ((double)this.velocity.Length() > (double)num6)
                    {
                        this.velocity.Normalize();
                        Projectile projectile = this;
                        Vector2 vector2_2 = projectile.velocity * num6;
                        projectile.velocity = vector2_2;
                    }
                    if ((double)this.velocity.Length() >= (double)num8)
                        return;
                    this.velocity.Normalize();
                    Projectile projectile1 = this;
                    Vector2 vector2_9 = projectile1.velocity * num8;
                    projectile1.velocity = vector2_9;
                }
                else
                {
                    this.tileCollide = false;
                    Vector2 vec = Main.player[this.owner].Center - this.Center;
                    if ((double)vec.Length() < 40.0 || Utils.HasNaNs(vec))
                    {
                        this.Kill();
                    }
                    else
                    {
                        float num8 = num6 * 1.5f;
                        if (this.type == 546)
                            num8 *= 1.5f;
                        if (this.type == 554)
                            num8 *= 1.25f;
                        if (this.type == 555)
                            num8 *= 1.35f;
                        if (this.type == 562)
                            num8 *= 1.25f;
                        float num9 = 12f;
                        vec.Normalize();
                        vec *= num8;
                        this.velocity = (this.velocity * (num9 - 1f) + vec) / num9;
                    }
                }
            }
        }

        private void AI_099_2()
        {
            bool flag1 = false;
            for (int index = 0; index < this.whoAmI; ++index)
            {
                if (Main.projectile[index].active && Main.projectile[index].owner == this.owner && Main.projectile[index].type == this.type)
                    flag1 = true;
            }
            if (this.owner == Main.myPlayer)
            {
                ++this.localAI[0];
                if (flag1)
                    this.localAI[0] += (float)Main.rand.Next(10, 31) * 0.1f;
                float num = this.localAI[0] / 60f / (float)((1.0 + (double)Main.player[this.owner].meleeSpeed) / 2.0);
                if (this.type == 541 && (double)num > 3.0)
                    this.ai[0] = -1f;
                if (this.type == 548 && (double)num > 5.0)
                    this.ai[0] = -1f;
                if (this.type == 542 && (double)num > 7.0)
                    this.ai[0] = -1f;
                if (this.type == 543 && (double)num > 6.0)
                    this.ai[0] = -1f;
                if (this.type == 544 && (double)num > 8.0)
                    this.ai[0] = -1f;
                if (this.type == 534 && (double)num > 9.0)
                    this.ai[0] = -1f;
                if (this.type == 564 && (double)num > 11.0)
                    this.ai[0] = -1f;
                if (this.type == 545 && (double)num > 13.0)
                    this.ai[0] = -1f;
                if (this.type == 563 && (double)num > 10.0)
                    this.ai[0] = -1f;
                if (this.type == 562 && (double)num > 8.0)
                    this.ai[0] = -1f;
                if (this.type == 553 && (double)num > 12.0)
                    this.ai[0] = -1f;
                if (this.type == 546 && (double)num > 16.0)
                    this.ai[0] = -1f;
                if (this.type == 552 && (double)num > 15.0)
                    this.ai[0] = -1f;
                if (this.type == 549 && (double)num > 14.0)
                    this.ai[0] = -1f;
            }
            if (this.type == 603 && this.owner == Main.myPlayer)
            {
                ++this.localAI[1];
                if ((double)this.localAI[1] >= 6.0)
                {
                    float num1 = 400f;
                    Vector2 vector2_1 = this.velocity;
                    Vector2 vector2_2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                    vector2_2.Normalize();
                    Vector2 vector2_3 = vector2_2 * ((float)Main.rand.Next(10, 41) * 0.1f);
                    if (Main.rand.Next(3) == 0)
                        vector2_3 *= 2f;
                    Vector2 vector2_4 = vector2_1 * 0.25f + vector2_3;
                    for (int index = 0; index < 200; ++index)
                    {
                        if (Main.npc[index].CanBeChasedBy((object)this, false))
                        {
                            float num2 = Main.npc[index].position.X + (float)(Main.npc[index].width / 2);
                            float num3 = Main.npc[index].position.Y + (float)(Main.npc[index].height / 2);
                            float num4 = Math.Abs(this.position.X + (float)(this.width / 2) - num2) + Math.Abs(this.position.Y + (float)(this.height / 2) - num3);
                            if ((double)num4 < (double)num1 && Collision.CanHit(this.position, this.width, this.height, Main.npc[index].position, Main.npc[index].width, Main.npc[index].height))
                            {
                                num1 = num4;
                                vector2_4.X = num2;
                                vector2_4.Y = num3;
                                Vector2 vector2_5 = vector2_4 - this.Center;
                                vector2_5.Normalize();
                                vector2_4 = vector2_5 * 8f;
                            }
                        }
                    }
                    Vector2 vector2_6 = vector2_4 * 0.8f;
                    Projectile.NewProjectile(this.Center.X, this.Center.Y, vector2_6.X, vector2_6.Y, 604, this.damage, this.knockBack, this.owner, 0.0f, 0.0f);
                    this.localAI[1] = 0.0f;
                }
            }
            bool flag2 = false;
            if (this.type >= 556 && this.type <= 561)
                flag2 = true;
            if (Main.player[this.owner].dead)
            {
                this.Kill();
            }
            else
            {
                if (!flag2 && !flag1)
                {
                    Main.player[this.owner].heldProj = this.whoAmI;
                    Main.player[this.owner].itemAnimation = 2;
                    Main.player[this.owner].itemTime = 2;
                    if ((double)this.position.X + (double)(this.width / 2) > (double)Main.player[this.owner].position.X + (double)(Main.player[this.owner].width / 2))
                    {
                        Main.player[this.owner].ChangeDir(1);
                        this.direction = 1;
                    }
                    else
                    {
                        Main.player[this.owner].ChangeDir(-1);
                        this.direction = -1;
                    }
                }
                if (Utils.HasNaNs(this.velocity))
                    this.Kill();
                this.timeLeft = 6;
                float num1 = 10f;
                float num2 = 200f;
                if (this.type == 541)
                {
                    num2 = 130f;
                    num1 = 9f;
                }
                else if (this.type == 548)
                {
                    num2 = 170f;
                    num1 = 11f;
                }
                else if (this.type == 542)
                {
                    num2 = 195f;
                    num1 = 12.5f;
                }
                else if (this.type == 543)
                {
                    num2 = 207f;
                    num1 = 12f;
                }
                else if (this.type == 544)
                {
                    num2 = 215f;
                    num1 = 13f;
                }
                else if (this.type == 534)
                {
                    num2 = 220f;
                    num1 = 13f;
                }
                else if (this.type == 564)
                {
                    num2 = 225f;
                    num1 = 14f;
                }
                else if (this.type == 545)
                {
                    if (Main.rand.Next(6) == 0)
                    {
                        int index = Dust.NewDust(this.position, this.width, this.height, 6, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index].noGravity = true;
                    }
                    num2 = 235f;
                    num1 = 14f;
                }
                else if (this.type == 562)
                {
                    num2 = 235f;
                    num1 = 15f;
                }
                else if (this.type == 563)
                {
                    num2 = 250f;
                    num1 = 12f;
                }
                else if (this.type == 546)
                {
                    num2 = 275f;
                    num1 = 17f;
                }
                else if (this.type == 552)
                {
                    num2 = 270f;
                    num1 = 14f;
                }
                else if (this.type == 553)
                {
                    if (Main.rand.Next(2) == 0)
                    {
                        int index = Dust.NewDust(this.position, this.width, this.height, 6, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index].noGravity = true;
                        Main.dust[index].scale = 1.6f;
                    }
                    num2 = 275f;
                    num1 = 15f;
                }
                else if (this.type == 547)
                {
                    num2 = 280f;
                    num1 = 17f;
                }
                else if (this.type == 549)
                {
                    num2 = 290f;
                    num1 = 16f;
                }
                else if (this.type == 554)
                {
                    num2 = 340f;
                    num1 = 16f;
                }
                else if (this.type == 550 || this.type == 551)
                {
                    num2 = 370f;
                    num1 = 16f;
                }
                else if (this.type == 555)
                {
                    num2 = 360f;
                    num1 = 16.5f;
                }
                else if (this.type == 603)
                {
                    num2 = 400f;
                    num1 = 17.5f;
                }
                if (Main.player[this.owner].yoyoString)
                    num2 = (float)((double)num2 * 1.25 + 30.0);
                float num3 = num2 / (float)((1.0 + (double)Main.player[this.owner].meleeSpeed * 3.0) / 4.0);
                float num4 = num1 / (float)((1.0 + (double)Main.player[this.owner].meleeSpeed * 3.0) / 4.0);
                float num5 = (float)(14.0 - (double)num4 / 2.0);
                float num6 = (float)(5.0 + (double)num4 / 2.0);
                if (flag1)
                    num6 += 20f;
                if ((double)this.ai[0] >= 0.0)
                {
                    if ((double)this.velocity.Length() > (double)num4)
                    {
                        Projectile projectile = this;
                        Vector2 vector2 = projectile.velocity * 0.98f;
                        projectile.velocity = vector2;
                    }
                    bool flag3 = false;
                    bool flag4 = false;
                    Vector2 vector2_1 = Main.player[this.owner].Center - this.Center;
                    if ((double)vector2_1.Length() > (double)num3)
                    {
                        flag3 = true;
                        if ((double)vector2_1.Length() > (double)num3 * 1.3)
                            flag4 = true;
                    }
                    if (this.owner == Main.myPlayer)
                    {
                        if (!Main.player[this.owner].channel || Main.player[this.owner].stoned || Main.player[this.owner].frozen)
                        {
                            this.ai[0] = -1f;
                            this.ai[1] = 0.0f;
                            this.netUpdate = true;
                        }
                        else
                        {
                            Vector2 vector2_2 = Main.ReverseGravitySupport(Main.MouseScreen, 0.0f) + Main.screenPosition;
                            float x = vector2_2.X;
                            float y = vector2_2.Y;
                            Vector2 vector2_3 = new Vector2(x, y) - Main.player[this.owner].Center;
                            if ((double)vector2_3.Length() > (double)num3)
                            {
                                vector2_3.Normalize();
                                Vector2 vector2_4 = vector2_3 * num3;
                                Vector2 vector2_5 = Main.player[this.owner].Center + vector2_4;
                                x = vector2_5.X;
                                y = vector2_5.Y;
                            }
                            if ((double)this.ai[0] != (double)x || (double)this.ai[1] != (double)y)
                            {
                                Vector2 vector2_4 = new Vector2(x, y) - Main.player[this.owner].Center;
                                if ((double)vector2_4.Length() > (double)num3 - 1.0)
                                {
                                    vector2_4.Normalize();
                                    Vector2 vector2_5 = vector2_4 * (num3 - 1f);
                                    Vector2 vector2_6 = Main.player[this.owner].Center + vector2_5;
                                    x = vector2_6.X;
                                    y = vector2_6.Y;
                                }
                                this.ai[0] = x;
                                this.ai[1] = y;
                                this.netUpdate = true;
                            }
                        }
                    }
                    if (flag4 && this.owner == Main.myPlayer)
                    {
                        this.ai[0] = -1f;
                        this.netUpdate = true;
                    }
                    if ((double)this.ai[0] >= 0.0)
                    {
                        if (flag3)
                        {
                            num5 /= 2f;
                            num4 *= 2f;
                            if ((double)this.Center.X > (double)Main.player[this.owner].Center.X && (double)this.velocity.X > 0.0)
                                this.velocity.X *= 0.5f;
                            if ((double)this.Center.Y > (double)Main.player[this.owner].Center.Y && (double)this.velocity.Y > 0.0)
                                this.velocity.Y *= 0.5f;
                            if ((double)this.Center.X < (double)Main.player[this.owner].Center.X && (double)this.velocity.X > 0.0)
                                this.velocity.X *= 0.5f;
                            if ((double)this.Center.Y < (double)Main.player[this.owner].Center.Y && (double)this.velocity.Y > 0.0)
                                this.velocity.Y *= 0.5f;
                        }
                        Vector2 vector2_2 = new Vector2(this.ai[0], this.ai[1]) - this.Center;
                        double num7 = (double)this.velocity.Length();
                        if ((double)vector2_2.Length() > (double)num6)
                        {
                            vector2_2.Normalize();
                            vector2_2 *= num4;
                            this.velocity = (this.velocity * (num5 - 1f) + vector2_2) / num5;
                        }
                        else if (flag1)
                        {
                            if ((double)this.velocity.Length() < (double)num4 * 0.6)
                            {
                                vector2_2 = this.velocity;
                                vector2_2.Normalize();
                                vector2_2 *= num4 * 0.6f;
                                this.velocity = (this.velocity * (num5 - 1f) + vector2_2) / num5;
                            }
                        }
                        else
                        {
                            Projectile projectile = this;
                            Vector2 vector2_3 = projectile.velocity * 0.8f;
                            projectile.velocity = vector2_3;
                        }
                        if (flag1 && !flag3 && (double)this.velocity.Length() < (double)num4 * 0.6)
                        {
                            this.velocity.Normalize();
                            Projectile projectile = this;
                            Vector2 vector2_3 = projectile.velocity * (num4 * 0.6f);
                            projectile.velocity = vector2_3;
                        }
                    }
                }
                else
                {
                    float num7 = (float)(int)((double)num5 * 0.8);
                    float num8 = num4 * 1.5f;
                    this.tileCollide = false;
                    Vector2 vector2 = Main.player[this.owner].position - this.Center;
                    float num9 = vector2.Length();
                    if ((double)num9 < (double)num8 + 10.0 || (double)num9 == 0.0)
                    {
                        this.Kill();
                    }
                    else
                    {
                        vector2.Normalize();
                        vector2 *= num8;
                        this.velocity = (this.velocity * (num7 - 1f) + vector2) / num7;
                    }
                }
                this.rotation += 0.45f;
            }
        }

        public void Kill()
        {
            if (!this.active)
                return;
            int num1 = this.timeLeft;
            this.timeLeft = 0;
            if (this.type == 634 || this.type == 635)
            {
                int num2 = Utils.SelectRandom<int>(Main.rand, 242, 73, 72, 71, (int)byte.MaxValue);
                int Type1 = (int)byte.MaxValue;
                int Type2 = (int)byte.MaxValue;
                int num3 = 50;
                float Scale1 = 1.7f;
                float Scale2 = 0.8f;
                float Scale3 = 2f;
                Vector2 vector2 = Utils.ToRotationVector2(this.rotation - 1.570796f) * this.velocity.Length() * (float)this.MaxUpdates;
                if (this.type == 635)
                {
                    Type1 = 88;
                    Type2 = 88;
                    num2 = Utils.SelectRandom<int>(Main.rand, 242, 59, 88);
                    Scale1 = 3.7f;
                    Scale2 = 1.5f;
                    Scale3 = 2.2f;
                    vector2 *= 0.5f;
                }
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                this.position = this.Center;
                this.width = this.height = num3;
                this.Center = this.position;
                this.maxPenetrate = -1;
                this.penetrate = -1;
                this.Damage();
                for (int index1 = 0; index1 < 40; ++index1)
                {
                    int Type3 = Utils.SelectRandom<int>(Main.rand, 242, 73, 72, 71, (int)byte.MaxValue);
                    if (this.type == 635)
                        Type3 = Utils.SelectRandom<int>(Main.rand, 242, 59, 88);
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, Type3, 0.0f, 0.0f, 200, new Color(), Scale1);
                    Main.dust[index2].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    Main.dust[index2].velocity += vector2 * Utils.NextFloat(Main.rand);
                    int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, Type1, 0.0f, 0.0f, 100, new Color(), Scale2);
                    Main.dust[index3].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                    Main.dust[index3].fadeIn = 1f;
                    Main.dust[index3].color = Color.Crimson * 0.5f;
                    Main.dust[index3].velocity += vector2 * Utils.NextFloat(Main.rand);
                }
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, Type2, 0.0f, 0.0f, 0, new Color(), Scale3);
                    Main.dust[index2].position = this.Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), (double)Utils.ToRotation(this.velocity), new Vector2()) * (float)this.width / 3f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 0.5f;
                    Main.dust[index2].velocity += vector2 * (float)(0.600000023841858 + 0.600000023841858 * (double)Utils.NextFloat(Main.rand));
                }
            }
            else if (this.type == 641)
            {
                if (this.owner == Main.myPlayer)
                {
                    for (int index = 0; index < 1000; ++index)
                    {
                        if (Main.projectile[index].active && Main.projectile[index].owner == this.owner && Main.projectile[index].type == 642)
                            Main.projectile[index].Kill();
                    }
                }
            }
            else if (this.type == 643)
            {
                if (this.owner == Main.myPlayer)
                {
                    for (int index = 0; index < 1000; ++index)
                    {
                        if (Main.projectile[index].active && Main.projectile[index].owner == this.owner && Main.projectile[index].type == 644)
                            Main.projectile[index].Kill();
                    }
                }
            }
            else if (this.type == 645)
            {
                bool flag = WorldGen.SolidTile(Framing.GetTileSafely((int)this.position.X / 16, (int)this.position.Y / 16));
                for (int index = 0; index < 4; ++index)
                    Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                for (int index1 = 0; index1 < 4; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0.0f, 0.0f, 0, new Color(), 2.5f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    if (flag)
                        Main.dust[index2].noLight = true;
                    int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                    if (flag)
                        Main.dust[index3].noLight = true;
                }
                for (int index1 = 0; index1 < 1; ++index1)
                {
                    int index2 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += (float)Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += (float)Main.rand.Next(-10, 11) * 0.05f;
                }
            }
            else if (this.type == 636)
            {
                Rectangle hitbox = this.Hitbox;
                int index1 = 0;
                while (index1 < 6)
                {
                    hitbox.X = (int)this.oldPos[index1].X;
                    hitbox.Y = (int)this.oldPos[index1].Y;
                    for (int index2 = 0; index2 < 5; ++index2)
                    {
                        int Type = Utils.SelectRandom<int>(Main.rand, 6, 259, 158);
                        int index3 = Dust.NewDust(Utils.TopLeft(hitbox), this.width, this.height, Type, 2.5f * (float)this.direction, -2.5f, 0, new Color(), 1f);
                        Main.dust[index3].alpha = 200;
                        Main.dust[index3].velocity *= 2.4f;
                        Main.dust[index3].scale += Utils.NextFloat(Main.rand);
                    }
                    index1 += 3;
                }
            }
            else if (this.type == 614)
            {
                for (int index = 0; index < 10; ++index)
                {
                    Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, 229, 0.0f, 0.0f, 0, new Color(), 1f)];
                    dust.noGravity = true;
                    dust.velocity *= 3f;
                }
            }
            if (this.type == 644)
            {
                Vector2 spinningpoint = Utils.RotatedByRandom(new Vector2(0.0f, -3f), 3.14159274101257);
                float num2 = (float)Main.rand.Next(7, 13);
                Vector2 vector2 = new Vector2(2.1f, 2f);
                Color newColor = Main.hslToRgb(this.ai[0], 1f, 0.5f);
                newColor.A = byte.MaxValue;
                for (float num3 = 0.0f; (double)num3 < (double)num2; ++num3)
                {
                    int dustIndex = Dust.NewDust(this.Center, 0, 0, 267, 0.0f, 0.0f, 0, newColor, 1f);
                    Main.dust[dustIndex].position = this.Center;
                    Main.dust[dustIndex].velocity = Utils.RotatedBy(spinningpoint, 6.28318548202515 * (double)num3 / (double)num2, new Vector2()) * vector2 * (float)(0.800000011920929 + (double)Utils.NextFloat(Main.rand) * 0.400000005960464);
                    Main.dust[dustIndex].noGravity = true;
                    Main.dust[dustIndex].scale = 2f;
                    Main.dust[dustIndex].fadeIn = Utils.NextFloat(Main.rand) * 2f;
                    Dust dust = Dust.CloneDust(dustIndex);
                    dust.scale /= 2f;
                    dust.fadeIn /= 2f;
                    dust.color = new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue);
                }
                for (float num3 = 0.0f; (double)num3 < (double)num2; ++num3)
                {
                    int dustIndex = Dust.NewDust(this.Center, 0, 0, 267, 0.0f, 0.0f, 0, newColor, 1f);
                    Main.dust[dustIndex].position = this.Center;
                    Main.dust[dustIndex].velocity = Utils.RotatedBy(spinningpoint, 6.28318548202515 * (double)num3 / (double)num2, new Vector2()) * vector2 * (float)(0.800000011920929 + (double)Utils.NextFloat(Main.rand) * 0.400000005960464);
                    Main.dust[dustIndex].velocity *= Utils.NextFloat(Main.rand) * 0.8f;
                    Main.dust[dustIndex].noGravity = true;
                    Main.dust[dustIndex].scale = Utils.NextFloat(Main.rand) * 1f;
                    Main.dust[dustIndex].fadeIn = Utils.NextFloat(Main.rand) * 2f;
                    Dust dust = Dust.CloneDust(dustIndex);
                    dust.scale /= 2f;
                    dust.fadeIn /= 2f;
                    dust.color = new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue);
                }
                if (Main.myPlayer == this.owner)
                {
                    this.friendly = true;
                    int num3 = this.width;
                    int num4 = this.height;
                    int num5 = this.penetrate;
                    this.position = this.Center;
                    this.width = this.height = 60;
                    this.Center = this.position;
                    this.penetrate = -1;
                    this.maxPenetrate = -1;
                    this.Damage();
                    this.penetrate = num5;
                    this.position = this.Center;
                    this.width = num3;
                    this.height = num4;
                    this.Center = this.position;
                }
            }
            if (this.type == 608)
            {
                this.maxPenetrate = -1;
                this.penetrate = -1;
                this.Damage();
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                for (int index1 = 0; index1 < 4; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                }
                for (int index1 = 0; index1 < 30; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 200, new Color(), 3.7f);
                    Main.dust[index2].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    Main.dust[index2].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].ArmorSetDye(), Main.player[this.owner]);
                    int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                    Main.dust[index3].fadeIn = 2.5f;
                    Main.dust[index3].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].ArmorSetDye(), Main.player[this.owner]);
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 0, new Color(), 2.7f);
                    Main.dust[index2].position = this.Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), (double)Utils.ToRotation(this.velocity), new Vector2()) * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    Main.dust[index2].shader = GameShaders.Armor.GetSecondaryShader(Main.player[this.owner].ArmorSetDye(), Main.player[this.owner]);
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 0, new Color(), 1.5f);
                    Main.dust[index2].position = this.Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), (double)Utils.ToRotation(this.velocity), new Vector2()) * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 2; ++index1)
                {
                    int index2 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += (float)Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += (float)Main.rand.Next(-10, 11) * 0.05f;
                }
            }
            else if (this.type == 617)
            {
                this.position = this.Center;
                this.width = this.height = 176;
                this.Center = this.position;
                this.maxPenetrate = -1;
                this.penetrate = -1;
                this.Damage();
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                for (int index1 = 0; index1 < 4; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 240, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                }
                for (int index1 = 0; index1 < 30; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 62, 0.0f, 0.0f, 200, new Color(), 3.7f);
                    Main.dust[index2].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 90, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                    Main.dust[index3].fadeIn = 1f;
                    Main.dust[index3].color = Color.Crimson * 0.5f;
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 62, 0.0f, 0.0f, 0, new Color(), 2.7f);
                    Main.dust[index2].position = this.Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), (double)Utils.ToRotation(this.velocity), new Vector2()) * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 240, 0.0f, 0.0f, 0, new Color(), 1.5f);
                    Main.dust[index2].position = this.Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), (double)Utils.ToRotation(this.velocity), new Vector2()) * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 2; ++index1)
                {
                    int index2 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += (float)Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += (float)Main.rand.Next(-10, 11) * 0.05f;
                }
                if (Main.myPlayer == this.owner)
                {
                    for (int index = 0; index < 1000; ++index)
                    {
                        if (Main.projectile[index].active && Main.projectile[index].type == 618 && (double)Main.projectile[index].ai[1] == (double)this.whoAmI)
                            Main.projectile[index].Kill();
                    }
                    int num2 = Main.rand.Next(5, 9);
                    int num3 = Main.rand.Next(5, 9);
                    int num4 = Utils.SelectRandom<int>(Main.rand, 86, 90);
                    int num5 = num4 == 86 ? 90 : 86;
                    for (int index = 0; index < num2; ++index)
                    {
                        Vector2 vector2_1 = this.Center + Utils.RandomVector2(Main.rand, -30f, 30f);
                        Vector2 vector2_2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                        while ((double)vector2_2.X == 0.0 && (double)vector2_2.Y == 0.0)
                            vector2_2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                        vector2_2.Normalize();
                        if ((double)vector2_2.Y > 0.200000002980232)
                            vector2_2.Y *= -1f;
                        vector2_2 *= (float)Main.rand.Next(70, 101) * 0.1f;
                        Projectile.NewProjectile(vector2_1.X, vector2_1.Y, vector2_2.X, vector2_2.Y, 620, (int)((double)this.damage * 0.8), this.knockBack * 0.8f, this.owner, (float)num4, 0.0f);
                    }
                    for (int index = 0; index < num3; ++index)
                    {
                        Vector2 vector2_1 = this.Center + Utils.RandomVector2(Main.rand, -30f, 30f);
                        Vector2 vector2_2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                        while ((double)vector2_2.X == 0.0 && (double)vector2_2.Y == 0.0)
                            vector2_2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                        vector2_2.Normalize();
                        if ((double)vector2_2.Y > 0.400000005960464)
                            vector2_2.Y *= -1f;
                        vector2_2 *= (float)Main.rand.Next(40, 81) * 0.1f;
                        Projectile.NewProjectile(vector2_1.X, vector2_1.Y, vector2_2.X, vector2_2.Y, 620, (int)((double)this.damage * 0.8), this.knockBack * 0.8f, this.owner, (float)num5, 0.0f);
                    }
                }
            }
            else if (this.type == 620 || this.type == 618)
            {
                if (this.type == 618)
                    this.ai[0] = 86f;
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, (int)this.ai[0], this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, new Color(), 0.5f);
                    if (Main.rand.Next(3) == 0)
                    {
                        Main.dust[index2].fadeIn = (float)(0.75 + (double)Main.rand.Next(-10, 11) * 0.00999999977648258);
                        Main.dust[index2].scale = (float)(0.25 + (double)Main.rand.Next(-10, 11) * 0.00499999988824129);
                        ++Main.dust[index2].type;
                    }
                    else
                        Main.dust[index2].scale = (float)(1.0 + (double)Main.rand.Next(-10, 11) * 0.00999999977648258);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1.25f;
                    Main.dust[index2].velocity -= this.oldVelocity / 10f;
                }
            }
            else if (this.type == 619)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 50);
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, (int)this.ai[0], this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, new Color(), 0.5f);
                    if (Main.rand.Next(3) == 0)
                    {
                        Main.dust[index2].fadeIn = (float)(1.10000002384186 + (double)Main.rand.Next(-10, 11) * 0.00999999977648258);
                        Main.dust[index2].scale = (float)(0.349999994039536 + (double)Main.rand.Next(-10, 11) * 0.00999999977648258);
                        ++Main.dust[index2].type;
                    }
                    else
                        Main.dust[index2].scale = (float)(1.20000004768372 + (double)Main.rand.Next(-10, 11) * 0.00999999977648258);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 2.5f;
                    Main.dust[index2].velocity -= this.oldVelocity / 10f;
                }
                if (Main.myPlayer == this.owner)
                {
                    int num2 = Main.rand.Next(3, 6);
                    for (int index = 0; index < num2; ++index)
                    {
                        Vector2 vector2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                        while ((double)vector2.X == 0.0 && (double)vector2.Y == 0.0)
                            vector2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                        vector2.Normalize();
                        vector2 *= (float)Main.rand.Next(70, 101) * 0.1f;
                        Projectile.NewProjectile(this.oldPosition.X + (float)(this.width / 2), this.oldPosition.Y + (float)(this.height / 2), vector2.X, vector2.Y, 620, (int)((double)this.damage * 0.8), this.knockBack * 0.8f, this.owner, this.ai[0], 0.0f);
                    }
                }
            }
            if (this.type == 601)
            {
                Color portalColor = PortalHelper.GetPortalColor(this.owner, (int)this.ai[0]);
                portalColor.A = byte.MaxValue;
                for (int index = 0; index < 6; ++index)
                {
                    Vector2 vector2 = Utils.RotatedByRandom(Vector2.UnitY, 6.28318548202515) * (3f * Utils.NextFloat(Main.rand));
                    Dust dust = Main.dust[Dust.NewDust(this.Center, 0, 0, 263, 0.0f, 0.0f, 0, new Color(), 1f)];
                    dust.position = this.Center;
                    dust.velocity = vector2 + this.velocity / 5f;
                    dust.color = portalColor;
                    dust.scale = 2f;
                    dust.noLight = true;
                    dust.noGravity = true;
                }
            }
            if (this.type == 596)
            {
                this.position = this.Center;
                this.width = this.height = 60;
                this.Center = this.position;
                int num2 = 40;
                if (Main.expertMode)
                    num2 = 30;
                this.damage = num2;
                this.Damage();
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                for (int index1 = 0; index1 < 4; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                }
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0.0f, 0.0f, 0, new Color(), 2.5f);
                    Main.dust[index2].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 2f;
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 0, new Color(), 1.5f);
                    Main.dust[index2].position = this.Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), (double)Utils.ToRotation(this.velocity), new Vector2()) * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 2f;
                }
            }
            else if (this.type >= 625 && this.type <= 628)
            {
                for (int index1 = 0; index1 < 6; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 135, 0.0f, 0.0f, 100, new Color(), 2f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].noLight = true;
                }
            }
            if (this.type == 631)
            {
                int num2 = Main.rand.Next(5, 10);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(this.Center, 0, 0, 229, 0.0f, 0.0f, 100, new Color(), 1f);
                    Main.dust[index2].velocity *= 1.6f;
                    --Main.dust[index2].velocity.Y;
                    Main.dust[index2].position -= Vector2.One * 4f;
                    Main.dust[index2].position = Vector2.Lerp(Main.dust[index2].position, this.Center, 0.5f);
                    Main.dust[index2].noGravity = true;
                }
            }
            if (this.type == 539)
            {
                this.position = this.Center;
                this.width = this.height = 80;
                this.Center = this.position;
                this.Damage();
                Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 7);
                for (int index1 = 0; index1 < 4; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                }
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 176, 0.0f, 0.0f, 200, new Color(), 3.7f);
                    Main.dust[index2].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 180, 0.0f, 0.0f, 0, new Color(), 2.7f);
                    Main.dust[index2].position = this.Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), (double)Utils.ToRotation(this.velocity), new Vector2()) * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 0, new Color(), 1.5f);
                    Main.dust[index2].position = this.Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), (double)Utils.ToRotation(this.velocity), new Vector2()) * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
            }
            else if (this.type == 585)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 27);
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 26, 0.0f, 0.0f, 100, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1.2f;
                    Main.dust[index2].scale = 1.3f;
                    Main.dust[index2].velocity -= this.oldVelocity * 0.3f;
                    int index3 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 27, 0.0f, 0.0f, 100, new Color(), 2f);
                    Main.dust[index3].noGravity = true;
                    Main.dust[index3].velocity *= 3f;
                }
            }
            else if (this.type == 590)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 27);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 165, 0.0f, 0.0f, 50, new Color(), 1.5f);
                    Main.dust[index2].velocity *= 2f;
                    Main.dust[index2].noGravity = true;
                }
                float Scale = (float)(0.600000023841858 + (double)Utils.NextFloat(Main.rand) * 0.400000005960464);
                int index3 = Gore.NewGore(this.position, Vector2.Zero, 375, Scale);
                Main.gore[index3].velocity *= 0.3f;
                int index4 = Gore.NewGore(this.position, Vector2.Zero, 376, Scale);
                Main.gore[index4].velocity *= 0.3f;
                int index5 = Gore.NewGore(this.position, Vector2.Zero, 377, Scale);
                Main.gore[index5].velocity *= 0.3f;
            }
            else if (this.type == 587)
            {
                Color newColor = Main.hslToRgb(this.ai[1], 1f, 0.5f);
                newColor.A = (byte)200;
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 76, 0.0f, 0.0f, 0, newColor, 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1.2f;
                    Main.dust[index2].scale = 0.9f;
                    Main.dust[index2].velocity -= this.oldVelocity * 0.3f;
                    int index3 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 76, 0.0f, 0.0f, 0, newColor, 1.1f);
                    Main.dust[index3].noGravity = true;
                    Main.dust[index3].velocity *= 2f;
                }
            }
            else if (this.type == 572)
            {
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 40, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 100, new Color(), 1f);
                    Main.dust[index2].velocity *= 3f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].scale = 1.25f;
                    Main.dust[index2].position = (this.Center + this.position) / 2f;
                }
            }
            else if (this.type == 581)
            {
                for (int index = 0; index < 30; ++index)
                {
                    int Type = Utils.SelectRandom<int>(Main.rand, 229, 229, 161);
                    Dust dust = Main.dust[Dust.NewDust(this.position, this.width, this.height, Type, 0.0f, 0.0f, 0, new Color(), 1f)];
                    dust.noGravity = true;
                    dust.scale = 1.25f + Utils.NextFloat(Main.rand);
                    dust.fadeIn = 0.25f;
                    dust.velocity *= 2f;
                    dust.noLight = true;
                }
            }
            if (this.type == 405)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 54);
                Vector2 center = this.Center;
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int num2 = 10;
                    Vector2 vector2_1 = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f) * (float)Main.rand.Next(24, 41) / 8f;
                    int index2 = Dust.NewDust(this.Center - Vector2.One * (float)num2, num2 * 2, num2 * 2, 212, 0.0f, 0.0f, 0, new Color(), 1f);
                    Dust dust = Main.dust[index2];
                    Vector2 vector2_2 = Vector2.Normalize(dust.position - this.Center);
                    dust.position = this.Center + vector2_2 * (float)num2 * this.scale;
                    dust.velocity = index1 >= 30 ? vector2_2 * (float)Main.rand.Next(45, 91) / 10f : vector2_2 * dust.velocity.Length();
                    dust.color = Main.hslToRgb((float)(0.400000005960464 + Main.rand.NextDouble() * 0.200000002980232), 0.9f, 0.5f);
                    dust.color = Color.Lerp(dust.color, Color.White, 0.3f);
                    dust.noGravity = true;
                    dust.scale = 0.7f;
                }
            }
            if (this.type == 501)
            {
                Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1);
                int num2 = 20;
                this.position.X -= (float)num2;
                this.position.Y -= (float)num2;
                this.width += num2 * 2;
                this.height += num2 * 2;
                int num3 = num2 + 20;
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 188, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].velocity *= 0.5f;
                }
                for (int index1 = 0; index1 < 5; ++index1)
                {
                    int index2 = Gore.NewGore(new Vector2(this.position.X + (float)Main.rand.Next(this.width), this.position.Y + (float)Main.rand.Next(this.height)), new Vector2(), Main.rand.Next(435, 438), 1f);
                    Main.gore[index2].velocity *= 0.5f;
                    if (index1 == 0)
                    {
                        ++Main.gore[index2].velocity.X;
                        ++Main.gore[index2].velocity.Y;
                    }
                    else if (index1 == 1)
                    {
                        --Main.gore[index2].velocity.X;
                        ++Main.gore[index2].velocity.Y;
                    }
                    else if (index1 == 2)
                    {
                        ++Main.gore[index2].velocity.X;
                        --Main.gore[index2].velocity.Y;
                    }
                    else
                    {
                        --Main.gore[index2].velocity.X;
                        --Main.gore[index2].velocity.Y;
                    }
                    Main.gore[index2].velocity *= 0.5f;
                }
                this.position.X -= (float)num3;
                this.position.Y -= (float)num3;
                this.width += num3 * 2;
                this.height += num3 * 2;
                this.Damage();
            }
            if (this.type == 410)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 54);
                Vector2 center = this.Center;
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int num2 = (int)(10.0 * (double)this.ai[1]);
                    Vector2 vector2_1 = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f) * (float)Main.rand.Next(24, 41) / 8f;
                    int index2 = Dust.NewDust(this.Center - Vector2.One * (float)num2, num2 * 2, num2 * 2, 212, 0.0f, 0.0f, 0, new Color(), 1f);
                    Dust dust = Main.dust[index2];
                    Vector2 vector2_2 = Vector2.Normalize(dust.position - this.Center);
                    dust.position = this.Center + vector2_2 * (float)num2 * this.scale;
                    dust.velocity = index1 >= 30 ? vector2_2 * (float)Main.rand.Next(45, 91) / 10f : vector2_2 * dust.velocity.Length();
                    dust.color = Main.hslToRgb((float)(0.400000005960464 + Main.rand.NextDouble() * 0.200000002980232), 0.9f, 0.5f);
                    dust.color = Color.Lerp(dust.color, Color.White, 0.3f);
                    dust.noGravity = true;
                    dust.scale = 0.7f;
                }
            }
            if (this.type == 629 && Main.netMode != 1)
            {
                switch (Main.npc[(int)this.ai[0]].type)
                {
                    case 507:
                        if (NPC.ShieldStrengthTowerNebula != 0)
                            Main.npc[(int)this.ai[0]].ai[3] = 1f;
                        NPC.ShieldStrengthTowerNebula = (int)MathHelper.Clamp((float)(NPC.ShieldStrengthTowerNebula - 1), 0.0f, (float)NPC.ShieldStrengthTowerMax);
                        break;
                    case 517:
                        if (NPC.ShieldStrengthTowerSolar != 0)
                            Main.npc[(int)this.ai[0]].ai[3] = 1f;
                        NPC.ShieldStrengthTowerSolar = (int)MathHelper.Clamp((float)(NPC.ShieldStrengthTowerSolar - 1), 0.0f, (float)NPC.ShieldStrengthTowerMax);
                        break;
                    case 422:
                        if (NPC.ShieldStrengthTowerVortex != 0)
                            Main.npc[(int)this.ai[0]].ai[3] = 1f;
                        NPC.ShieldStrengthTowerVortex = (int)MathHelper.Clamp((float)(NPC.ShieldStrengthTowerVortex - 1), 0.0f, (float)NPC.ShieldStrengthTowerMax);
                        break;
                    case 493:
                        if (NPC.ShieldStrengthTowerStardust != 0)
                            Main.npc[(int)this.ai[0]].ai[3] = 1f;
                        NPC.ShieldStrengthTowerStardust = (int)MathHelper.Clamp((float)(NPC.ShieldStrengthTowerStardust - 1), 0.0f, (float)NPC.ShieldStrengthTowerMax);
                        break;
                }
                Main.npc[(int)this.ai[0]].netUpdate = true;
                NetMessage.SendData(101, -1, -1, "", 0, 0.0f, 0.0f, 0.0f, 0, 0, 0);
            }
            if (this.aiStyle == 105 && this.owner == Main.myPlayer && (double)this.ai[1] == 0.0)
            {
                Vector2 vector2_1 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                vector2_1.Normalize();
                Vector2 vector2_2 = vector2_1 * 0.3f;
                Projectile.NewProjectile(this.Center.X, this.Center.Y, vector2_2.X, vector2_2.Y, Main.rand.Next(569, 572), this.damage, 0.0f, this.owner, 0.0f, 0.0f);
            }
            if (this.type == 452)
            {
                Main.PlaySound(29, (int)this.position.X, (int)this.position.Y, 103);
                this.position = this.Center;
                this.width = this.height = 144;
                this.position.X -= (float)(this.width / 2);
                this.position.Y -= (float)(this.height / 2);
                for (int index = 0; index < 4; ++index)
                    Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                for (int index1 = 0; index1 < 40; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0.0f, 0.0f, 0, new Color(), 2.5f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                }
                for (int index1 = 0; index1 < 1; ++index1)
                {
                    int index2 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += (float)Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += (float)Main.rand.Next(-10, 11) * 0.05f;
                }
                this.Damage();
            }
            if (this.type == 454)
            {
                Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 6);
                this.position = this.Center;
                this.width = this.height = 208;
                this.position.X -= (float)(this.width / 2);
                this.position.Y -= (float)(this.height / 2);
                for (int index1 = 0; index1 < 7; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].position = Utils.RotatedBy(new Vector2((float)(this.width / 2), 0.0f), 6.28318548202515 * Main.rand.NextDouble(), new Vector2()) * (float)Main.rand.NextDouble() + this.Center;
                }
                for (int index1 = 0; index1 < 60; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0.0f, 0.0f, 0, new Color(), 2.5f);
                    Main.dust[index2].position = Utils.RotatedBy(new Vector2((float)(this.width / 2), 0.0f), 6.28318548202515 * Main.rand.NextDouble(), new Vector2()) * (float)Main.rand.NextDouble() + this.Center;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1f;
                    int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].position = Utils.RotatedBy(new Vector2((float)(this.width / 2), 0.0f), 6.28318548202515 * Main.rand.NextDouble(), new Vector2()) * (float)Main.rand.NextDouble() + this.Center;
                    Main.dust[index3].velocity *= 1f;
                    Main.dust[index3].noGravity = true;
                }
                for (int index1 = 0; index1 < 3; ++index1)
                {
                    int index2 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += (float)Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += (float)Main.rand.Next(-10, 11) * 0.05f;
                }
                this.Damage();
            }
            if (this.type == 467)
            {
                this.position = this.Center;
                this.width = this.height = 176;
                this.Center = this.position;
                this.Damage();
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                for (int index1 = 0; index1 < 4; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                }
                for (int index1 = 0; index1 < 30; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 200, new Color(), 3.7f);
                    Main.dust[index2].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                    Main.dust[index3].fadeIn = 2.5f;
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 0, new Color(), 2.7f);
                    Main.dust[index2].position = this.Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), (double)Utils.ToRotation(this.velocity), new Vector2()) * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 0, new Color(), 1.5f);
                    Main.dust[index2].position = this.Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), (double)Utils.ToRotation(this.velocity), new Vector2()) * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 2; ++index1)
                {
                    int index2 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += (float)Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += (float)Main.rand.Next(-10, 11) * 0.05f;
                }
            }
            if (this.type == 468)
            {
                this.position = this.Center;
                this.width = this.height = 176;
                this.Center = this.position;
                this.Damage();
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                for (int index1 = 0; index1 < 4; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                }
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0.0f, 0.0f, 200, new Color(), 3.7f);
                    Main.dust[index2].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                    Main.dust[index3].fadeIn = 2.5f;
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, 0.0f, 0.0f, 0, new Color(), 2.7f);
                    Main.dust[index2].position = this.Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), (double)Utils.ToRotation(this.velocity), new Vector2()) * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 0, new Color(), 1.5f);
                    Main.dust[index2].position = this.Center + Utils.RotatedBy(Utils.RotatedByRandom(Vector2.UnitX, 3.14159274101257), (double)Utils.ToRotation(this.velocity), new Vector2()) * (float)this.width / 2f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                }
                for (int index1 = 0; index1 < 2; ++index1)
                {
                    int index2 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].position = this.Center + Utils.RotatedByRandom(Vector2.UnitY, 3.14159274101257) * (float)Main.rand.NextDouble() * (float)this.width / 2f;
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += (float)Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += (float)Main.rand.Next(-10, 11) * 0.05f;
                }
            }
            if (this.type == 485)
            {
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 6, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= this.oldVelocity * (float)Main.rand.Next(20, 60) * 0.01f;
                }
            }
            else if (this.type == 484)
            {
                for (int index1 = 0; index1 < 5; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 78, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= this.oldVelocity / 5f;
                    Main.dust[index2].scale = 0.85f;
                }
            }
            else if (this.type == 483)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                if (this.owner == Main.myPlayer)
                {
                    int length = Main.rand.Next(4, 8);
                    int[] numArray = new int[length];
                    int maxValue = 0;
                    for (int index = 0; index < 200; ++index)
                    {
                        if (Main.npc[index].CanBeChasedBy((object)this, true) && Collision.CanHitLine(this.position, this.width, this.height, Main.npc[index].position, Main.npc[index].width, Main.npc[index].height))
                        {
                            numArray[maxValue] = index;
                            ++maxValue;
                            if (maxValue == length)
                                break;
                        }
                    }
                    if (maxValue > 1)
                    {
                        for (int index1 = 0; index1 < 100; ++index1)
                        {
                            int index2 = Main.rand.Next(maxValue);
                            int index3 = index2;
                            while (index3 == index2)
                                index3 = Main.rand.Next(maxValue);
                            int num2 = numArray[index2];
                            numArray[index2] = numArray[index3];
                            numArray[index3] = num2;
                        }
                    }
                    Vector2 vector2_1 = new Vector2(-1f, -1f);
                    for (int index = 0; index < maxValue; ++index)
                    {
                        Vector2 vector2_2 = Main.npc[numArray[index]].Center - this.Center;
                        vector2_2.Normalize();
                        vector2_1 += vector2_2;
                    }
                    vector2_1.Normalize();
                    for (int index = 0; index < length; ++index)
                    {
                        float num2 = (float)Main.rand.Next(8, 15);
                        Vector2 vector2_2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                        vector2_2.Normalize();
                        if (maxValue > 0)
                        {
                            vector2_2 += vector2_1;
                            vector2_2.Normalize();
                        }
                        vector2_2 *= num2;
                        if (maxValue > 0)
                        {
                            --maxValue;
                            vector2_2 = Main.npc[numArray[maxValue]].Center - this.Center;
                            vector2_2.Normalize();
                            vector2_2 *= num2;
                        }
                        Projectile.NewProjectile(this.Center.X, this.Center.Y, vector2_2.X, vector2_2.Y, 484, (int)((double)this.damage * 0.7), this.knockBack * 0.7f, this.owner, 0.0f, 0.0f);
                    }
                }
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 78, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 4f;
                }
                for (int index1 = 0; index1 < 7; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].velocity *= 0.9f;
                    Main.dust[index2].scale = 0.9f;
                }
                for (int index1 = 0; index1 < 3; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].velocity *= 2f;
                }
                int index4 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                Main.gore[index4].velocity *= 0.3f;
                Main.gore[index4].velocity.X += (float)Main.rand.Next(-1, 2);
                Main.gore[index4].velocity.Y += (float)Main.rand.Next(-1, 2);
                if (this.owner == Main.myPlayer)
                {
                    int num2 = 100;
                    this.position.X -= (float)(num2 / 2);
                    this.position.Y -= (float)(num2 / 2);
                    this.width += num2;
                    ++this.height;
                    this.penetrate = -1;
                    this.Damage();
                }
            }
            if (this.type == 523)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 54);
                for (int index1 = 0; index1 < 25; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 256, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].position = (Main.dust[index2].position + this.position) / 2f;
                    Main.dust[index2].velocity = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                    Main.dust[index2].velocity.Normalize();
                    Main.dust[index2].velocity *= (float)Main.rand.Next(1, 30) * 0.1f;
                    Main.dust[index2].alpha = this.alpha;
                }
            }
            else if (this.type == 522)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 118);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 254, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, new Color(), 0.5f);
                    if (Main.rand.Next(3) == 0)
                    {
                        Main.dust[index2].fadeIn = (float)(0.75 + (double)Main.rand.Next(-10, 11) * 0.00999999977648258);
                        Main.dust[index2].scale = (float)(0.25 + (double)Main.rand.Next(-10, 11) * 0.00499999988824129);
                        ++Main.dust[index2].type;
                    }
                    else
                        Main.dust[index2].scale = (float)(1.0 + (double)Main.rand.Next(-10, 11) * 0.00999999977648258);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1.25f;
                    Main.dust[index2].velocity -= this.oldVelocity / 10f;
                }
            }
            else if (this.type == 521)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 110);
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 254, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, new Color(), 0.5f);
                    if (Main.rand.Next(3) == 0)
                    {
                        Main.dust[index2].fadeIn = (float)(1.10000002384186 + (double)Main.rand.Next(-10, 11) * 0.00999999977648258);
                        Main.dust[index2].scale = (float)(0.349999994039536 + (double)Main.rand.Next(-10, 11) * 0.00999999977648258);
                        ++Main.dust[index2].type;
                    }
                    else
                        Main.dust[index2].scale = (float)(1.20000004768372 + (double)Main.rand.Next(-10, 11) * 0.00999999977648258);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 2.5f;
                    Main.dust[index2].velocity -= this.oldVelocity / 10f;
                }
                if (Main.myPlayer == this.owner)
                {
                    int num2 = Main.rand.Next(3, 6);
                    for (int index = 0; index < num2; ++index)
                    {
                        Vector2 vector2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                        while ((double)vector2.X == 0.0 && (double)vector2.Y == 0.0)
                            vector2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                        vector2.Normalize();
                        vector2 *= (float)Main.rand.Next(70, 101) * 0.1f;
                        Projectile.NewProjectile(this.oldPosition.X + (float)(this.width / 2), this.oldPosition.Y + (float)(this.height / 2), vector2.X, vector2.Y, 522, (int)((double)this.damage * 0.8), this.knockBack * 0.8f, this.owner, 0.0f, 0.0f);
                    }
                }
            }
            if (this.type == 520)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 50);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 252, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, new Color(), 0.75f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= this.oldVelocity / 3f;
                }
            }
            if (this.type == 459)
            {
                int num2 = 3;
                int num3 = 10;
                int num4 = 0;
                if ((double)this.scale >= 1.0)
                {
                    this.position = this.Center;
                    this.width = this.height = 144;
                    this.Center = this.position;
                    num2 = 7;
                    num3 = 30;
                    num4 = 2;
                    this.Damage();
                }
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].position = Utils.RotatedBy(new Vector2((float)(this.width / 2), 0.0f), 6.28318548202515 * Main.rand.NextDouble(), new Vector2()) * (float)Main.rand.NextDouble() + this.Center;
                }
                for (int index1 = 0; index1 < num3; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 226, 0.0f, 0.0f, 0, new Color(), 1.5f);
                    Main.dust[index2].position = Utils.RotatedBy(new Vector2((float)(this.width / 2), 0.0f), 6.28318548202515 * Main.rand.NextDouble(), new Vector2()) * (float)Main.rand.NextDouble() + this.Center;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1f;
                }
                for (int index1 = 0; index1 < num4; ++index1)
                {
                    int index2 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += (float)Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += (float)Main.rand.Next(-10, 11) * 0.05f;
                }
            }
            if (this.owner != Main.myPlayer && this.type == 453 && Main.player[this.owner].mount.AbilityActive)
                Main.player[this.owner].mount.UseAbility(Main.player[this.owner], this.position, false);
            if (this.type == 441)
                Main.player[this.owner].mount.StopAbilityCharge();
            if (this.type == 444)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 96);
                int num2 = Main.rand.Next(5, 9);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(this.Center, 0, 0, 171, 0.0f, 0.0f, 100, new Color(), 1.4f);
                    Main.dust[index2].velocity *= 0.8f;
                    Main.dust[index2].position = Vector2.Lerp(Main.dust[index2].position, this.Center, 0.5f);
                    Main.dust[index2].noGravity = true;
                }
                if (this.owner == Main.myPlayer)
                {
                    Vector2 vector2_1 = Main.screenPosition + new Vector2((float)Main.mouseX, (float)Main.mouseY);
                    if ((double)Main.player[this.owner].gravDir == -1.0)
                        vector2_1.Y = (float)(Main.screenHeight - Main.mouseY) + Main.screenPosition.Y;
                    Vector2 vector2_2 = Vector2.Normalize(vector2_1 - this.Center) * this.localAI[1];
                    Projectile.NewProjectile(this.Center.X, this.Center.Y, vector2_2.X, vector2_2.Y, (int)this.localAI[0], this.damage, this.knockBack, this.owner, 0.0f, 0.0f);
                }
            }
            if (this.type == 472)
            {
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 30, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 0.45f;
                    Main.dust[index2].velocity += this.velocity * 0.9f;
                }
            }
            if (this.type == 639 || this.type == 640)
            {
                int num2 = Main.rand.Next(5, 10);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(this.Center, 0, 0, 220, 0.0f, 0.0f, 100, new Color(), 0.5f);
                    Main.dust[index2].velocity *= 1.6f;
                    --Main.dust[index2].velocity.Y;
                    Main.dust[index2].position = Vector2.Lerp(Main.dust[index2].position, this.Center, 0.5f);
                    Main.dust[index2].noGravity = true;
                }
                if (this.owner == Main.myPlayer && this.type == 639)
                {
                    int num3 = num1 + 1;
                    int nextSlot = Projectile.GetNextSlot();
                    if (Main.ProjectileUpdateLoopIndex < nextSlot && Main.ProjectileUpdateLoopIndex != -1)
                        ++num3;
                    Vector2 vector2 = new Vector2(this.ai[0], this.ai[1]);
                    Projectile.NewProjectile(this.localAI[0], this.localAI[1], vector2.X, vector2.Y, 640, this.damage, this.knockBack, this.owner, 0.0f, (float)num3);
                }
            }
            if (this.type == 435)
            {
                int num2 = Main.rand.Next(5, 10);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(this.Center, 0, 0, 226, 0.0f, 0.0f, 100, new Color(), 0.5f);
                    Main.dust[index2].velocity *= 1.6f;
                    --Main.dust[index2].velocity.Y;
                    Main.dust[index2].position = Vector2.Lerp(Main.dust[index2].position, this.Center, 0.5f);
                    Main.dust[index2].noGravity = true;
                }
            }
            if (this.type == 436)
            {
                int num2 = Main.rand.Next(5, 10);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(this.Center, 0, 0, 220, 0.0f, 0.0f, 100, new Color(), 0.5f);
                    Main.dust[index2].velocity *= 1.6f;
                    --Main.dust[index2].velocity.Y;
                    Main.dust[index2].position = Vector2.Lerp(Main.dust[index2].position, this.Center, 0.5f);
                    Main.dust[index2].noGravity = true;
                }
            }
            if (this.type == 462)
            {
                int num2 = Main.rand.Next(5, 10);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(this.Center, 0, 0, 229, 0.0f, 0.0f, 100, new Color(), 0.5f);
                    Main.dust[index2].velocity *= 1.6f;
                    --Main.dust[index2].velocity.Y;
                    Main.dust[index2].position -= Vector2.One * 4f;
                    Main.dust[index2].position = Vector2.Lerp(Main.dust[index2].position, this.Center, 0.5f);
                    Main.dust[index2].noGravity = true;
                }
            }
            if (this.type == 442)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 94);
                int num2 = Main.rand.Next(3, 7);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 135, 0.0f, 0.0f, 100, new Color(), 2.1f);
                    Main.dust[index2].velocity *= 2f;
                    Main.dust[index2].noGravity = true;
                }
                if (Main.myPlayer == this.owner)
                {
                    Rectangle rectangle = new Rectangle((int)this.Center.X - 40, (int)this.Center.Y - 40, 80, 80);
                    for (int index = 0; index < 1000; ++index)
                    {
                        if (index != this.whoAmI && Main.projectile[index].active && (Main.projectile[index].owner == this.owner && Main.projectile[index].type == 443) && Main.projectile[index].getRect().Intersects(rectangle))
                        {
                            Main.projectile[index].ai[1] = 1f;
                            Main.projectile[index].velocity = (this.Center - Main.projectile[index].Center) / 5f;
                            Main.projectile[index].netUpdate = true;
                        }
                    }
                    Projectile.NewProjectile(this.Center.X, this.Center.Y, 0.0f, 0.0f, 443, this.damage, 0.0f, this.owner, 0.0f, 0.0f);
                }
            }
            if (this.type == 440)
            {
                int num2 = Main.rand.Next(3, 7);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(this.Center - this.velocity / 2f, 0, 0, 135, 0.0f, 0.0f, 100, new Color(), 2.1f);
                    Main.dust[index2].velocity *= 2f;
                    Main.dust[index2].noGravity = true;
                }
            }
            if (this.type == 606)
            {
                int num2 = Main.rand.Next(3, 7);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(this.Center - this.velocity / 2f, 0, 0, 182, 0.0f, 0.0f, 100, new Color(), 1.6f);
                    Main.dust[index2].velocity *= 1.5f;
                    Main.dust[index2].noGravity = true;
                }
            }
            if (this.type == 449)
            {
                int num2 = Main.rand.Next(3, 7);
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    int index2 = Dust.NewDust(this.Center - this.velocity / 2f, 0, 0, 228, 0.0f, 0.0f, 100, new Color(), 2.1f);
                    Main.dust[index2].velocity *= 2f;
                    Main.dust[index2].noGravity = true;
                }
            }
            if (this.type == 495)
            {
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(this.Center, 10, 10, 27, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= this.oldVelocity * 0.3f;
                }
            }
            if (this.type == 497)
            {
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(this.Center, 10, 10, 27, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 2f;
                    Main.dust[index2].velocity -= this.oldVelocity * 0.3f;
                    Main.dust[index2].scale += (float)Main.rand.Next(150) * (1.0f / 1000.0f);
                }
            }
            if (this.type == 448)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                this.position = this.Center;
                this.width = this.height = 112;
                this.position.X -= (float)(this.width / 2);
                this.position.Y -= (float)(this.height / 2);
                for (int index = 0; index < 4; ++index)
                    Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                for (int index1 = 0; index1 < 40; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 228, 0.0f, 0.0f, 0, new Color(), 2.5f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 228, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                }
                for (int index1 = 0; index1 < 1; ++index1)
                {
                    int index2 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += (float)Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += (float)Main.rand.Next(-10, 11) * 0.05f;
                }
                this.Damage();
            }
            if (this.type == 616)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                this.position = this.Center;
                this.width = this.height = 80;
                this.position.X -= (float)(this.width / 2);
                this.position.Y -= (float)(this.height / 2);
                for (int index = 0; index < 4; ++index)
                    Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                for (int index1 = 0; index1 < 40; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0.0f, 0.0f, 200, new Color(), 2.5f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 2f;
                    int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 229, 0.0f, 0.0f, 200, new Color(), 1.5f);
                    Main.dust[index3].velocity *= 1.2f;
                    Main.dust[index3].noGravity = true;
                }
                for (int index1 = 0; index1 < 1; ++index1)
                {
                    int index2 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += (float)Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += (float)Main.rand.Next(-10, 11) * 0.05f;
                }
                this.Damage();
            }
            if (this.type == 502)
            {
                Vector2 vector2 = new Vector2((float)this.width, (float)this.height) / 2f;
                for (int index1 = 0; index1 < this.oldPos.Length; ++index1)
                {
                    if (!(this.oldPos[index1] == Vector2.Zero))
                    {
                        int index2 = Dust.NewDust(this.oldPos[index1] + vector2, 0, 0, 66, 0.0f, 0.0f, 150, Color.Transparent, 0.7f);
                        Main.dust[index2].color = Main.hslToRgb(Utils.NextFloat(Main.rand), 1f, 0.5f);
                        Main.dust[index2].noGravity = true;
                    }
                }
            }
            if (this.type == 510)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 107);
                Gore.NewGore(this.Center, -this.oldVelocity * 0.2f, 704, 1f);
                Gore.NewGore(this.Center, -this.oldVelocity * 0.2f, 705, 1f);
                if (this.owner == Main.myPlayer)
                {
                    int num2 = Main.rand.Next(20, 31);
                    for (int index = 0; index < num2; ++index)
                    {
                        Vector2 vector2 = new Vector2((float)Main.rand.Next(-100, 101), (float)Main.rand.Next(-100, 101));
                        vector2.Normalize();
                        vector2 *= (float)Main.rand.Next(10, 201) * 0.01f;
                        Projectile.NewProjectile(this.Center.X, this.Center.Y, vector2.X, vector2.Y, 511 + Main.rand.Next(3), this.damage, 1f, this.owner, 0.0f, (float)Main.rand.Next(-45, 1));
                    }
                }
            }
            if (this.type == 408)
            {
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(this.Center - Vector2.One * 10f, 50, 50, 5, 0.0f, -2f, 0, new Color(), 1f);
                    Main.dust[index2].velocity /= 2f;
                }
                int num2 = 10;
                int index3 = Gore.NewGore(this.Center, this.velocity * 0.8f, 584, 1f);
                Main.gore[index3].timeLeft /= num2;
                int index4 = Gore.NewGore(this.Center, this.velocity * 0.9f, 585, 1f);
                Main.gore[index4].timeLeft /= num2;
                int index5 = Gore.NewGore(this.Center, this.velocity * 1f, 586, 1f);
                Main.gore[index5].timeLeft /= num2;
            }
            if (this.type == 385)
            {
                Main.PlaySound(4, (int)this.Center.X, (int)this.Center.Y, 19);
                int num2 = 36;
                for (int index1 = 0; index1 < num2; ++index1)
                {
                    Vector2 vector2_1 = Utils.RotatedBy(Vector2.Normalize(this.velocity) * new Vector2((float)this.width / 2f, (float)this.height) * 0.75f, (double)(index1 - (num2 / 2 - 1)) * 6.28318548202515 / (double)num2, new Vector2()) + this.Center;
                    Vector2 vector2_2 = vector2_1 - this.Center;
                    int index2 = Dust.NewDust(vector2_1 + vector2_2, 0, 0, 172, vector2_2.X * 2f, vector2_2.Y * 2f, 100, new Color(), 1.4f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].noLight = true;
                    Main.dust[index2].velocity = vector2_2;
                }
                if (this.owner == Main.myPlayer)
                {
                    if ((double)this.ai[1] < 1.0)
                    {
                        int index = Projectile.NewProjectile(this.Center.X - (float)(this.direction * 30), this.Center.Y - 4f, (float)-this.direction * 0.01f, 0.0f, 384, Main.expertMode ? 25 : 40, 4f, this.owner, 16f, 15f);
                        Main.projectile[index].netUpdate = true;
                    }
                    else
                    {
                        int num3 = (int)((double)this.Center.Y / 16.0);
                        int index1 = (int)((double)this.Center.X / 16.0);
                        int num4 = 100;
                        if (index1 < 10)
                            index1 = 10;
                        if (index1 > Main.maxTilesX - 10)
                            index1 = Main.maxTilesX - 10;
                        if (num3 < 10)
                            num3 = 10;
                        if (num3 > Main.maxTilesY - num4 - 10)
                            num3 = Main.maxTilesY - num4 - 10;
                        for (int index2 = num3; index2 < num3 + num4; ++index2)
                        {
                            Tile tile = Main.tile[index1, index2];
                            if (tile.active() && (Main.tileSolid[(int)tile.type] || (int)tile.liquid != 0))
                            {
                                num3 = index2;
                                break;
                            }
                        }
                        int Damage = Main.expertMode ? 50 : 80;
                        int index3 = Projectile.NewProjectile((float)(index1 * 16 + 8), (float)(num3 * 16 - 24), 0.0f, 0.0f, 386, Damage, 4f, Main.myPlayer, 16f, 24f);
                        Main.projectile[index3].netUpdate = true;
                    }
                }
            }
            else if (this.type >= 424 && this.type <= 426)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 89);
                this.position.X += (float)(this.width / 2);
                this.position.Y += (float)(this.height / 2);
                this.width = (int)(128.0 * (double)this.scale);
                this.height = (int)(128.0 * (double)this.scale);
                this.position.X -= (float)(this.width / 2);
                this.position.Y -= (float)(this.height / 2);
                for (int index = 0; index < 8; ++index)
                    Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                for (int index1 = 0; index1 < 32; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 3f;
                    int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].velocity *= 2f;
                    Main.dust[index3].noGravity = true;
                }
                for (int index1 = 0; index1 < 2; ++index1)
                {
                    int index2 = Gore.NewGore(this.position + new Vector2((float)(this.width * Main.rand.Next(100)) / 100f, (float)(this.height * Main.rand.Next(100)) / 100f) - Vector2.One * 10f, new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index2].velocity *= 0.3f;
                    Main.gore[index2].velocity.X += (float)Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index2].velocity.Y += (float)Main.rand.Next(-10, 11) * 0.05f;
                }
                if (this.owner == Main.myPlayer)
                {
                    this.localAI[1] = -1f;
                    this.maxPenetrate = 0;
                    this.Damage();
                }
                for (int index1 = 0; index1 < 5; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, Utils.SelectRandom<int>(Main.rand, 6, 259, 158), 2.5f * (float)this.direction, -2.5f, 0, new Color(), 1f);
                    Main.dust[index2].alpha = 200;
                    Main.dust[index2].velocity *= 2.4f;
                    Main.dust[index2].scale += Utils.NextFloat(Main.rand);
                }
            }
            if (this.type == 399)
            {
                Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1);
                Vector2 vector2 = new Vector2(20f, 20f);
                for (int index = 0; index < 5; ++index)
                    Dust.NewDust(this.Center - vector2 / 2f, (int)vector2.X, (int)vector2.Y, 12, 0.0f, 0.0f, 0, Color.Red, 1f);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(this.Center - vector2 / 2f, (int)vector2.X, (int)vector2.Y, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index2].velocity *= 1.4f;
                }
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(this.Center - vector2 / 2f, (int)vector2.X, (int)vector2.Y, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 5f;
                    int index3 = Dust.NewDust(this.Center - vector2 / 2f, (int)vector2.X, (int)vector2.Y, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    Main.dust[index3].velocity *= 3f;
                }
                if (Main.myPlayer == this.owner)
                {
                    for (int index = 0; index < 6; ++index)
                    {
                        float SpeedX = (float)(-(double)this.velocity.X * (double)Main.rand.Next(20, 50) * 0.00999999977648258 + (double)Main.rand.Next(-20, 21) * 0.400000005960464);
                        float SpeedY = (float)(-(double)Math.Abs(this.velocity.Y) * (double)Main.rand.Next(30, 50) * 0.00999999977648258 + (double)Main.rand.Next(-20, 5) * 0.400000005960464);
                        Projectile.NewProjectile(this.Center.X + SpeedX, this.Center.Y + SpeedY, SpeedX, SpeedY, 400 + Main.rand.Next(3), (int)((double)this.damage * 0.5), 0.0f, this.owner, 0.0f, 0.0f);
                    }
                }
            }
            if (this.type == 384 || this.type == 386)
            {
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 212, (float)(this.direction * 2), 0.0f, 100, new Color(), 1.4f);
                    Dust dust = Main.dust[index2];
                    dust.color = Color.CornflowerBlue;
                    dust.color = Color.Lerp(dust.color, Color.White, 0.3f);
                    dust.noGravity = true;
                }
            }
            if (this.type == 507 || this.type == 508)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                Vector2 vector2_1 = this.position;
                Vector2 vector2_2 = this.oldVelocity;
                vector2_2.Normalize();
                Vector2 Position = vector2_1 + vector2_2 * 16f;
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(Position, this.width, this.height, 81, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].position = (Main.dust[index2].position + this.Center) / 2f;
                    Main.dust[index2].velocity += this.oldVelocity * 0.4f;
                    Main.dust[index2].velocity *= 0.5f;
                    Main.dust[index2].noGravity = true;
                    Position -= vector2_2 * 8f;
                }
            }
            if (this.type == 598)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                Vector2 vector2_1 = this.position;
                Vector2 vector2_2 = Utils.ToRotationVector2(this.rotation - 1.570796f);
                Vector2 Position = vector2_1 + vector2_2 * 16f;
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(Position, this.width, this.height, 81, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].position = (Main.dust[index2].position + this.Center) / 2f;
                    Main.dust[index2].velocity += vector2_2 * 2f;
                    Main.dust[index2].velocity *= 0.5f;
                    Main.dust[index2].noGravity = true;
                    Position -= vector2_2 * 8f;
                }
            }
            if (this.type == 1 || this.type == 81 || this.type == 98)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                for (int index = 0; index < 10; ++index)
                    Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 7, 0.0f, 0.0f, 0, new Color(), 1f);
            }
            if (this.type == 336 || this.type == 345)
            {
                for (int index1 = 0; index1 < 6; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 196, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].scale = this.scale;
                }
            }
            if (this.type == 358)
            {
                this.velocity = this.oldVelocity * 0.2f;
                for (int index1 = 0; index1 < 100; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 211, 0.0f, 0.0f, 75, new Color(), 1.2f);
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].alpha += 25;
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].alpha += 25;
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].alpha += 25;
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].scale = 0.6f;
                    else
                        Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 0.3f;
                    Main.dust[index2].velocity += this.velocity;
                    Main.dust[index2].velocity *= (float)(1.0 + (double)Main.rand.Next(-100, 101) * 0.00999999977648258);
                    Main.dust[index2].velocity.X += (float)Main.rand.Next(-50, 51) * 0.015f;
                    Main.dust[index2].velocity.Y += (float)Main.rand.Next(-50, 51) * 0.015f;
                    Main.dust[index2].position = this.Center;
                }
            }
            if (this.type == 406)
            {
                int Alpha = 175;
                Color newColor = new Color(0, 80, (int)byte.MaxValue, 100);
                this.velocity = this.oldVelocity * 0.2f;
                for (int index1 = 0; index1 < 40; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 4, 0.0f, 0.0f, Alpha, newColor, 1.6f);
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].alpha += 25;
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].alpha += 25;
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].alpha += 25;
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].scale = 0.6f;
                    else
                        Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 0.3f;
                    Main.dust[index2].velocity += this.velocity;
                    Main.dust[index2].velocity *= (float)(1.0 + (double)Main.rand.Next(-100, 101) * 0.00999999977648258);
                    Main.dust[index2].velocity.X += (float)Main.rand.Next(-50, 51) * 0.015f;
                    Main.dust[index2].velocity.Y += (float)Main.rand.Next(-50, 51) * 0.015f;
                    Main.dust[index2].position = this.Center;
                }
            }
            if (this.type == 344)
            {
                for (int index1 = 0; index1 < 3; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 197, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].scale = this.scale;
                }
            }
            else if (this.type == 343)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
                for (int index1 = 4; index1 < 31; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.oldPosition.X - this.oldVelocity.X * (30f / (float)index1), this.oldPosition.Y - this.oldVelocity.Y * (30f / (float)index1)), 8, 8, 197, this.oldVelocity.X, this.oldVelocity.Y, 100, new Color(), 1.2f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 0.5f;
                }
            }
            else if (this.type == 349)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
                for (int index1 = 0; index1 < 3; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 76, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].noLight = true;
                    Main.dust[index2].scale = 0.7f;
                }
            }
            if (this.type == 323)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                for (int index1 = 0; index1 < 20; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 7, 0.0f, 0.0f, 0, new Color(), 1f);
                    if (Main.rand.Next(2) == 0)
                    {
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].scale = 1.3f;
                        Main.dust[index2].velocity *= 1.5f;
                        Main.dust[index2].velocity -= this.oldVelocity * 0.5f;
                        Main.dust[index2].velocity *= 1.5f;
                    }
                    else
                    {
                        Main.dust[index2].velocity *= 0.75f;
                        Main.dust[index2].velocity -= this.oldVelocity * 0.25f;
                        Main.dust[index2].scale = 0.8f;
                    }
                }
            }
            if (this.type == 589)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
                Color newColor = Color.Red;
                if ((double)this.ai[1] == 1.0)
                    newColor = Color.Green;
                if ((double)this.ai[1] == 2.0)
                    newColor = Color.Purple;
                if ((double)this.ai[1] == 3.0)
                    newColor = Color.Gold;
                if ((double)this.ai[1] == 4.0)
                    newColor = Color.White;
                newColor.A = (byte)100;
                for (int index1 = 0; index1 < 30; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 11, 0.0f, 0.0f, 0, newColor, 1f);
                    Main.dust[index2].velocity *= (float)(1.0 + (double)Utils.NextFloat(Main.rand) * 1.0);
                    if (index1 < 10)
                    {
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 0.5f;
                    }
                }
            }
            if (this.type == 346)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int Type = 10;
                    if ((double)this.ai[1] == 1.0)
                        Type = 4;
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, Type, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                }
            }
            if (this.type == 335)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 90 - (int)this.ai[1], 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noLight = true;
                    Main.dust[index2].scale = 0.8f;
                }
            }
            if (this.type == 318)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 30, 0.0f, 0.0f, 0, new Color(), 1f);
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].noGravity = true;
                }
            }
            if (this.type == 378)
            {
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 30, 0.0f, 0.0f, 0, new Color(), 1f);
                    if (Main.rand.Next(2) == 0)
                        Main.dust[index2].noGravity = true;
                }
            }
            else if (this.type == 311)
            {
                for (int index1 = 0; index1 < 5; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 189, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].scale = 0.85f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity += this.velocity * 0.5f;
                }
            }
            else if (this.type == 316)
            {
                for (int index1 = 0; index1 < 5; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 195, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].scale = 0.85f;
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity += this.velocity * 0.5f;
                }
            }
            else if (this.type == 184 || this.type == 195)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                for (int index = 0; index < 5; ++index)
                    Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 7, 0.0f, 0.0f, 0, new Color(), 1f);
            }
            else if (this.type == 275 || this.type == 276)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                for (int index = 0; index < 5; ++index)
                    Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 7, 0.0f, 0.0f, 0, new Color(), 1f);
            }
            else if (this.type == 291)
            {
                if (this.owner == Main.myPlayer)
                    Projectile.NewProjectile(this.Center.X, this.Center.Y, 0.0f, 0.0f, 292, this.damage, this.knockBack, this.owner, 0.0f, 0.0f);
            }
            else if (this.type == 295)
            {
                if (this.owner == Main.myPlayer)
                    Projectile.NewProjectile(this.Center.X, this.Center.Y, 0.0f, 0.0f, 296, (int)((double)this.damage * 0.65), this.knockBack, this.owner, 0.0f, 0.0f);
            }
            else if (this.type == 270)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 27);
                if ((double)this.ai[0] < 0.0)
                {
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 26, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 1.2f;
                        Main.dust[index2].scale = 1.3f;
                        Main.dust[index2].velocity -= this.oldVelocity * 0.3f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 5, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].noGravity = true;
                        Main.dust[index3].velocity *= 3f;
                    }
                }
                else
                {
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 26, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 1.2f;
                        Main.dust[index2].scale = 1.3f;
                        Main.dust[index2].velocity -= this.oldVelocity * 0.3f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X + 4f, this.position.Y + 4f), this.width - 8, this.height - 8, 6, 0.0f, 0.0f, 100, new Color(), 2f);
                        Main.dust[index3].noGravity = true;
                        Main.dust[index3].velocity *= 3f;
                    }
                }
            }
            else if (this.type == 265)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 27);
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 163, 0.0f, 0.0f, 100, new Color(), 1.2f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1.2f;
                    Main.dust[index2].velocity -= this.oldVelocity * 0.3f;
                }
            }
            else if (this.type == 355)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 27);
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 205, 0.0f, 0.0f, 100, new Color(), 1.2f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1.2f;
                    Main.dust[index2].velocity -= this.oldVelocity * 0.3f;
                }
            }
            else if (this.type == 304)
            {
                for (int index1 = 0; index1 < 3; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 182, 0.0f, 0.0f, 100, new Color(), 0.8f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1.2f;
                    Main.dust[index2].velocity -= this.oldVelocity * 0.3f;
                }
            }
            else if (this.type == 263)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 92, this.velocity.X, this.velocity.Y, Main.rand.Next(0, 101), new Color(), (float)(1.0 + (double)Main.rand.Next(40) * 0.00999999977648258));
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 2f;
                }
            }
            else if (this.type == 261)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                for (int index = 0; index < 5; ++index)
                    Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 148, 0.0f, 0.0f, 0, new Color(), 1f);
            }
            else if (this.type == 229)
            {
                for (int index1 = 0; index1 < 25; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 157, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 1.5f;
                    Main.dust[index2].scale = 1.5f;
                }
            }
            else if (this.type == 239)
            {
                int index = Dust.NewDust(new Vector2(this.position.X, (float)((double)this.position.Y + (double)this.height - 2.0)), 2, 2, 154, 0.0f, 0.0f, 0, new Color(), 1f);
                Main.dust[index].position.X -= 2f;
                Main.dust[index].alpha = 38;
                Main.dust[index].velocity *= 0.1f;
                Main.dust[index].velocity += -this.oldVelocity * 0.25f;
                Main.dust[index].scale = 0.95f;
            }
            else if (this.type == 245)
            {
                int index = Dust.NewDust(new Vector2(this.position.X, (float)((double)this.position.Y + (double)this.height - 2.0)), 2, 2, 114, 0.0f, 0.0f, 0, new Color(), 1f);
                Main.dust[index].noGravity = true;
                Main.dust[index].position.X -= 2f;
                Main.dust[index].alpha = 38;
                Main.dust[index].velocity *= 0.1f;
                Main.dust[index].velocity += -this.oldVelocity * 0.25f;
                Main.dust[index].scale = 0.95f;
            }
            else if (this.type == 264)
            {
                int index = Dust.NewDust(new Vector2(this.position.X, (float)((double)this.position.Y + (double)this.height - 2.0)), 2, 2, 54, 0.0f, 0.0f, 0, new Color(), 1f);
                Main.dust[index].noGravity = true;
                Main.dust[index].position.X -= 2f;
                Main.dust[index].alpha = 38;
                Main.dust[index].velocity *= 0.1f;
                Main.dust[index].velocity += -this.oldVelocity * 0.25f;
                Main.dust[index].scale = 0.95f;
            }
            else if (this.type == 206 || this.type == 225)
            {
                Main.PlaySound(6, (int)this.position.X, (int)this.position.Y, 1);
                for (int index = 0; index < 5; ++index)
                    Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 40, 0.0f, 0.0f, 0, new Color(), 1f);
            }
            else if (this.type == 227)
            {
                Main.PlaySound(6, (int)this.position.X, (int)this.position.Y, 1);
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 157, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity += this.oldVelocity;
                    Main.dust[index2].scale = 1.5f;
                }
            }
            else if (this.type == 237 && this.owner == Main.myPlayer)
                Projectile.NewProjectile(this.Center.X, this.Center.Y, 0.0f, 0.0f, 238, this.damage, this.knockBack, this.owner, 0.0f, 0.0f);
            else if (this.type == 243 && this.owner == Main.myPlayer)
                Projectile.NewProjectile(this.Center.X, this.Center.Y, 0.0f, 0.0f, 244, this.damage, this.knockBack, this.owner, 0.0f, 0.0f);
            else if (this.type == 120)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 67, this.velocity.X, this.velocity.Y, 100, new Color(), 1f);
                    if (index1 < 5)
                        Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity *= 0.2f;
                }
            }
            else if (this.type == 181 || this.type == 189 || this.type == 566)
            {
                for (int index1 = 0; index1 < 6; ++index1)
                {
                    int index2 = Dust.NewDust(this.position, this.width, this.height, 150, this.velocity.X, this.velocity.Y, 50, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].scale = 1f;
                }
            }
            else if (this.type == 178)
            {
                for (int index1 = 0; index1 < 85; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, Main.rand.Next(139, 143), this.velocity.X, this.velocity.Y, 0, new Color(), 1.2f);
                    Main.dust[index2].velocity.X += (float)Main.rand.Next(-50, 51) * 0.01f;
                    Main.dust[index2].velocity.Y += (float)Main.rand.Next(-50, 51) * 0.01f;
                    Main.dust[index2].velocity.X *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                    Main.dust[index2].velocity.Y *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                    Main.dust[index2].velocity.X += (float)Main.rand.Next(-50, 51) * 0.05f;
                    Main.dust[index2].velocity.Y += (float)Main.rand.Next(-50, 51) * 0.05f;
                    Main.dust[index2].scale *= (float)(1.0 + (double)Main.rand.Next(-30, 31) * 0.00999999977648258);
                }
                for (int index1 = 0; index1 < 40; ++index1)
                {
                    int index2 = Gore.NewGore(this.position, this.velocity, Main.rand.Next(276, 283), 1f);
                    Main.gore[index2].velocity.X += (float)Main.rand.Next(-50, 51) * 0.01f;
                    Main.gore[index2].velocity.Y += (float)Main.rand.Next(-50, 51) * 0.01f;
                    Main.gore[index2].velocity.X *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                    Main.gore[index2].velocity.Y *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                    Main.gore[index2].scale *= (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.00999999977648258);
                    Main.gore[index2].velocity.X += (float)Main.rand.Next(-50, 51) * 0.05f;
                    Main.gore[index2].velocity.Y += (float)Main.rand.Next(-50, 51) * 0.05f;
                }
            }
            else if (this.type == 289)
            {
                for (int index1 = 0; index1 < 30; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, Main.rand.Next(139, 143), this.velocity.X, this.velocity.Y, 0, new Color(), 1.2f);
                    Main.dust[index2].velocity.X += (float)Main.rand.Next(-50, 51) * 0.01f;
                    Main.dust[index2].velocity.Y += (float)Main.rand.Next(-50, 51) * 0.01f;
                    Main.dust[index2].velocity.X *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                    Main.dust[index2].velocity.Y *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                    Main.dust[index2].velocity.X += (float)Main.rand.Next(-50, 51) * 0.05f;
                    Main.dust[index2].velocity.Y += (float)Main.rand.Next(-50, 51) * 0.05f;
                    Main.dust[index2].scale *= (float)(1.0 + (double)Main.rand.Next(-30, 31) * 0.00999999977648258);
                }
                for (int index1 = 0; index1 < 15; ++index1)
                {
                    int index2 = Gore.NewGore(this.position, this.velocity, Main.rand.Next(276, 283), 1f);
                    Main.gore[index2].velocity.X += (float)Main.rand.Next(-50, 51) * 0.01f;
                    Main.gore[index2].velocity.Y += (float)Main.rand.Next(-50, 51) * 0.01f;
                    Main.gore[index2].velocity.X *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                    Main.gore[index2].velocity.Y *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                    Main.gore[index2].scale *= (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.00999999977648258);
                    Main.gore[index2].velocity.X += (float)Main.rand.Next(-50, 51) * 0.05f;
                    Main.gore[index2].velocity.Y += (float)Main.rand.Next(-50, 51) * 0.05f;
                }
            }
            else if (this.type == 475 || this.type == 505 || this.type == 506)
            {
                if ((double)this.ai[1] == 0.0)
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                if ((double)this.ai[1] < 10.0)
                {
                    Vector2 Position = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num2 = -this.velocity.X;
                    float num3 = -this.velocity.Y;
                    float num4 = 1f;
                    if ((double)this.ai[0] <= 17.0)
                        num4 = this.ai[0] / 17f;
                    int num5 = (int)(30.0 * (double)num4);
                    float num6 = 1f;
                    if ((double)this.ai[0] <= 30.0)
                        num6 = this.ai[0] / 30f;
                    float num7 = 0.4f * num6;
                    float num8 = num7;
                    float num9 = num3 + num8;
                    for (int index1 = 0; index1 < num5; ++index1)
                    {
                        float num10 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num9 * (double)num9);
                        float num11 = 5.6f;
                        if ((double)Math.Abs(num2) + (double)Math.Abs(num9) < 1.0)
                            num11 *= Math.Abs(num2) + Math.Abs(num9) / 1f;
                        float num12 = num11 / num10;
                        float num13 = num2 * num12;
                        float num14 = num9 * num12;
                        Math.Atan2((double)num14, (double)num13);
                        int Type = 3;
                        if (this.type == 506)
                            Type = 30;
                        if (this.type == 505)
                            Type = 239;
                        if ((double)index1 > (double)this.ai[1])
                        {
                            for (int index2 = 0; index2 < 4; ++index2)
                            {
                                int index3 = Dust.NewDust(Position, this.width, this.height, Type, 0.0f, 0.0f, 0, new Color(), 1f);
                                Main.dust[index3].noGravity = true;
                                Main.dust[index3].velocity *= 0.3f;
                            }
                        }
                        Position.X += num13;
                        Position.Y += num14;
                        num2 = -this.velocity.X;
                        float num15 = -this.velocity.Y;
                        num8 += num7;
                        num9 = num15 + num8;
                    }
                }
            }
            else if (this.type == 171)
            {
                if ((double)this.ai[1] == 0.0)
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                if ((double)this.ai[1] < 10.0)
                {
                    Vector2 Position = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
                    float num2 = -this.velocity.X;
                    float num3 = -this.velocity.Y;
                    float num4 = 1f;
                    if ((double)this.ai[0] <= 17.0)
                        num4 = this.ai[0] / 17f;
                    int num5 = (int)(30.0 * (double)num4);
                    float num6 = 1f;
                    if ((double)this.ai[0] <= 30.0)
                        num6 = this.ai[0] / 30f;
                    float num7 = 0.4f * num6;
                    float num8 = num7;
                    float num9 = num3 + num8;
                    for (int index1 = 0; index1 < num5; ++index1)
                    {
                        float num10 = (float)Math.Sqrt((double)num2 * (double)num2 + (double)num9 * (double)num9);
                        float num11 = 5.6f;
                        if ((double)Math.Abs(num2) + (double)Math.Abs(num9) < 1.0)
                            num11 *= Math.Abs(num2) + Math.Abs(num9) / 1f;
                        float num12 = num11 / num10;
                        float num13 = num2 * num12;
                        float num14 = num9 * num12;
                        Math.Atan2((double)num14, (double)num13);
                        if ((double)index1 > (double)this.ai[1])
                        {
                            for (int index2 = 0; index2 < 4; ++index2)
                            {
                                int index3 = Dust.NewDust(Position, this.width, this.height, 129, 0.0f, 0.0f, 0, new Color(), 1f);
                                Main.dust[index3].noGravity = true;
                                Main.dust[index3].velocity *= 0.3f;
                            }
                        }
                        Position.X += num13;
                        Position.Y += num14;
                        num2 = -this.velocity.X;
                        float num15 = -this.velocity.Y;
                        num8 += num7;
                        num9 = num15 + num8;
                    }
                }
            }
            else if (this.type == 117)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                for (int index = 0; index < 10; ++index)
                    Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 26, 0.0f, 0.0f, 0, new Color(), 1f);
            }
            else if (this.type == 166)
            {
                Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 51);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 76, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= this.oldVelocity * 0.25f;
                }
            }
            else if (this.type == 158)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 9, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= this.velocity * 0.5f;
                }
            }
            else if (this.type == 159)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 11, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= this.velocity * 0.5f;
                }
            }
            else if (this.type == 160)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 19, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= this.velocity * 0.5f;
                }
            }
            else if (this.type == 161)
            {
                Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                for (int index1 = 0; index1 < 10; ++index1)
                {
                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 11, 0.0f, 0.0f, 0, new Color(), 1f);
                    Main.dust[index2].noGravity = true;
                    Main.dust[index2].velocity -= this.velocity * 0.5f;
                }
            }
            else if (this.type >= 191 && this.type <= 194)
            {
                int index = Gore.NewGore(new Vector2(this.position.X - (float)(this.width / 2), this.position.Y - (float)(this.height / 2)), new Vector2(0.0f, 0.0f), Main.rand.Next(61, 64), this.scale);
                Main.gore[index].velocity *= 0.1f;
            }
            else if (!Main.projPet[this.type])
            {
                if (this.type == 93)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 57, 0.0f, 0.0f, 100, new Color(), 0.5f);
                        Main.dust[index2].velocity.X *= 2f;
                        Main.dust[index2].velocity.Y *= 2f;
                    }
                }
                else if (this.type == 99)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 1, 0.0f, 0.0f, 0, new Color(), 1f);
                        if (Main.rand.Next(2) == 0)
                            Main.dust[index2].scale *= 1.4f;
                        Projectile projectile = this;
                        Vector2 vector2 = projectile.velocity * 1.9f;
                        projectile.velocity = vector2;
                    }
                }
                else if (this.type == 91 || this.type == 92)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(this.position, this.width, this.height, 58, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 150, new Color(), 1.2f);
                    for (int index = 0; index < 3; ++index)
                        Gore.NewGore(this.position, new Vector2(this.velocity.X * 0.05f, this.velocity.Y * 0.05f), Main.rand.Next(16, 18), 1f);
                    if (this.type == 12 && this.damage < 500)
                    {
                        for (int index = 0; index < 10; ++index)
                            Dust.NewDust(this.position, this.width, this.height, 57, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 150, new Color(), 1.2f);
                        for (int index = 0; index < 3; ++index)
                            Gore.NewGore(this.position, new Vector2(this.velocity.X * 0.05f, this.velocity.Y * 0.05f), Main.rand.Next(16, 18), 1f);
                    }
                    if ((this.type == 91 || this.type == 92 && (double)this.ai[0] > 0.0) && this.owner == Main.myPlayer)
                    {
                        float num2 = this.position.X + (float)Main.rand.Next(-400, 400);
                        float num3 = this.position.Y - (float)Main.rand.Next(600, 900);
                        Vector2 vector2 = new Vector2(num2, num3);
                        float num4 = this.position.X + (float)(this.width / 2) - vector2.X;
                        float num5 = this.position.Y + (float)(this.height / 2) - vector2.Y;
                        float num6 = 22f / (float)Math.Sqrt((double)num4 * (double)num4 + (double)num5 * (double)num5);
                        float SpeedX = num4 * num6;
                        float SpeedY = num5 * num6;
                        int Damage = this.damage;
                        int index = Projectile.NewProjectile(num2, num3, SpeedX, SpeedY, 92, Damage, this.knockBack, this.owner, 0.0f, 0.0f);
                        if (this.type == 91)
                        {
                            Main.projectile[index].ai[1] = this.position.Y;
                            Main.projectile[index].ai[0] = 1f;
                        }
                        else
                            Main.projectile[index].ai[1] = this.position.Y;
                    }
                }
                else if (this.type == 89)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 68, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 1.5f;
                        Main.dust[index2].scale *= 0.9f;
                    }
                    if (this.type == 89 && this.owner == Main.myPlayer)
                    {
                        for (int index = 0; index < 3; ++index)
                        {
                            float SpeedX = (float)(-(double)this.velocity.X * (double)Main.rand.Next(40, 70) * 0.00999999977648258 + (double)Main.rand.Next(-20, 21) * 0.400000005960464);
                            float SpeedY = (float)(-(double)this.velocity.Y * (double)Main.rand.Next(40, 70) * 0.00999999977648258 + (double)Main.rand.Next(-20, 21) * 0.400000005960464);
                            Projectile.NewProjectile(this.position.X + SpeedX, this.position.Y + SpeedY, SpeedX, SpeedY, 90, (int)((double)this.damage * 0.5), 0.0f, this.owner, 0.0f, 0.0f);
                        }
                    }
                }
                else if (this.type == 177)
                {
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 137, 0.0f, 0.0f, Main.rand.Next(0, 101), new Color(), (float)(1.0 + (double)Main.rand.Next(-20, 40) * 0.00999999977648258));
                        Main.dust[index2].velocity -= this.oldVelocity * 0.2f;
                        if (Main.rand.Next(3) == 0)
                        {
                            Main.dust[index2].scale *= 0.8f;
                            Main.dust[index2].velocity *= 0.5f;
                        }
                        else
                            Main.dust[index2].noGravity = true;
                    }
                }
                else if (this.type == 119 || this.type == 118 || (this.type == 128 || this.type == 359))
                {
                    int num2 = 10;
                    if (this.type == 119 || this.type == 359)
                        num2 = 20;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
                    for (int index1 = 0; index1 < num2; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 92, 0.0f, 0.0f, 0, new Color(), 1f);
                        if (Main.rand.Next(3) != 0)
                        {
                            Main.dust[index2].velocity *= 2f;
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].scale *= 1.75f;
                        }
                        else
                            Main.dust[index2].scale *= 0.5f;
                    }
                }
                else if (this.type == 309)
                {
                    int num2 = 10;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
                    for (int index1 = 0; index1 < num2; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 185, 0.0f, 0.0f, 0, new Color(), 1f);
                        if (Main.rand.Next(2) == 0)
                        {
                            Main.dust[index2].velocity *= 2f;
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].scale *= 1.75f;
                        }
                    }
                }
                else if (this.type == 308)
                {
                    int num2 = 80;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
                    for (int index1 = 0; index1 < num2; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 16f), this.width, this.height - 16, 185, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].velocity *= 2f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].scale *= 1.15f;
                    }
                }
                else if (this.aiStyle == 29 && this.type <= 126)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    int Type = this.type - 121 + 86;
                    for (int index1 = 0; index1 < 15; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, Type, this.oldVelocity.X, this.oldVelocity.Y, 50, new Color(), 1.2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].scale *= 1.25f;
                        Main.dust[index2].velocity *= 0.5f;
                    }
                }
                else if (this.type == 597)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index1 = 0; index1 < 15; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 262, this.oldVelocity.X, this.oldVelocity.Y, 50, new Color(), 1.2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].scale *= 1.25f;
                        Main.dust[index2].velocity *= 0.5f;
                    }
                }
                else if (this.type == 337)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 197, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].noGravity = true;
                    }
                }
                else if (this.type == 379 || this.type == 377)
                {
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 171, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].scale = (float)Main.rand.Next(1, 10) * 0.1f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].fadeIn = 1.5f;
                        Main.dust[index2].velocity *= 0.75f;
                    }
                }
                else if (this.type == 80)
                {
                    if ((double)this.ai[0] >= 0.0)
                    {
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 27);
                        for (int index = 0; index < 10; ++index)
                            Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 67, 0.0f, 0.0f, 0, new Color(), 1f);
                    }
                    int i = (int)this.position.X / 16;
                    int j = (int)this.position.Y / 16;
                    if (Main.tile[i, j] == null)
                        Main.tile[i, j] = new Tile();
                    if ((int)Main.tile[i, j].type == (int)sbyte.MaxValue && Main.tile[i, j].active())
                        WorldGen.KillTile(i, j, false, false, false);
                }
                else if (this.type == 76 || this.type == 77 || this.type == 78)
                {
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 27, 0.0f, 0.0f, 80, new Color(), 1.5f);
                        Main.dust[index2].noGravity = true;
                    }
                }
                else if (this.type == 55)
                {
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 18, 0.0f, 0.0f, 0, new Color(), 1.5f);
                        Main.dust[index2].noGravity = true;
                    }
                }
                else if (this.type == 51 || this.type == 267)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index = 0; index < 5; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0, 0.0f, 0.0f, 0, new Color(), 0.7f);
                }
                else if (this.type == 478)
                {
                    if (this.owner == Main.myPlayer)
                        Projectile.NewProjectile(this.Center.X, this.Center.Y, 0.0f, 0.0f, 480, (int)((double)this.damage * 0.8), this.knockBack * 0.5f, this.owner, 0.0f, 0.0f);
                }
                else if (this.type == 477 || this.type == 479)
                {
                    int num2 = 0;
                    while (num2 < 5)
                        ++num2;
                    Collision.HitTiles(this.position, this.velocity, this.width, this.height);
                }
                else if (this.type == 2 || this.type == 82)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1f);
                }
                else if (this.type == 474)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index = 0; index < 20; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 26, 0.0f, 0.0f, 0, new Color(), 0.9f);
                }
                else if (this.type == 172)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index = 0; index < 20; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 135, 0.0f, 0.0f, 100, new Color(), 1f);
                }
                else if (this.type == 103)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 75, 0.0f, 0.0f, 100, new Color(), 1f);
                        if (Main.rand.Next(2) == 0)
                        {
                            Main.dust[index2].scale *= 2.5f;
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].velocity *= 5f;
                        }
                    }
                }
                else if (this.type == 278)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 169, 0.0f, 0.0f, 100, new Color(), 1f);
                        if (Main.rand.Next(2) == 0)
                        {
                            Main.dust[index2].scale *= 1.5f;
                            Main.dust[index2].noGravity = true;
                            Main.dust[index2].velocity *= 5f;
                        }
                    }
                }
                else if (this.type == 3 || this.type == 48 || (this.type == 54 || this.type == 599))
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 1, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, new Color(), 0.75f);
                }
                else if (this.type == 330)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0, this.velocity.X * 0.4f, this.velocity.Y * 0.4f, 0, new Color(), 0.75f);
                }
                else if (this.type == 4)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 14, 0.0f, 0.0f, 150, new Color(), 1.1f);
                }
                else if (this.type == 5)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    for (int index = 0; index < 60; ++index)
                    {
                        int Type;
                        switch (Main.rand.Next(3))
                        {
                            case 0:
                                Type = 15;
                                break;
                            case 1:
                                Type = 57;
                                break;
                            default:
                                Type = 58;
                                break;
                        }
                        Dust.NewDust(this.position, this.width, this.height, Type, this.velocity.X * 0.5f, this.velocity.Y * 0.5f, 150, new Color(), 1.5f);
                    }
                }
                else if (this.type == 9 || this.type == 12 || this.type == 503)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    int num2 = 10;
                    int num3 = 3;
                    if (this.type == 503)
                    {
                        num2 = 40;
                        num3 = 2;
                        Projectile projectile = this;
                        Vector2 vector2 = projectile.velocity / 2f;
                        projectile.velocity = vector2;
                    }
                    for (int index = 0; index < num2; ++index)
                        Dust.NewDust(this.position, this.width, this.height, 58, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 150, new Color(), 1.2f);
                    for (int index = 0; index < num3; ++index)
                    {
                        int Type = Main.rand.Next(16, 18);
                        if (this.type == 503)
                            Type = 16;
                        Gore.NewGore(this.position, new Vector2(this.velocity.X * 0.05f, this.velocity.Y * 0.05f), Type, 1f);
                    }
                    if (this.type == 12 && this.damage < 100)
                    {
                        for (int index = 0; index < 10; ++index)
                            Dust.NewDust(this.position, this.width, this.height, 57, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 150, new Color(), 1.2f);
                        for (int index = 0; index < 3; ++index)
                            Gore.NewGore(this.position, new Vector2(this.velocity.X * 0.05f, this.velocity.Y * 0.05f), Main.rand.Next(16, 18), 1f);
                    }
                }
                else if (this.type == 281)
                {
                    Main.PlaySound(4, (int)this.position.X, (int)this.position.Y, 1);
                    int index1 = Gore.NewGore(this.position, new Vector2((float)Main.rand.Next(-20, 21) * 0.2f, (float)Main.rand.Next(-20, 21) * 0.2f), 76, 1f);
                    Main.gore[index1].velocity -= this.velocity * 0.5f;
                    int index2 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2((float)Main.rand.Next(-20, 21) * 0.2f, (float)Main.rand.Next(-20, 21) * 0.2f), 77, 1f);
                    Main.gore[index2].velocity -= this.velocity * 0.5f;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    for (int index3 = 0; index3 < 20; ++index3)
                    {
                        int index4 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index4].velocity *= 1.4f;
                    }
                    for (int index3 = 0; index3 < 10; ++index3)
                    {
                        int index4 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                        Main.dust[index4].noGravity = true;
                        Main.dust[index4].velocity *= 5f;
                        int index5 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index5].velocity *= 3f;
                    }
                    int index6 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index6].velocity *= 0.4f;
                    ++Main.gore[index6].velocity.X;
                    ++Main.gore[index6].velocity.Y;
                    int index7 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index7].velocity *= 0.4f;
                    --Main.gore[index7].velocity.X;
                    ++Main.gore[index7].velocity.Y;
                    int index8 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index8].velocity *= 0.4f;
                    ++Main.gore[index8].velocity.X;
                    --Main.gore[index8].velocity.Y;
                    int index9 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index9].velocity *= 0.4f;
                    --Main.gore[index9].velocity.X;
                    --Main.gore[index9].velocity.Y;
                    this.position.X += (float)(this.width / 2);
                    this.position.Y += (float)(this.height / 2);
                    this.width = 128;
                    this.height = 128;
                    this.position.X -= (float)(this.width / 2);
                    this.position.Y -= (float)(this.height / 2);
                    this.Damage();
                }
                else if (this.type == 162)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index2].velocity *= 1.4f;
                    }
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 5f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 3f;
                    }
                    int index4 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index4].velocity *= 0.4f;
                    ++Main.gore[index4].velocity.X;
                    ++Main.gore[index4].velocity.Y;
                    int index5 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index5].velocity *= 0.4f;
                    --Main.gore[index5].velocity.X;
                    ++Main.gore[index5].velocity.Y;
                    int index6 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index6].velocity *= 0.4f;
                    ++Main.gore[index6].velocity.X;
                    --Main.gore[index6].velocity.Y;
                    int index7 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index7].velocity *= 0.4f;
                    --Main.gore[index7].velocity.X;
                    --Main.gore[index7].velocity.Y;
                    this.position.X += (float)(this.width / 2);
                    this.position.Y += (float)(this.height / 2);
                    this.width = 128;
                    this.height = 128;
                    this.position.X -= (float)(this.width / 2);
                    this.position.Y -= (float)(this.height / 2);
                    this.Damage();
                }
                else if (this.type == 240)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index2].velocity *= 1.4f;
                    }
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 5f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 3f;
                    }
                    int index4 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index4].velocity *= 0.4f;
                    ++Main.gore[index4].velocity.X;
                    ++Main.gore[index4].velocity.Y;
                    int index5 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index5].velocity *= 0.4f;
                    --Main.gore[index5].velocity.X;
                    ++Main.gore[index5].velocity.Y;
                    int index6 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index6].velocity *= 0.4f;
                    ++Main.gore[index6].velocity.X;
                    --Main.gore[index6].velocity.Y;
                    int index7 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index7].velocity *= 0.4f;
                    --Main.gore[index7].velocity.X;
                    --Main.gore[index7].velocity.Y;
                    this.position.X += (float)(this.width / 2);
                    this.position.Y += (float)(this.height / 2);
                    this.width = 96;
                    this.height = 96;
                    this.position.X -= (float)(this.width / 2);
                    this.position.Y -= (float)(this.height / 2);
                    this.Damage();
                }
                else if (this.type == 283 || this.type == 282)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 171, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].scale = (float)Main.rand.Next(1, 10) * 0.1f;
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].fadeIn = 1.5f;
                        Main.dust[index2].velocity *= 0.75f;
                    }
                }
                else if (this.type == 284)
                {
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, Main.rand.Next(139, 143), (float)(-(double)this.velocity.X * 0.300000011920929), (float)(-(double)this.velocity.Y * 0.300000011920929), 0, new Color(), 1.2f);
                        Main.dust[index2].velocity.X += (float)Main.rand.Next(-50, 51) * 0.01f;
                        Main.dust[index2].velocity.Y += (float)Main.rand.Next(-50, 51) * 0.01f;
                        Main.dust[index2].velocity.X *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                        Main.dust[index2].velocity.Y *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                        Main.dust[index2].velocity.X += (float)Main.rand.Next(-50, 51) * 0.05f;
                        Main.dust[index2].velocity.Y += (float)Main.rand.Next(-50, 51) * 0.05f;
                        Main.dust[index2].scale *= (float)(1.0 + (double)Main.rand.Next(-30, 31) * 0.00999999977648258);
                    }
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Gore.NewGore(this.position, -this.velocity * 0.3f, Main.rand.Next(276, 283), 1f);
                        Main.gore[index2].velocity.X += (float)Main.rand.Next(-50, 51) * 0.01f;
                        Main.gore[index2].velocity.Y += (float)Main.rand.Next(-50, 51) * 0.01f;
                        Main.gore[index2].velocity.X *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                        Main.gore[index2].velocity.Y *= (float)(1.0 + (double)Main.rand.Next(-50, 51) * 0.00999999977648258);
                        Main.gore[index2].scale *= (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.00999999977648258);
                        Main.gore[index2].velocity.X += (float)Main.rand.Next(-50, 51) * 0.05f;
                        Main.gore[index2].velocity.Y += (float)Main.rand.Next(-50, 51) * 0.05f;
                    }
                }
                else if (this.type == 286)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    for (int index = 0; index < 7; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    for (int index1 = 0; index1 < 3; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 3f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 2f;
                    }
                    int index4 = Gore.NewGore(new Vector2(this.position.X - 10f, this.position.Y - 10f), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index4].velocity *= 0.3f;
                    Main.gore[index4].velocity.X += (float)Main.rand.Next(-10, 11) * 0.05f;
                    Main.gore[index4].velocity.Y += (float)Main.rand.Next(-10, 11) * 0.05f;
                    if (this.owner == Main.myPlayer)
                    {
                        this.localAI[1] = -1f;
                        this.maxPenetrate = 0;
                        this.position.X += (float)(this.width / 2);
                        this.position.Y += (float)(this.height / 2);
                        this.width = 80;
                        this.height = 80;
                        this.position.X -= (float)(this.width / 2);
                        this.position.Y -= (float)(this.height / 2);
                        this.Damage();
                    }
                }
                else if (this.type == 14 || this.type == 20 || (this.type == 36 || this.type == 83) || (this.type == 84 || this.type == 389 || (this.type == 104 || this.type == 279)) || (this.type == 100 || this.type == 110 || (this.type == 180 || this.type == 207) || (this.type == 357 || this.type == 242 || (this.type == 302 || this.type == 257))) || (this.type == 259 || this.type == 285 || (this.type == 287 || this.type == 576) || this.type == 577))
                {
                    Collision.HitTiles(this.position, this.velocity, this.width, this.height);
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                }
                else if (this.type == 638)
                {
                    Collision.HitTiles(this.position, this.velocity, this.width, this.height);
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    int num2 = Main.rand.Next(2, 5);
                    for (int index1 = 0; index1 < num2; ++index1)
                    {
                        int index2 = Dust.NewDust(this.Center, 0, 0, 229, 0.0f, 0.0f, 100, new Color(), 1f);
                        Main.dust[index2].velocity *= 1.6f;
                        --Main.dust[index2].velocity.Y;
                        Main.dust[index2].position -= Vector2.One * 4f;
                        Main.dust[index2].position = Vector2.Lerp(Main.dust[index2].position, this.Center, 0.5f);
                        Main.dust[index2].noGravity = true;
                    }
                }
                else if (this.type == 15 || this.type == 34 || this.type == 321)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, (float)(-(double)this.velocity.X * 0.200000002980232), (float)(-(double)this.velocity.Y * 0.200000002980232), 100, new Color(), 2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 2f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, (float)(-(double)this.velocity.X * 0.200000002980232), (float)(-(double)this.velocity.Y * 0.200000002980232), 100, new Color(), 1f);
                        Main.dust[index3].velocity *= 2f;
                    }
                }
                else if (this.type == 253)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 135, (float)(-(double)this.velocity.X * 0.200000002980232), (float)(-(double)this.velocity.Y * 0.200000002980232), 100, new Color(), 2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 2f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 135, (float)(-(double)this.velocity.X * 0.200000002980232), (float)(-(double)this.velocity.Y * 0.200000002980232), 100, new Color(), 1f);
                        Main.dust[index3].velocity *= 2f;
                    }
                }
                else if (this.type == 95 || this.type == 96)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 75, (float)(-(double)this.velocity.X * 0.200000002980232), (float)(-(double)this.velocity.Y * 0.200000002980232), 100, new Color(), 2f * this.scale);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 2f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 75, (float)(-(double)this.velocity.X * 0.200000002980232), (float)(-(double)this.velocity.Y * 0.200000002980232), 100, new Color(), 1f * this.scale);
                        Main.dust[index3].velocity *= 2f;
                    }
                }
                else if (this.type == 79)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 66, 0.0f, 0.0f, 100, new Color(Main.DiscoR, Main.DiscoG, Main.DiscoB), 2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 4f;
                    }
                }
                else if (this.type == 16)
                {
                    if (this.type == 16 && this.penetrate == 1)
                    {
                        this.maxPenetrate = -1;
                        this.penetrate = -1;
                        int num2 = 60;
                        this.position.X -= (float)(num2 / 2);
                        this.position.Y -= (float)(num2 / 2);
                        this.width += num2;
                        this.height += num2;
                        this.tileCollide = false;
                        Projectile projectile = this;
                        Vector2 vector2 = projectile.velocity * 0.01f;
                        projectile.velocity = vector2;
                        this.Damage();
                        this.scale = 0.01f;
                    }
                    this.position.X += (float)(this.width / 2);
                    this.width = 10;
                    this.position.X -= (float)(this.width / 2);
                    this.position.Y += (float)(this.height / 2);
                    this.height = 10;
                    this.position.Y -= (float)(this.height / 2);
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 15, 0.0f, 0.0f, 100, new Color(), 2f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 2f;
                        Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 15, 0.0f, 0.0f, 100, new Color(), 1f);
                    }
                }
                else if (this.type == 17)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index = 0; index < 5; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0, 0.0f, 0.0f, 0, new Color(), 1f);
                }
                else if (this.type == 31 || this.type == 42)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 32, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.6f;
                    }
                }
                else if (this.type >= 411 && this.type <= 414)
                {
                    int Type = 9;
                    if (this.type == 412 || this.type == 414)
                        Type = 11;
                    if (this.type == 413)
                        Type = 19;
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, Type, 0.0f, this.velocity.Y / 2f, 0, new Color(), 1f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity -= this.velocity * 0.5f;
                    }
                }
                else if (this.type == 109)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 51, 0.0f, 0.0f, 0, new Color(), 0.6f);
                        Main.dust[index2].velocity *= 0.6f;
                    }
                }
                else if (this.type == 39)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 38, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.6f;
                    }
                }
                else if (this.type == 71)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 53, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.6f;
                    }
                }
                else if (this.type == 40)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 36, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].velocity *= 0.6f;
                    }
                }
                else if (this.type == 21 || this.type == 471 || this.type == 532)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 26, 0.0f, 0.0f, 0, new Color(), 0.8f);
                }
                else if (this.type == 583)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 4, 0.0f, 0.0f, 100, new Color(20, 250, 20, 240), 0.8f);
                }
                else if (this.type == 584)
                {
                    Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 4, 0.0f, 0.0f, 100, new Color(250, 20, 120, 240), 0.8f);
                }
                else if (this.type == 24)
                {
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 1, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, new Color(), 0.75f);
                }
                else if (this.type == 27)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 100, new Color(), 1f);
                        Main.dust[index2].noGravity = true;
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 172, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 100, new Color(), 0.5f);
                    }
                }
                else if (this.type == 38)
                {
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 42, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 0, new Color(), 1f);
                }
                else if (this.type == 44 || this.type == 45)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, this.velocity.X, this.velocity.Y, 100, new Color(), 1.7f);
                        Main.dust[index2].noGravity = true;
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 27, this.velocity.X, this.velocity.Y, 100, new Color(), 1f);
                    }
                }
                else if (this.type == 41)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    for (int index = 0; index < 10; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 3f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 2f;
                    }
                    int index4 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index4].velocity *= 0.4f;
                    Main.gore[index4].velocity.X += (float)Main.rand.Next(-10, 11) * 0.1f;
                    Main.gore[index4].velocity.Y += (float)Main.rand.Next(-10, 11) * 0.1f;
                    int index5 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index5].velocity *= 0.4f;
                    Main.gore[index5].velocity.X += (float)Main.rand.Next(-10, 11) * 0.1f;
                    Main.gore[index5].velocity.Y += (float)Main.rand.Next(-10, 11) * 0.1f;
                    if (this.owner == Main.myPlayer)
                    {
                        this.penetrate = -1;
                        this.position.X += (float)(this.width / 2);
                        this.position.Y += (float)(this.height / 2);
                        this.width = 64;
                        this.height = 64;
                        this.position.X -= (float)(this.width / 2);
                        this.position.Y -= (float)(this.height / 2);
                        this.Damage();
                    }
                }
                else if (this.type == 514)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.3f);
                        Main.dust[index2].velocity *= 1.4f;
                    }
                    for (int index1 = 0; index1 < 6; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2.1f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 4.6f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1.3f);
                        Main.dust[index3].velocity *= 3.3f;
                        if (Main.rand.Next(2) == 0)
                        {
                            int index4 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1.1f);
                            Main.dust[index4].velocity *= 2.7f;
                        }
                    }
                    if (this.owner == Main.myPlayer)
                    {
                        this.penetrate = -1;
                        this.position.X += (float)(this.width / 2);
                        this.position.Y += (float)(this.height / 2);
                        this.width = 112;
                        this.height = 112;
                        this.position.X -= (float)(this.width / 2);
                        this.position.Y -= (float)(this.height / 2);
                        this.ai[0] = 2f;
                        this.Damage();
                    }
                }
                else if (this.type == 306)
                {
                    Main.PlaySound(3, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 184, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].scale *= 1.1f;
                        Main.dust[index2].noGravity = true;
                    }
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 184, 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].velocity *= 2.5f;
                        Main.dust[index2].scale *= 0.8f;
                        Main.dust[index2].noGravity = true;
                    }
                    if (this.owner == Main.myPlayer)
                    {
                        int num2 = 2;
                        if (Main.rand.Next(10) == 0)
                            ++num2;
                        if (Main.rand.Next(10) == 0)
                            ++num2;
                        if (Main.rand.Next(10) == 0)
                            ++num2;
                        for (int index = 0; index < num2; ++index)
                            Projectile.NewProjectile(this.position.X, this.position.Y, (float)Main.rand.Next(-35, 36) * 0.02f * 10f, (float)Main.rand.Next(-35, 36) * 0.02f * 10f, 307, (int)((double)this.damage * 0.7), (float)(int)((double)this.knockBack * 0.35), Main.myPlayer, 0.0f, 0.0f);
                    }
                }
                else if (this.type == 469)
                {
                    if (this.owner == Main.myPlayer)
                    {
                        int num2 = 6;
                        for (int index1 = 0; index1 < num2; ++index1)
                        {
                            if (index1 % 2 != 1 || Main.rand.Next(3) == 0)
                            {
                                Vector2 vector2_1 = this.position;
                                Vector2 vector2_2 = this.oldVelocity;
                                vector2_2.Normalize();
                                vector2_2 *= 8f;
                                float num3 = (float)Main.rand.Next(-35, 36) * 0.01f;
                                float num4 = (float)Main.rand.Next(-35, 36) * 0.01f;
                                Vector2 vector2_3 = vector2_1 - vector2_2 * (float)index1;
                                float SpeedX = num3 + this.oldVelocity.X / 6f;
                                float SpeedY = num4 + this.oldVelocity.Y / 6f;
                                int index2 = Projectile.NewProjectile(vector2_3.X, vector2_3.Y, SpeedX, SpeedY, Main.player[this.owner].beeType(), Main.player[this.owner].beeDamage(this.damage / 3), Main.player[this.owner].beeKB(0.0f), Main.myPlayer, 0.0f, 0.0f);
                                Main.projectile[index2].magic = false;
                                Main.projectile[index2].ranged = true;
                                Main.projectile[index2].penetrate = 2;
                            }
                        }
                    }
                }
                else if (this.type == 183)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index2].velocity *= 1f;
                    }
                    int index3 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    ++Main.gore[index3].velocity.X;
                    ++Main.gore[index3].velocity.Y;
                    Main.gore[index3].velocity *= 0.3f;
                    int index4 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    --Main.gore[index4].velocity.X;
                    ++Main.gore[index4].velocity.Y;
                    Main.gore[index4].velocity *= 0.3f;
                    int index5 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    ++Main.gore[index5].velocity.X;
                    --Main.gore[index5].velocity.Y;
                    Main.gore[index5].velocity *= 0.3f;
                    int index6 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    --Main.gore[index6].velocity.X;
                    --Main.gore[index6].velocity.Y;
                    Main.gore[index6].velocity *= 0.3f;
                    if (this.owner == Main.myPlayer)
                    {
                        int num2 = Main.rand.Next(15, 25);
                        for (int index1 = 0; index1 < num2; ++index1)
                            Projectile.NewProjectile(this.position.X, this.position.Y, (float)Main.rand.Next(-35, 36) * 0.02f, (float)Main.rand.Next(-35, 36) * 0.02f, Main.player[this.owner].beeType(), Main.player[this.owner].beeDamage(this.damage), Main.player[this.owner].beeKB(0.0f), Main.myPlayer, 0.0f, 0.0f);
                    }
                }
                else if (this.aiStyle == 34)
                {
                    if (this.owner != Main.myPlayer)
                        this.timeLeft = 60;
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    if (this.type == 167)
                    {
                        for (int index1 = 0; index1 < 400; ++index1)
                        {
                            float num2 = 16f;
                            if (index1 < 300)
                                num2 = 12f;
                            if (index1 < 200)
                                num2 = 8f;
                            if (index1 < 100)
                                num2 = 4f;
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, 130, 0.0f, 0.0f, 100, new Color(), 1f);
                            float num3 = Main.dust[index2].velocity.X;
                            float num4 = Main.dust[index2].velocity.Y;
                            if ((double)num3 == 0.0 && (double)num4 == 0.0)
                                num3 = 1f;
                            float num5 = (float)Math.Sqrt((double)num3 * (double)num3 + (double)num4 * (double)num4);
                            float num6 = num2 / num5;
                            float num7 = num3 * num6;
                            float num8 = num4 * num6;
                            Main.dust[index2].velocity *= 0.5f;
                            Main.dust[index2].velocity.X += num7;
                            Main.dust[index2].velocity.Y += num8;
                            Main.dust[index2].scale = 1.3f;
                            Main.dust[index2].noGravity = true;
                        }
                    }
                    if (this.type == 168)
                    {
                        for (int index1 = 0; index1 < 400; ++index1)
                        {
                            float num2 = (float)(2.0 * ((double)index1 / 100.0));
                            if (index1 > 100)
                                num2 = 10f;
                            if (index1 > 250)
                                num2 = 13f;
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, 131, 0.0f, 0.0f, 100, new Color(), 1f);
                            float num3 = Main.dust[index2].velocity.X;
                            float num4 = Main.dust[index2].velocity.Y;
                            if ((double)num3 == 0.0 && (double)num4 == 0.0)
                                num3 = 1f;
                            float num5 = (float)Math.Sqrt((double)num3 * (double)num3 + (double)num4 * (double)num4);
                            float num6 = num2 / num5;
                            float num7;
                            float num8;
                            if (index1 <= 200)
                            {
                                num7 = num3 * num6;
                                num8 = num4 * num6;
                            }
                            else
                            {
                                num7 = (float)((double)num3 * (double)num6 * 1.25);
                                num8 = (float)((double)num4 * (double)num6 * 0.75);
                            }
                            Main.dust[index2].velocity *= 0.5f;
                            Main.dust[index2].velocity.X += num7;
                            Main.dust[index2].velocity.Y += num8;
                            if (index1 > 100)
                            {
                                Main.dust[index2].scale = 1.3f;
                                Main.dust[index2].noGravity = true;
                            }
                        }
                    }
                    if (this.type == 169)
                    {
                        Vector2 spinningpoint = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f);
                        float num2 = (float)Main.rand.Next(5, 9);
                        float num3 = (float)Main.rand.Next(12, 17);
                        float num4 = (float)Main.rand.Next(3, 7);
                        float num5 = 20f;
                        for (float num6 = 0.0f; (double)num6 < (double)num2; ++num6)
                        {
                            for (int index1 = 0; index1 < 2; ++index1)
                            {
                                Vector2 vector2_1 = Utils.RotatedBy(spinningpoint, (index1 == 0 ? 1.0 : -1.0) * 6.28318548202515 / ((double)num2 * 2.0), new Vector2());
                                for (float num7 = 0.0f; (double)num7 < (double)num5; ++num7)
                                {
                                    Vector2 vector2_2 = Vector2.Lerp(spinningpoint, vector2_1, num7 / num5);
                                    float num8 = MathHelper.Lerp(num3, num4, num7 / num5);
                                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, 133, 0.0f, 0.0f, 100, new Color(), 1.3f);
                                    Main.dust[index2].velocity *= 0.1f;
                                    Main.dust[index2].noGravity = true;
                                    Main.dust[index2].velocity += vector2_2 * num8;
                                }
                            }
                            spinningpoint = Utils.RotatedBy(spinningpoint, 6.28318548202515 / (double)num2, new Vector2());
                        }
                        for (float num6 = 0.0f; (double)num6 < (double)num2; ++num6)
                        {
                            for (int index1 = 0; index1 < 2; ++index1)
                            {
                                Vector2 vector2_1 = Utils.RotatedBy(spinningpoint, (index1 == 0 ? 1.0 : -1.0) * 6.28318548202515 / ((double)num2 * 2.0), new Vector2());
                                for (float num7 = 0.0f; (double)num7 < (double)num5; ++num7)
                                {
                                    Vector2 vector2_2 = Vector2.Lerp(spinningpoint, vector2_1, num7 / num5);
                                    float num8 = MathHelper.Lerp(num3, num4, num7 / num5) / 2f;
                                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, 133, 0.0f, 0.0f, 100, new Color(), 1.3f);
                                    Main.dust[index2].velocity *= 0.1f;
                                    Main.dust[index2].noGravity = true;
                                    Main.dust[index2].velocity += vector2_2 * num8;
                                }
                            }
                            spinningpoint = Utils.RotatedBy(spinningpoint, 6.28318548202515 / (double)num2, new Vector2());
                        }
                        for (int index1 = 0; index1 < 100; ++index1)
                        {
                            float num6 = num3;
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, 132, 0.0f, 0.0f, 100, new Color(), 1f);
                            float num7 = Main.dust[index2].velocity.X;
                            float num8 = Main.dust[index2].velocity.Y;
                            if ((double)num7 == 0.0 && (double)num8 == 0.0)
                                num7 = 1f;
                            float num9 = (float)Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8);
                            float num10 = num6 / num9;
                            float num11 = num7 * num10;
                            float num12 = num8 * num10;
                            Main.dust[index2].velocity *= 0.5f;
                            Main.dust[index2].velocity.X += num11;
                            Main.dust[index2].velocity.Y += num12;
                            Main.dust[index2].scale = 1.3f;
                            Main.dust[index2].noGravity = true;
                        }
                    }
                    if (this.type == 170)
                    {
                        for (int index1 = 0; index1 < 400; ++index1)
                        {
                            int Type = 133;
                            float num2 = 16f;
                            if (index1 > 100)
                                num2 = 11f;
                            if (index1 > 100)
                                Type = 134;
                            if (index1 > 200)
                                num2 = 8f;
                            if (index1 > 200)
                                Type = 133;
                            if (index1 > 300)
                                num2 = 5f;
                            if (index1 > 300)
                                Type = 134;
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, Type, 0.0f, 0.0f, 100, new Color(), 1f);
                            float num3 = Main.dust[index2].velocity.X;
                            float num4 = Main.dust[index2].velocity.Y;
                            if ((double)num3 == 0.0 && (double)num4 == 0.0)
                                num3 = 1f;
                            float num5 = (float)Math.Sqrt((double)num3 * (double)num3 + (double)num4 * (double)num4);
                            float num6 = num2 / num5;
                            float num7;
                            float num8;
                            if (index1 > 300)
                            {
                                num7 = (float)((double)num3 * (double)num6 * 0.699999988079071);
                                num8 = num4 * num6;
                            }
                            else if (index1 > 200)
                            {
                                num7 = num3 * num6;
                                num8 = (float)((double)num4 * (double)num6 * 0.699999988079071);
                            }
                            else if (index1 > 100)
                            {
                                num7 = (float)((double)num3 * (double)num6 * 0.699999988079071);
                                num8 = num4 * num6;
                            }
                            else
                            {
                                num7 = num3 * num6;
                                num8 = (float)((double)num4 * (double)num6 * 0.699999988079071);
                            }
                            Main.dust[index2].velocity *= 0.5f;
                            Main.dust[index2].velocity.X += num7;
                            Main.dust[index2].velocity.Y += num8;
                            if (Main.rand.Next(3) != 0)
                            {
                                Main.dust[index2].scale = 1.3f;
                                Main.dust[index2].noGravity = true;
                            }
                        }
                    }
                    if (this.type == 415)
                    {
                        Vector2 spinningpoint = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f);
                        float num2 = (float)Main.rand.Next(5, 9);
                        float num3 = (float)Main.rand.Next(10, 15) * 0.66f;
                        float num4 = (float)Main.rand.Next(4, 7) / 2f;
                        int num5 = 30;
                        for (int index1 = 0; (double)index1 < (double)num5 * (double)num2; ++index1)
                        {
                            if (index1 % num5 == 0)
                                spinningpoint = Utils.RotatedBy(spinningpoint, 6.28318548202515 / (double)num2, new Vector2());
                            float num6 = MathHelper.Lerp(num4, num3, (float)(index1 % num5) / (float)num5);
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, 130, 0.0f, 0.0f, 100, new Color(), 1f);
                            Main.dust[index2].velocity *= 0.1f;
                            Main.dust[index2].velocity += spinningpoint * num6;
                            Main.dust[index2].scale = 1.3f;
                            Main.dust[index2].noGravity = true;
                        }
                        for (int index1 = 0; index1 < 100; ++index1)
                        {
                            float num6 = num3;
                            if (index1 < 30)
                                num6 = (float)(((double)num4 + (double)num3) / 2.0);
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, 130, 0.0f, 0.0f, 100, new Color(), 1f);
                            float num7 = Main.dust[index2].velocity.X;
                            float num8 = Main.dust[index2].velocity.Y;
                            if ((double)num7 == 0.0 && (double)num8 == 0.0)
                                num7 = 1f;
                            float num9 = (float)Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8);
                            float num10 = num6 / num9;
                            float num11 = num7 * num10;
                            float num12 = num8 * num10;
                            Main.dust[index2].velocity *= 0.5f;
                            Main.dust[index2].velocity.X += num11;
                            Main.dust[index2].velocity.Y += num12;
                            Main.dust[index2].scale = 1.3f;
                            Main.dust[index2].noGravity = true;
                        }
                    }
                    if (this.type == 416)
                    {
                        Vector2 spinningpoint1 = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f);
                        Vector2 spinningpoint2 = spinningpoint1;
                        float num2 = (float)(Main.rand.Next(3, 6) * 2);
                        int num3 = 20;
                        float num4 = Main.rand.Next(2) == 0 ? 1f : -1f;
                        bool flag = true;
                        for (int index1 = 0; (double)index1 < (double)num3 * (double)num2; ++index1)
                        {
                            if (index1 % num3 == 0)
                            {
                                spinningpoint2 = Utils.RotatedBy(spinningpoint2, (double)num4 * (6.28318548202515 / (double)num2), new Vector2());
                                spinningpoint1 = spinningpoint2;
                                flag = !flag;
                            }
                            else
                            {
                                float num5 = 6.283185f / ((float)num3 * num2);
                                spinningpoint1 = Utils.RotatedBy(spinningpoint1, (double)num5 * (double)num4 * 3.0, new Vector2());
                            }
                            float num6 = MathHelper.Lerp(1f, 8f, (float)(index1 % num3) / (float)num3);
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, 131, 0.0f, 0.0f, 100, new Color(), 1.4f);
                            Main.dust[index2].velocity *= 0.1f;
                            Main.dust[index2].velocity += spinningpoint1 * num6;
                            if (flag)
                                Main.dust[index2].scale = 0.9f;
                            Main.dust[index2].noGravity = true;
                        }
                    }
                    if (this.type == 417)
                    {
                        float num2 = (float)Main.rand.NextDouble() * 6.283185f;
                        float num3 = (float)Main.rand.NextDouble() * 6.283185f;
                        float num4 = (float)(4.0 + Main.rand.NextDouble() * 3.0);
                        float num5 = (float)(4.0 + Main.rand.NextDouble() * 3.0);
                        float num6 = num4;
                        if ((double)num5 > (double)num6)
                            num6 = num5;
                        for (int index1 = 0; index1 < 150; ++index1)
                        {
                            int Type = 132;
                            float num7 = num6;
                            if (index1 > 50)
                                num7 = num5;
                            if (index1 > 50)
                                Type = 133;
                            if (index1 > 100)
                                num7 = num4;
                            if (index1 > 100)
                                Type = 132;
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, Type, 0.0f, 0.0f, 100, new Color(), 1f);
                            Vector2 vector2 = Main.dust[index2].velocity;
                            vector2.Normalize();
                            Vector2 spinningpoint = vector2 * num7;
                            if (index1 > 100)
                            {
                                spinningpoint.X *= 0.5f;
                                spinningpoint = Utils.RotatedBy(spinningpoint, (double)num2, new Vector2());
                            }
                            else if (index1 > 50)
                            {
                                spinningpoint.Y *= 0.5f;
                                spinningpoint = Utils.RotatedBy(spinningpoint, (double)num3, new Vector2());
                            }
                            Main.dust[index2].velocity *= 0.2f;
                            Main.dust[index2].velocity += spinningpoint;
                            if (index1 <= 200)
                            {
                                Main.dust[index2].scale = 1.3f;
                                Main.dust[index2].noGravity = true;
                            }
                        }
                    }
                    if (this.type == 418)
                    {
                        Vector2 spinningpoint = Utils.ToRotationVector2((float)Main.rand.NextDouble() * 6.283185f);
                        float num2 = (float)Main.rand.Next(5, 12);
                        float num3 = (float)Main.rand.Next(9, 14) * 0.66f;
                        float num4 = (float)Main.rand.Next(2, 4) * 0.66f;
                        float num5 = 15f;
                        for (float num6 = 0.0f; (double)num6 < (double)num2; ++num6)
                        {
                            for (int index1 = 0; index1 < 2; ++index1)
                            {
                                Vector2 vector2_1 = Utils.RotatedBy(spinningpoint, (index1 == 0 ? 1.0 : -1.0) * 6.28318548202515 / ((double)num2 * 2.0), new Vector2());
                                for (float num7 = 0.0f; (double)num7 < (double)num5; ++num7)
                                {
                                    Vector2 vector2_2 = Vector2.SmoothStep(spinningpoint, vector2_1, num7 / num5);
                                    float num8 = MathHelper.SmoothStep(num3, num4, num7 / num5);
                                    int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, 134, 0.0f, 0.0f, 100, new Color(), 1.3f);
                                    Main.dust[index2].velocity *= 0.1f;
                                    Main.dust[index2].noGravity = true;
                                    Main.dust[index2].velocity += vector2_2 * num8;
                                }
                            }
                            spinningpoint = Utils.RotatedBy(spinningpoint, 6.28318548202515 / (double)num2, new Vector2());
                        }
                        for (int index1 = 0; index1 < 120; ++index1)
                        {
                            float num6 = num3;
                            int Type = 133;
                            if (index1 < 80)
                                num6 = num4 - 0.5f;
                            else
                                Type = 131;
                            int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), 6, 6, Type, 0.0f, 0.0f, 100, new Color(), 1f);
                            float num7 = Main.dust[index2].velocity.X;
                            float num8 = Main.dust[index2].velocity.Y;
                            if ((double)num7 == 0.0 && (double)num8 == 0.0)
                                num7 = 1f;
                            float num9 = (float)Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8);
                            float num10 = num6 / num9;
                            float num11 = num7 * num10;
                            float num12 = num8 * num10;
                            Main.dust[index2].velocity *= 0.2f;
                            Main.dust[index2].velocity.X += num11;
                            Main.dust[index2].velocity.Y += num12;
                            Main.dust[index2].scale = 1.3f;
                            Main.dust[index2].noGravity = true;
                        }
                    }
                    this.position.X += (float)(this.width / 2);
                    this.position.Y += (float)(this.height / 2);
                    this.width = 192;
                    this.height = 192;
                    this.position.X -= (float)(this.width / 2);
                    this.position.Y -= (float)(this.height / 2);
                    this.penetrate = -1;
                    this.Damage();
                }
                else if (this.type == 312)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    this.position.X += (float)(this.width / 2);
                    this.position.Y += (float)(this.height / 2);
                    this.width = 22;
                    this.height = 22;
                    this.position.X -= (float)(this.width / 2);
                    this.position.Y -= (float)(this.height / 2);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index2].velocity *= 1.4f;
                    }
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 3.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 7f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 3f;
                    }
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        float num2 = 0.4f;
                        if (index1 == 1)
                            num2 = 0.8f;
                        int index2 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index2].velocity *= num2;
                        ++Main.gore[index2].velocity.X;
                        ++Main.gore[index2].velocity.Y;
                        int index3 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index3].velocity *= num2;
                        --Main.gore[index3].velocity.X;
                        ++Main.gore[index3].velocity.Y;
                        int index4 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index4].velocity *= num2;
                        ++Main.gore[index4].velocity.X;
                        --Main.gore[index4].velocity.Y;
                        int index5 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index5].velocity *= num2;
                        --Main.gore[index5].velocity.X;
                        --Main.gore[index5].velocity.Y;
                    }
                    this.position.X += (float)(this.width / 2);
                    this.position.Y += (float)(this.height / 2);
                    this.width = 128;
                    this.height = 128;
                    this.position.X -= (float)(this.width / 2);
                    this.position.Y -= (float)(this.height / 2);
                    this.Damage();
                }
                else if (this.type == 133 || this.type == 134 || (this.type == 135 || this.type == 136) || (this.type == 137 || this.type == 138 || (this.type == 303 || this.type == 338)) || this.type == 339)
                {
                    if (this.type == 30 || this.type == 133 || (this.type == 136 || this.type == 139))
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 62);
                    else
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    this.position.X += (float)(this.width / 2);
                    this.position.Y += (float)(this.height / 2);
                    this.width = 22;
                    this.height = 22;
                    this.position.X -= (float)(this.width / 2);
                    this.position.Y -= (float)(this.height / 2);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index2].velocity *= 1.4f;
                    }
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 3.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 7f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 3f;
                    }
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        float num2 = 0.4f;
                        if (index1 == 1)
                            num2 = 0.8f;
                        int index2 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index2].velocity *= num2;
                        ++Main.gore[index2].velocity.X;
                        ++Main.gore[index2].velocity.Y;
                        int index3 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index3].velocity *= num2;
                        --Main.gore[index3].velocity.X;
                        ++Main.gore[index3].velocity.Y;
                        int index4 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index4].velocity *= num2;
                        ++Main.gore[index4].velocity.X;
                        --Main.gore[index4].velocity.Y;
                        int index5 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index5].velocity *= num2;
                        --Main.gore[index5].velocity.X;
                        --Main.gore[index5].velocity.Y;
                    }
                }
                else if (this.type == 139 || this.type == 140 || (this.type == 141 || this.type == 142) || (this.type == 143 || this.type == 144 || (this.type == 340 || this.type == 341)))
                {
                    if (this.type == 30 || this.type == 133 || (this.type == 136 || this.type == 139))
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 62);
                    else
                        Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    this.position.X += (float)(this.width / 2);
                    this.position.Y += (float)(this.height / 2);
                    this.width = 80;
                    this.height = 80;
                    this.position.X -= (float)(this.width / 2);
                    this.position.Y -= (float)(this.height / 2);
                    for (int index1 = 0; index1 < 40; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 2f);
                        Main.dust[index2].velocity *= 3f;
                        if (Main.rand.Next(2) == 0)
                        {
                            Main.dust[index2].scale = 0.5f;
                            Main.dust[index2].fadeIn = (float)(1.0 + (double)Main.rand.Next(10) * 0.100000001490116);
                        }
                    }
                    for (int index1 = 0; index1 < 70; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 3f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 5f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2f);
                        Main.dust[index3].velocity *= 2f;
                    }
                    for (int index1 = 0; index1 < 3; ++index1)
                    {
                        float num2 = 0.33f;
                        if (index1 == 1)
                            num2 = 0.66f;
                        if (index1 == 2)
                            num2 = 1f;
                        int index2 = Gore.NewGore(new Vector2((float)((double)this.position.X + (double)(this.width / 2) - 24.0), (float)((double)this.position.Y + (double)(this.height / 2) - 24.0)), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index2].velocity *= num2;
                        ++Main.gore[index2].velocity.X;
                        ++Main.gore[index2].velocity.Y;
                        int index3 = Gore.NewGore(new Vector2((float)((double)this.position.X + (double)(this.width / 2) - 24.0), (float)((double)this.position.Y + (double)(this.height / 2) - 24.0)), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index3].velocity *= num2;
                        --Main.gore[index3].velocity.X;
                        ++Main.gore[index3].velocity.Y;
                        int index4 = Gore.NewGore(new Vector2((float)((double)this.position.X + (double)(this.width / 2) - 24.0), (float)((double)this.position.Y + (double)(this.height / 2) - 24.0)), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index4].velocity *= num2;
                        ++Main.gore[index4].velocity.X;
                        --Main.gore[index4].velocity.Y;
                        int index5 = Gore.NewGore(new Vector2((float)((double)this.position.X + (double)(this.width / 2) - 24.0), (float)((double)this.position.Y + (double)(this.height / 2) - 24.0)), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index5].velocity *= num2;
                        --Main.gore[index5].velocity.X;
                        --Main.gore[index5].velocity.Y;
                    }
                    this.position.X += (float)(this.width / 2);
                    this.position.Y += (float)(this.height / 2);
                    this.width = 10;
                    this.height = 10;
                    this.position.X -= (float)(this.width / 2);
                    this.position.Y -= (float)(this.height / 2);
                }
                else if (this.type == 246)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index2].velocity *= 0.9f;
                    }
                    for (int index1 = 0; index1 < 5; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 3f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 2f;
                    }
                    int index4 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index4].velocity *= 0.3f;
                    Main.gore[index4].velocity.X += (float)Main.rand.Next(-1, 2);
                    Main.gore[index4].velocity.Y += (float)Main.rand.Next(-1, 2);
                    this.position.X += (float)(this.width / 2);
                    this.position.Y += (float)(this.height / 2);
                    this.width = 150;
                    this.height = 150;
                    this.position.X -= (float)(this.width / 2);
                    this.position.Y -= (float)(this.height / 2);
                    this.penetrate = -1;
                    this.maxPenetrate = 0;
                    this.Damage();
                    if (this.owner == Main.myPlayer)
                    {
                        int num2 = Main.rand.Next(2, 6);
                        for (int index1 = 0; index1 < num2; ++index1)
                        {
                            float num3 = (float)Main.rand.Next(-100, 101) + 0.01f;
                            float num4 = (float)Main.rand.Next(-100, 101);
                            float num5 = num3 - 0.01f;
                            float num6 = 8f / (float)Math.Sqrt((double)num5 * (double)num5 + (double)num4 * (double)num4);
                            int index2 = Projectile.NewProjectile(this.Center.X - this.oldVelocity.X, this.Center.Y - this.oldVelocity.Y, num5 * num6, num4 * num6, 249, this.damage, this.knockBack, this.owner, 0.0f, 0.0f);
                            Main.projectile[index2].maxPenetrate = 0;
                        }
                    }
                }
                else if (this.type == 249)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    for (int index1 = 0; index1 < 7; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index2].velocity *= 0.8f;
                    }
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 2.5f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 1.5f;
                    }
                    int index = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index].velocity *= 0.2f;
                    Main.gore[index].velocity.X += (float)Main.rand.Next(-1, 2);
                    Main.gore[index].velocity.Y += (float)Main.rand.Next(-1, 2);
                    this.position.X += (float)(this.width / 2);
                    this.position.Y += (float)(this.height / 2);
                    this.width = 100;
                    this.height = 100;
                    this.position.X -= (float)(this.width / 2);
                    this.position.Y -= (float)(this.height / 2);
                    this.penetrate = -1;
                    this.Damage();
                }
                else if (this.type == 588)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    this.position = this.Center;
                    this.width = this.height = 22;
                    this.Center = this.position;
                    for (int index1 = 0; index1 < 8; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 219 + Main.rand.Next(5), 0.0f, 0.0f, 0, new Color(), 1f);
                        Main.dust[index2].velocity *= 1.4f;
                        Main.dust[index2].fadeIn = 1f;
                        Main.dust[index2].noGravity = true;
                    }
                    for (int index1 = 0; index1 < 15; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 139 + Main.rand.Next(4), 0.0f, 0.0f, 0, new Color(), 1.6f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 5f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 139 + Main.rand.Next(4), 0.0f, 0.0f, 0, new Color(), 1.9f);
                        Main.dust[index3].velocity *= 3f;
                    }
                    if (Main.rand.Next(2) == 0)
                    {
                        int index = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(276, 283), 1f);
                        Main.gore[index].velocity *= 0.4f;
                        ++Main.gore[index].velocity.X;
                        ++Main.gore[index].velocity.Y;
                    }
                    if (Main.rand.Next(2) == 0)
                    {
                        int index = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(276, 283), 1f);
                        Main.gore[index].velocity *= 0.4f;
                        --Main.gore[index].velocity.X;
                        ++Main.gore[index].velocity.Y;
                    }
                    if (Main.rand.Next(2) == 0)
                    {
                        int index = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(276, 283), 1f);
                        Main.gore[index].velocity *= 0.4f;
                        ++Main.gore[index].velocity.X;
                        --Main.gore[index].velocity.Y;
                    }
                    if (Main.rand.Next(2) == 0)
                    {
                        int index = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(276, 283), 1f);
                        Main.gore[index].velocity *= 0.4f;
                        --Main.gore[index].velocity.X;
                        --Main.gore[index].velocity.Y;
                    }
                }
                else if (this.type == 28 || this.type == 30 || (this.type == 37 || this.type == 75) || (this.type == 102 || this.type == 164 || (this.type == 397 || this.type == 517)) || (this.type == 516 || this.type == 519))
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    this.position.X += (float)(this.width / 2);
                    this.position.Y += (float)(this.height / 2);
                    this.width = 22;
                    this.height = 22;
                    this.position.X -= (float)(this.width / 2);
                    this.position.Y -= (float)(this.height / 2);
                    for (int index1 = 0; index1 < 20; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index2].velocity *= 1.4f;
                    }
                    for (int index1 = 0; index1 < 10; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2.5f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 5f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 1.5f);
                        Main.dust[index3].velocity *= 3f;
                    }
                    int index4 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index4].velocity *= 0.4f;
                    ++Main.gore[index4].velocity.X;
                    ++Main.gore[index4].velocity.Y;
                    int index5 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index5].velocity *= 0.4f;
                    --Main.gore[index5].velocity.X;
                    ++Main.gore[index5].velocity.Y;
                    int index6 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index6].velocity *= 0.4f;
                    ++Main.gore[index6].velocity.X;
                    --Main.gore[index6].velocity.Y;
                    int index7 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(61, 64), 1f);
                    Main.gore[index7].velocity *= 0.4f;
                    --Main.gore[index7].velocity.X;
                    --Main.gore[index7].velocity.Y;
                    if (this.type == 102)
                    {
                        this.position.X += (float)(this.width / 2);
                        this.position.Y += (float)(this.height / 2);
                        this.width = 128;
                        this.height = 128;
                        this.position.X -= (float)(this.width / 2);
                        this.position.Y -= (float)(this.height / 2);
                        this.damage = 40;
                        this.Damage();
                    }
                }
                else if (this.type == 29 || this.type == 108 || (this.type == 470 || this.type == 637))
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 14);
                    if (this.type == 29)
                    {
                        this.position.X += (float)(this.width / 2);
                        this.position.Y += (float)(this.height / 2);
                        this.width = 200;
                        this.height = 200;
                        this.position.X -= (float)(this.width / 2);
                        this.position.Y -= (float)(this.height / 2);
                    }
                    for (int index1 = 0; index1 < 50; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 31, 0.0f, 0.0f, 100, new Color(), 2f);
                        Main.dust[index2].velocity *= 1.4f;
                    }
                    for (int index1 = 0; index1 < 80; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 3f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 5f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0.0f, 0.0f, 100, new Color(), 2f);
                        Main.dust[index3].velocity *= 3f;
                    }
                    for (int index1 = 0; index1 < 2; ++index1)
                    {
                        int index2 = Gore.NewGore(new Vector2((float)((double)this.position.X + (double)(this.width / 2) - 24.0), (float)((double)this.position.Y + (double)(this.height / 2) - 24.0)), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index2].scale = 1.5f;
                        Main.gore[index2].velocity.X += 1.5f;
                        Main.gore[index2].velocity.Y += 1.5f;
                        int index3 = Gore.NewGore(new Vector2((float)((double)this.position.X + (double)(this.width / 2) - 24.0), (float)((double)this.position.Y + (double)(this.height / 2) - 24.0)), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index3].scale = 1.5f;
                        Main.gore[index3].velocity.X -= 1.5f;
                        Main.gore[index3].velocity.Y += 1.5f;
                        int index4 = Gore.NewGore(new Vector2((float)((double)this.position.X + (double)(this.width / 2) - 24.0), (float)((double)this.position.Y + (double)(this.height / 2) - 24.0)), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index4].scale = 1.5f;
                        Main.gore[index4].velocity.X += 1.5f;
                        Main.gore[index4].velocity.Y -= 1.5f;
                        int index5 = Gore.NewGore(new Vector2((float)((double)this.position.X + (double)(this.width / 2) - 24.0), (float)((double)this.position.Y + (double)(this.height / 2) - 24.0)), new Vector2(), Main.rand.Next(61, 64), 1f);
                        Main.gore[index5].scale = 1.5f;
                        Main.gore[index5].velocity.X -= 1.5f;
                        Main.gore[index5].velocity.Y -= 1.5f;
                    }
                    this.position.X += (float)(this.width / 2);
                    this.position.Y += (float)(this.height / 2);
                    this.width = 10;
                    this.height = 10;
                    this.position.X -= (float)(this.width / 2);
                    this.position.Y -= (float)(this.height / 2);
                }
                else if (this.type == 69)
                {
                    Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index = 0; index < 5; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 13, 0.0f, 0.0f, 0, new Color(), 1f);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 33, 0.0f, -2f, 0, new Color(), 1.1f);
                        Main.dust[index2].alpha = 100;
                        Main.dust[index2].velocity.X *= 1.5f;
                        Main.dust[index2].velocity *= 3f;
                    }
                }
                else if (this.type == 70)
                {
                    Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index = 0; index < 5; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 13, 0.0f, 0.0f, 0, new Color(), 1f);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 52, 0.0f, -2f, 0, new Color(), 1.1f);
                        Main.dust[index2].alpha = 100;
                        Main.dust[index2].velocity.X *= 1.5f;
                        Main.dust[index2].velocity *= 3f;
                    }
                }
                else if (this.type == 621)
                {
                    Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1);
                    for (int index = 0; index < 5; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 13, 0.0f, 0.0f, 0, new Color(), 1f);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        int index2 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 266, 0.0f, -2f, 0, new Color(), 1.1f);
                        Main.dust[index2].alpha = 100;
                        Main.dust[index2].velocity.X *= 1.5f;
                        Main.dust[index2].velocity *= 3f;
                    }
                }
                else if (this.type == 114 || this.type == 115)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    for (int index1 = 4; index1 < 31; ++index1)
                    {
                        float num2 = this.oldVelocity.X * (30f / (float)index1);
                        float num3 = this.oldVelocity.Y * (30f / (float)index1);
                        int index2 = Dust.NewDust(new Vector2(this.position.X - num2, this.position.Y - num3), 8, 8, 27, this.oldVelocity.X, this.oldVelocity.Y, 100, new Color(), 1.4f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 0.5f;
                        int index3 = Dust.NewDust(new Vector2(this.position.X - num2, this.position.Y - num3), 8, 8, 27, this.oldVelocity.X, this.oldVelocity.Y, 100, new Color(), 0.9f);
                        Main.dust[index3].velocity *= 0.5f;
                    }
                }
                else if (this.type == 116)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    for (int index1 = 4; index1 < 31; ++index1)
                    {
                        float num2 = this.oldVelocity.X * (30f / (float)index1);
                        float num3 = this.oldVelocity.Y * (30f / (float)index1);
                        int index2 = Dust.NewDust(new Vector2(this.position.X - num2, this.position.Y - num3), 8, 8, 64, this.oldVelocity.X, this.oldVelocity.Y, 100, new Color(), 1.8f);
                        Main.dust[index2].noGravity = true;
                        int index3 = Dust.NewDust(new Vector2(this.position.X - num2, this.position.Y - num3), 8, 8, 64, this.oldVelocity.X, this.oldVelocity.Y, 100, new Color(), 1.4f);
                        Main.dust[index3].noGravity = true;
                    }
                }
                else if (this.type == 173)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    for (int index1 = 4; index1 < 24; ++index1)
                    {
                        float num2 = this.oldVelocity.X * (30f / (float)index1);
                        float num3 = this.oldVelocity.Y * (30f / (float)index1);
                        int Type;
                        switch (Main.rand.Next(3))
                        {
                            case 0:
                                Type = 15;
                                break;
                            case 1:
                                Type = 57;
                                break;
                            default:
                                Type = 58;
                                break;
                        }
                        int index2 = Dust.NewDust(new Vector2(this.position.X - num2, this.position.Y - num3), 8, 8, Type, this.oldVelocity.X * 0.2f, this.oldVelocity.Y * 0.2f, 100, new Color(), 1.8f);
                        Main.dust[index2].velocity *= 1.5f;
                        Main.dust[index2].noGravity = true;
                    }
                }
                else if (this.type == 132)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    for (int index1 = 4; index1 < 31; ++index1)
                    {
                        float num2 = this.oldVelocity.X * (30f / (float)index1);
                        float num3 = this.oldVelocity.Y * (30f / (float)index1);
                        int index2 = Dust.NewDust(new Vector2(this.oldPosition.X - num2, this.oldPosition.Y - num3), 8, 8, 107, this.oldVelocity.X, this.oldVelocity.Y, 100, new Color(), 1.8f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 0.5f;
                        int index3 = Dust.NewDust(new Vector2(this.oldPosition.X - num2, this.oldPosition.Y - num3), 8, 8, 107, this.oldVelocity.X, this.oldVelocity.Y, 100, new Color(), 1.4f);
                        Main.dust[index3].velocity *= 0.05f;
                    }
                }
                else if (this.type == 156)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    for (int index1 = 4; index1 < 31; ++index1)
                    {
                        float num2 = this.oldVelocity.X * (30f / (float)index1);
                        float num3 = this.oldVelocity.Y * (30f / (float)index1);
                        int index2 = Dust.NewDust(new Vector2(this.oldPosition.X - num2, this.oldPosition.Y - num3), 8, 8, 73, this.oldVelocity.X, this.oldVelocity.Y, (int)byte.MaxValue, new Color(), 1.8f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 0.5f;
                        int index3 = Dust.NewDust(new Vector2(this.oldPosition.X - num2, this.oldPosition.Y - num3), 8, 8, 73, this.oldVelocity.X, this.oldVelocity.Y, (int)byte.MaxValue, new Color(), 1.4f);
                        Main.dust[index3].velocity *= 0.05f;
                        Main.dust[index3].noGravity = true;
                    }
                }
                else if (this.type == 157)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 10);
                    for (int index1 = 4; index1 < 31; ++index1)
                    {
                        int index2 = Dust.NewDust(this.position, this.width, this.height, 107, this.oldVelocity.X, this.oldVelocity.Y, 100, new Color(), 1.8f);
                        Main.dust[index2].noGravity = true;
                        Main.dust[index2].velocity *= 0.5f;
                    }
                }
                else if (this.type == 370)
                {
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 4);
                    for (int index = 0; index < 5; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 13, 0.0f, 0.0f, 0, new Color(), 1f);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        Vector2 vector2 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
                        vector2.Normalize();
                        int index2 = Gore.NewGore(this.Center + vector2 * 10f, vector2 * (float)Main.rand.Next(4, 9) * 0.66f + Vector2.UnitY * 1.5f, 331, (float)Main.rand.Next(40, 141) * 0.01f);
                        Main.gore[index2].sticky = false;
                    }
                }
                else if (this.type == 371)
                {
                    Main.PlaySound(13, (int)this.position.X, (int)this.position.Y, 1);
                    Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, 16);
                    for (int index = 0; index < 5; ++index)
                        Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 13, 0.0f, 0.0f, 0, new Color(), 1f);
                    for (int index1 = 0; index1 < 30; ++index1)
                    {
                        Vector2 vector2 = new Vector2((float)Main.rand.Next(-10, 11), (float)Main.rand.Next(-10, 11));
                        vector2.Normalize();
                        vector2 *= 0.4f;
                        int index2 = Gore.NewGore(this.Center + vector2 * 10f, vector2 * (float)Main.rand.Next(4, 9) * 0.66f + Vector2.UnitY * 1.5f, Main.rand.Next(435, 438), (float)Main.rand.Next(20, 100) * 0.01f);
                        Main.gore[index2].sticky = false;
                    }
                }
            }
            if (this.owner == Main.myPlayer)
            {
                if (this.type == 28 || this.type == 29 || (this.type == 37 || this.type == 108) || (this.type == 136 || this.type == 137 || (this.type == 138 || this.type == 142)) || (this.type == 143 || this.type == 144 || (this.type == 339 || this.type == 341) || (this.type == 470 || this.type == 516 || (this.type == 519 || this.type == 637))))
                {
                    int num2 = 3;
                    if (this.type == 28 || this.type == 37 || (this.type == 516 || this.type == 519))
                        num2 = 4;
                    if (this.type == 29 || this.type == 470 || this.type == 637)
                        num2 = 7;
                    if (this.type == 142 || this.type == 143 || (this.type == 144 || this.type == 341))
                        num2 = 5;
                    if (this.type == 108)
                        num2 = 10;
                    int num3 = (int)((double)this.position.X / 16.0 - (double)num2);
                    int num4 = (int)((double)this.position.X / 16.0 + (double)num2);
                    int num5 = (int)((double)this.position.Y / 16.0 - (double)num2);
                    int num6 = (int)((double)this.position.Y / 16.0 + (double)num2);
                    if (num3 < 0)
                        num3 = 0;
                    if (num4 > Main.maxTilesX)
                        num4 = Main.maxTilesX;
                    if (num5 < 0)
                        num5 = 0;
                    if (num6 > Main.maxTilesY)
                        num6 = Main.maxTilesY;
                    bool flag1 = false;
                    for (int index1 = num3; index1 <= num4; ++index1)
                    {
                        for (int index2 = num5; index2 <= num6; ++index2)
                        {
                            float num7 = Math.Abs((float)index1 - this.position.X / 16f);
                            float num8 = Math.Abs((float)index2 - this.position.Y / 16f);
                            if (Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8) < (double)num2 && Main.tile[index1, index2] != null && (int)Main.tile[index1, index2].wall == 0)
                            {
                                flag1 = true;
                                break;
                            }
                        }
                    }
                    AchievementsHelper.CurrentlyMining = true;
                    for (int i1 = num3; i1 <= num4; ++i1)
                    {
                        for (int j1 = num5; j1 <= num6; ++j1)
                        {
                            float num7 = Math.Abs((float)i1 - this.position.X / 16f);
                            float num8 = Math.Abs((float)j1 - this.position.Y / 16f);
                            if (Math.Sqrt((double)num7 * (double)num7 + (double)num8 * (double)num8) < (double)num2)
                            {
                                bool flag2 = true;
                                if (Main.tile[i1, j1] != null && Main.tile[i1, j1].active())
                                {
                                    flag2 = true;
                                    if (Main.tileDungeon[(int)Main.tile[i1, j1].type] || (int)Main.tile[i1, j1].type == 21 || ((int)Main.tile[i1, j1].type == 26 || (int)Main.tile[i1, j1].type == 107) || ((int)Main.tile[i1, j1].type == 108 || (int)Main.tile[i1, j1].type == 111 || ((int)Main.tile[i1, j1].type == 226 || (int)Main.tile[i1, j1].type == 237)) || ((int)Main.tile[i1, j1].type == 221 || (int)Main.tile[i1, j1].type == 222 || ((int)Main.tile[i1, j1].type == 223 || (int)Main.tile[i1, j1].type == 211) || (int)Main.tile[i1, j1].type == 404))
                                        flag2 = false;
                                    if (!Main.hardMode && (int)Main.tile[i1, j1].type == 58)
                                        flag2 = false;
                                    if (flag2)
                                    {
                                        WorldGen.KillTile(i1, j1, false, false, false);
                                        if (!Main.tile[i1, j1].active() && Main.netMode != 0)
                                            NetMessage.SendData(17, -1, -1, "", 0, (float)i1, (float)j1, 0.0f, 0, 0, 0);
                                    }
                                }
                                if (flag2)
                                {
                                    for (int i2 = i1 - 1; i2 <= i1 + 1; ++i2)
                                    {
                                        for (int j2 = j1 - 1; j2 <= j1 + 1; ++j2)
                                        {
                                            if (Main.tile[i2, j2] != null && (int)Main.tile[i2, j2].wall > 0 && flag1)
                                            {
                                                WorldGen.KillWall(i2, j2, false);
                                                if ((int)Main.tile[i2, j2].wall == 0 && Main.netMode != 0)
                                                    NetMessage.SendData(17, -1, -1, "", 2, (float)i2, (float)j2, 0.0f, 0, 0, 0);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    AchievementsHelper.CurrentlyMining = false;
                }
                if (Main.netMode != 0)
                    NetMessage.SendData(29, -1, -1, "", this.identity, (float)this.owner, 0.0f, 0.0f, 0, 0, 0);
                if (!this.noDropItem)
                {
                    int number = -1;
                    if (this.aiStyle == 10)
                    {
                        int i = (int)((double)this.position.X + (double)(this.width / 2)) / 16;
                        int j = (int)((double)this.position.Y + (double)(this.width / 2)) / 16;
                        int type = 0;
                        int Type = 2;
                        if (this.type == 109)
                        {
                            type = 147;
                            Type = 0;
                        }
                        if (this.type == 31)
                        {
                            type = 53;
                            Type = 0;
                        }
                        if (this.type == 42)
                        {
                            type = 53;
                            Type = 0;
                        }
                        if (this.type == 56)
                        {
                            type = 112;
                            Type = 0;
                        }
                        if (this.type == 65)
                        {
                            type = 112;
                            Type = 0;
                        }
                        if (this.type == 67)
                        {
                            type = 116;
                            Type = 0;
                        }
                        if (this.type == 68)
                        {
                            type = 116;
                            Type = 0;
                        }
                        if (this.type == 71)
                        {
                            type = 123;
                            Type = 0;
                        }
                        if (this.type == 39)
                        {
                            type = 59;
                            Type = 176;
                        }
                        if (this.type == 40)
                        {
                            type = 57;
                            Type = 172;
                        }
                        if (this.type == 179)
                        {
                            type = 224;
                            Type = 0;
                        }
                        if (this.type == 241)
                        {
                            type = 234;
                            Type = 0;
                        }
                        if (this.type == 354)
                        {
                            type = 234;
                            Type = 0;
                        }
                        if (this.type == 411)
                        {
                            type = 330;
                            Type = 71;
                        }
                        if (this.type == 412)
                        {
                            type = 331;
                            Type = 72;
                        }
                        if (this.type == 413)
                        {
                            type = 332;
                            Type = 73;
                        }
                        if (this.type == 414)
                        {
                            type = 333;
                            Type = 74;
                        }
                        if (this.type == 109)
                        {
                            int index = (int)Player.FindClosest(this.position, this.width, this.height);
                            if ((double)(this.Center - Main.player[index].Center).Length() > (double)Main.maxScreenW * 0.75)
                            {
                                type = -1;
                                Type = 593;
                            }
                        }
                        if (Main.tile[i, j].halfBrick() && (double)this.velocity.Y > 0.0 && (double)Math.Abs(this.velocity.Y) > (double)Math.Abs(this.velocity.X))
                            --j;
                        if (!Main.tile[i, j].active() && type >= 0)
                        {
                            bool flag = false;
                            if (j < Main.maxTilesY - 2 && Main.tile[i, j + 1] != null && (Main.tile[i, j + 1].active() && (int)Main.tile[i, j + 1].type == 314))
                                flag = true;
                            if (!flag)
                                WorldGen.PlaceTile(i, j, type, false, true, -1, 0);
                            if (!flag && Main.tile[i, j].active() && (int)Main.tile[i, j].type == type)
                            {
                                if (Main.tile[i, j + 1].halfBrick() || (int)Main.tile[i, j + 1].slope() != 0)
                                {
                                    WorldGen.SlopeTile(i, j + 1, 0);
                                    if (Main.netMode == 2)
                                        NetMessage.SendData(17, -1, -1, "", 14, (float)i, (float)(j + 1), 0.0f, 0, 0, 0);
                                }
                                if (Main.netMode != 0)
                                    NetMessage.SendData(17, -1, -1, "", 1, (float)i, (float)j, (float)type, 0, 0, 0);
                            }
                            else if (Type > 0)
                                number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Type, 1, false, 0, false);
                        }
                        else if (Type > 0)
                            number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, Type, 1, false, 0, false);
                    }
                    if (this.type == 1 && Main.rand.Next(3) == 0)
                        number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, 1, false, 0, false);
                    if (this.type == 474 && Main.rand.Next(3) == 0)
                        number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3003, 1, false, 0, false);
                    if (this.type == 103 && Main.rand.Next(6) == 0)
                        number = Main.rand.Next(3) != 0 ? Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, 1, false, 0, false) : Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 545, 1, false, 0, false);
                    if (this.type == 2 && Main.rand.Next(3) == 0)
                        number = Main.rand.Next(3) != 0 ? Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, 1, false, 0, false) : Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 41, 1, false, 0, false);
                    if (this.type == 172 && Main.rand.Next(3) == 0)
                        number = Main.rand.Next(3) != 0 ? Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 40, 1, false, 0, false) : Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 988, 1, false, 0, false);
                    if (this.type == 171)
                    {
                        if ((double)this.ai[1] == 0.0)
                        {
                            number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 985, 1, false, 0, false);
                            Main.item[number].noGrabDelay = 0;
                        }
                        else if ((double)this.ai[1] < 10.0)
                        {
                            number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 965, (int)(10.0 - (double)this.ai[1]), false, 0, false);
                            Main.item[number].noGrabDelay = 0;
                        }
                    }
                    if (this.type == 475)
                    {
                        if ((double)this.ai[1] == 0.0)
                        {
                            number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3005, 1, false, 0, false);
                            Main.item[number].noGrabDelay = 0;
                        }
                        else if ((double)this.ai[1] < 10.0)
                        {
                            number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 2996, (int)(10.0 - (double)this.ai[1]), false, 0, false);
                            Main.item[number].noGrabDelay = 0;
                        }
                    }
                    if (this.type == 505)
                    {
                        if ((double)this.ai[1] == 0.0)
                        {
                            number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3079, 1, false, 0, false);
                            Main.item[number].noGrabDelay = 0;
                        }
                        else if ((double)this.ai[1] < 10.0)
                        {
                            number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3077, (int)(10.0 - (double)this.ai[1]), false, 0, false);
                            Main.item[number].noGrabDelay = 0;
                        }
                    }
                    if (this.type == 506)
                    {
                        if ((double)this.ai[1] == 0.0)
                        {
                            number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3080, 1, false, 0, false);
                            Main.item[number].noGrabDelay = 0;
                        }
                        else if ((double)this.ai[1] < 10.0)
                        {
                            number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3078, (int)(10.0 - (double)this.ai[1]), false, 0, false);
                            Main.item[number].noGrabDelay = 0;
                        }
                    }
                    if (this.type == 91 && Main.rand.Next(6) == 0)
                        number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 516, 1, false, 0, false);
                    if (this.type == 50 && Main.rand.Next(3) == 0)
                        number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 282, 1, false, 0, false);
                    if (this.type == 515 && Main.rand.Next(3) == 0)
                        number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3112, 1, false, 0, false);
                    if (this.type == 53 && Main.rand.Next(3) == 0)
                        number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 286, 1, false, 0, false);
                    if (this.type == 48 && Main.rand.Next(2) == 0)
                        number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 279, 1, false, 0, false);
                    if (this.type == 54 && Main.rand.Next(2) == 0)
                        number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 287, 1, false, 0, false);
                    if (this.type == 3 && Main.rand.Next(2) == 0)
                        number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 42, 1, false, 0, false);
                    if (this.type == 4 && Main.rand.Next(4) == 0)
                        number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 47, 1, false, 0, false);
                    if (this.type == 12 && this.damage > 500)
                        number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 75, 1, false, 0, false);
                    if (this.type == 155)
                        number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 859, 1, false, 0, false);
                    if (this.type == 598 && Main.rand.Next(4) == 0)
                        number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3378, 1, false, 0, false);
                    if (this.type == 599 && Main.rand.Next(4) == 0)
                        number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 3379, 1, false, 0, false);
                    if (this.type == 21 && Main.rand.Next(2) == 0)
                        number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 154, 1, false, 0, false);
                    if (Main.netMode == 1 && number >= 0)
                        NetMessage.SendData(21, -1, -1, "", number, 1f, 0.0f, 0.0f, 0, 0, 0);
                }
                if (this.type == 69 || this.type == 70 || this.type == 621)
                {
                    int i = (int)((double)this.position.X + (double)(this.width / 2)) / 16;
                    int j = (int)((double)this.position.Y + (double)(this.height / 2)) / 16;
                    if (this.type == 69)
                        WorldGen.Convert(i, j, 2, 4);
                    if (this.type == 70)
                        WorldGen.Convert(i, j, 1, 4);
                    if (this.type == 621)
                        WorldGen.Convert(i, j, 4, 4);
                }
                if (this.type == 370 || this.type == 371)
                {
                    float num2 = 80f;
                    int type = 119;
                    if (this.type == 371)
                        type = 120;
                    for (int index = 0; index < (int)byte.MaxValue; ++index)
                    {
                        Player player = Main.player[index];
                        if (player.active && !player.dead && (double)Vector2.Distance(this.Center, player.Center) < (double)num2)
                            player.AddBuff(type, 1800, true);
                    }
                    for (int index = 0; index < 200; ++index)
                    {
                        NPC npc = Main.npc[index];
                        if (npc.active && npc.life > 0 && (double)Vector2.Distance(this.Center, npc.Center) < (double)num2)
                            npc.AddBuff(type, 1800, false);
                    }
                }
                if (this.type == 378)
                {
                    int num2 = Main.rand.Next(2, 4);
                    if (Main.rand.Next(5) == 0)
                        ++num2;
                    for (int index = 0; index < num2; ++index)
                    {
                        float num3 = this.velocity.X;
                        float num4 = this.velocity.Y;
                        Projectile.NewProjectile(this.Center.X, this.Center.Y, num3 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.00999999977648258), num4 * (float)(1.0 + (double)Main.rand.Next(-20, 21) * 0.00999999977648258), 379, this.damage, this.knockBack, this.owner, 0.0f, 0.0f);
                    }
                }
            }
            this.active = false;
        }

        public Color GetAlpha(Color newColor)
        {
            if (this.type == 270)
                return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, Main.rand.Next(0, (int)byte.MaxValue));
            int num1;
            int num2;
            int num3;
            if (this.type == 650)
            {
                int num4 = (int)((double)newColor.R * 1.5);
                int num5 = (int)((double)newColor.G * 1.5);
                int num6 = (int)((double)newColor.B * 1.5);
                if (num4 > (int)byte.MaxValue)
                    num1 = (int)byte.MaxValue;
                if (num5 > (int)byte.MaxValue)
                    num2 = (int)byte.MaxValue;
                if (num6 > (int)byte.MaxValue)
                    num3 = (int)byte.MaxValue;
            }
            else
            {
                if (this.type == 604 || this.type == 631)
                    return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, 0);
                if (this.type == 636)
                    return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, 64 - this.alpha / 4);
                if (this.type == 603 || this.type == 633)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 200);
                if (this.type == 623 || this.type >= 625 && this.type <= 628)
                    return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha);
                if (this.type == 645 || this.type == 643)
                    return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)sbyte.MaxValue - this.alpha / 2);
                if (this.type == 611)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 200);
                if (this.type == 640 || this.type == 644)
                    return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, 0);
                if (this.type == 612)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, (int)sbyte.MaxValue);
                if (this.aiStyle == 105)
                    return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha);
                if (this.type == 554)
                    return new Color(200, 200, 200, 200);
                if (this.type == 601)
                    return PortalHelper.GetPortalColor(this.owner, (int)this.ai[0]);
                if (this.type == 602)
                {
                    Color portalColor = PortalHelper.GetPortalColor(this.owner, (int)this.ai[1]);
                    portalColor.A = (byte)227;
                    return portalColor;
                }
                if (this.type == 585)
                {
                    byte a = newColor.A;
                    newColor = Color.Lerp(newColor, Color.White, 0.5f);
                    newColor.A = a;
                    return newColor;
                }
                if (this.type == 573 || this.type == 578 || (this.type == 579 || this.type == 617) || this.type == 641)
                    return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha);
                if (this.type == 9 || this.type == 490)
                    return Color.White;
                if (this.type == 575 || this.type == 596)
                {
                    if (this.timeLeft < 30)
                        this.alpha = (int)((double)byte.MaxValue - (double)byte.MaxValue * (double)((float)this.timeLeft / 30f));
                    return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, 128 - this.alpha / 2);
                }
                if (this.type == 546)
                    return new Color((int)byte.MaxValue, 200, (int)byte.MaxValue, 200);
                if (this.type == 553)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, 200, 200);
                if (this.type == 540)
                    return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, 0);
                if (this.type == 498)
                    return new Color((int)byte.MaxValue, 100, 20, 200);
                if (this.type == 538)
                    return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha);
                if (this.type == 518)
                {
                    float num4 = (float)(1.0 - (double)this.alpha / (double)byte.MaxValue);
                    return new Color((int)(200.0 * (double)num4), (int)(200.0 * (double)num4), (int)(200.0 * (double)num4), (int)(100.0 * (double)num4));
                }
                if (this.type == 518 || this.type == 595)
                {
                    Color color = Color.Lerp(newColor, Color.White, 0.85f);
                    color.A = Convert.ToByte(-128);
                    return color * (float)(1.0 - (double)this.alpha / (double)byte.MaxValue);
                }
                if (this.type == 536 || this.type == 607)
                    return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, 63 - this.alpha / 4);
                if (this.type == 591)
                    return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, 63 - this.alpha / 4);
                if (this.type == 493 || this.type == 494)
                    return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha);
                if (this.type == 492)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue);
                if (this.type == 491)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue);
                if (this.type == 485 || this.type == 502)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 200);
                if (this.type == 488)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue);
                if (this.type == 477 || this.type == 478 || this.type == 479)
                {
                    if (this.alpha == 0)
                        return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 200);
                    return new Color(0, 0, 0, 0);
                }
                if (this.type == 473)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue);
                if (this.type == 50 || this.type == 53 || this.type == 515)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 0);
                if (this.type == 92)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 0);
                if (this.type == 91)
                    return new Color(200, 200, 200, 0);
                if (this.type == 34 || this.type == 15 || (this.type == 93 || this.type == 94) || (this.type == 95 || this.type == 96 || (this.type == 253 || this.type == 258)) || this.type == 102 && this.alpha < (int)byte.MaxValue)
                    return new Color(200, 200, 200, 25);
                if (this.type == 465)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 0) * (float)(1.0 - (double)this.alpha / (double)byte.MaxValue);
                if (this.type == 503)
                    return Color.Lerp(Color.Lerp(newColor, Color.White, 0.5f) * (float)(1.0 - (double)this.alpha / (double)byte.MaxValue), Color.Lerp(Color.Purple, Color.White, 0.33f), (float)(0.25 + Math.Cos((double)this.localAI[0]) * 0.25));
                if (this.type == 467)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue) * (float)(1.0 - (double)this.alpha / (double)byte.MaxValue);
                if (this.type == 634 || this.type == 635)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, (int)sbyte.MaxValue) * this.Opacity;
                if (this.type == 451)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 200) * (float)(((double)byte.MaxValue - (double)this.alpha) / (double)byte.MaxValue);
                if (this.type == 454 || this.type == 452)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue) * (float)(1.0 - (double)this.alpha / (double)byte.MaxValue);
                if (this.type == 464)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue) * (float)(((double)byte.MaxValue - (double)this.alpha) / (double)byte.MaxValue);
                if (this.type == 450)
                    return new Color(200, 200, 200, (int)byte.MaxValue - this.alpha);
                if (this.type == 459)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 200);
                if (this.type == 447)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 200);
                if (this.type == 446)
                    return Color.Lerp(newColor, Color.White, 0.8f) * (float)(1.0 - (double)this.alpha / (double)byte.MaxValue);
                if (this.type >= 646 && this.type <= 649)
                    return Color.Lerp(newColor, Color.White, 0.8f) * (float)(1.0 - (double)this.alpha / (double)byte.MaxValue);
                if (this.type == 445)
                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 128) * (float)(1.0 - (double)this.alpha / (double)byte.MaxValue);
                if (this.type == 440 || this.type == 449 || this.type == 606)
                {
                    num1 = (int)byte.MaxValue - this.alpha;
                    num2 = (int)byte.MaxValue - this.alpha;
                    num3 = (int)byte.MaxValue - this.alpha;
                }
                else
                {
                    if (this.type == 444)
                        return newColor * (float)(1.0 - (double)this.alpha / (double)byte.MaxValue);
                    if (this.type == 443)
                        return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 128) * (float)(1.0 - (double)this.alpha / (double)byte.MaxValue);
                    if (this.type == 438)
                        return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 128) * (float)(1.0 - (double)this.alpha / (double)byte.MaxValue);
                    if (this.type == 592)
                        return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 128) * (float)(1.0 - (double)this.alpha / (double)byte.MaxValue);
                    if (this.type == 437)
                        return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 0) * (float)(1.0 - (double)this.alpha / (double)byte.MaxValue);
                    if (this.type == 462)
                        return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 128) * (float)(1.0 - (double)this.alpha / (double)byte.MaxValue);
                    if (this.type == 352)
                        return new Color(250, 250, 250, this.alpha);
                    if (this.type == 435)
                    {
                        newColor = Color.Lerp(newColor, Color.White, 0.8f);
                        return new Color((int)newColor.R, (int)newColor.G, (int)newColor.B, 25);
                    }
                    if (this.type == 436)
                    {
                        newColor = Color.Lerp(newColor, Color.White, 0.8f);
                        return new Color((int)newColor.R, (int)newColor.G, (int)newColor.B, 25);
                    }
                    if (this.type == 409)
                        return new Color(250, 250, 250, 200);
                    if (this.type == 348 || this.type == 349)
                        return new Color(200, 200, 200, this.alpha);
                    if (this.type == 337)
                        return new Color(250, 250, 250, 150);
                    if (this.type >= 424 && this.type <= 426)
                    {
                        byte num4 = (byte)150;
                        if ((int)newColor.R < (int)num4)
                            newColor.R = num4;
                        if ((int)newColor.G < (int)num4)
                            newColor.G = num4;
                        if ((int)newColor.B < (int)num4)
                            newColor.B = num4;
                        return new Color((int)newColor.R, (int)newColor.G, (int)newColor.B, (int)byte.MaxValue);
                    }
                    if (this.type == 431 || this.type == 432)
                        return new Color(250, 250, 250, (int)byte.MaxValue - this.alpha);
                    if (this.type == 343 || this.type == 344)
                    {
                        float num4 = (float)(1.0 - (double)this.alpha / (double)byte.MaxValue);
                        return new Color((int)(250.0 * (double)num4), (int)(250.0 * (double)num4), (int)(250.0 * (double)num4), (int)(100.0 * (double)num4));
                    }
                    if (this.type == 332)
                        return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue);
                    if (this.type == 329)
                        return new Color(200, 200, 200, 50);
                    if (this.type >= 326 && this.type <= 328 || this.type >= 400 && this.type <= 402)
                        return Color.Transparent;
                    if (this.type == 324 && this.frame >= 6 && this.frame <= 9)
                        return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue);
                    if (this.type == 16)
                        return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 0);
                    if (this.type == 321)
                        return new Color(200, 200, 200, 0);
                    if (this.type == 76 || this.type == 77 || this.type == 78)
                        return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 0);
                    if (this.type == 308)
                        return new Color(200, 200, (int)byte.MaxValue, 125);
                    if (this.type == 263)
                    {
                        if (this.timeLeft < (int)byte.MaxValue)
                            return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, (int)(byte)this.timeLeft);
                        return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue);
                    }
                    if (this.type == 274)
                    {
                        if (this.timeLeft >= 85)
                            return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 100);
                        byte num4 = (byte)(this.timeLeft * 3);
                        byte num5 = (byte)(100.0 * ((double)num4 / (double)byte.MaxValue));
                        return new Color((int)num4, (int)num4, (int)num4, (int)num5);
                    }
                    if (this.type == 5)
                        return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 0);
                    if (this.type == 300 || this.type == 301)
                        return new Color(250, 250, 250, 50);
                    if (this.type == 304)
                        return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)(byte)((double)((int)byte.MaxValue - this.alpha) / 3.0));
                    if (this.type == 116 || this.type == 132 || (this.type == 156 || this.type == 157) || (this.type == 157 || this.type == 173))
                    {
                        if ((double)this.localAI[1] >= 15.0)
                            return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, this.alpha);
                        if ((double)this.localAI[1] < 5.0)
                            return Color.Transparent;
                        int num4 = (int)(((double)this.localAI[1] - 5.0) / 10.0 * (double)byte.MaxValue);
                        return new Color(num4, num4, num4, num4);
                    }
                    if (this.type == 254)
                    {
                        if (this.timeLeft < 30)
                            this.alpha = (int)((double)byte.MaxValue - (double)byte.MaxValue * (double)((float)this.timeLeft / 30f));
                        return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, 0);
                    }
                    if (this.type == 265 || this.type == 355)
                    {
                        if (this.alpha > 0)
                            return Color.Transparent;
                        return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 0);
                    }
                    if (this.type == 270 && (double)this.ai[0] >= 0.0)
                    {
                        if (this.alpha > 0)
                            return Color.Transparent;
                        return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 200);
                    }
                    if (this.type == 257)
                    {
                        if (this.alpha > 200)
                            return Color.Transparent;
                        return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, 0);
                    }
                    if (this.type == 259)
                    {
                        if (this.alpha > 200)
                            return Color.Transparent;
                        return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, 0);
                    }
                    if (this.type >= 150 && this.type <= 152)
                        return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha);
                    if (this.type == 250)
                        return Color.Transparent;
                    if (this.type == 251)
                        return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, 0);
                    if (this.type == 131)
                        return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, 0);
                    if (this.type == 211)
                        return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 0);
                    if (this.type == 229)
                        return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 50);
                    if (this.type == 221)
                        return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 200);
                    if (this.type == 20)
                    {
                        if (this.alpha <= 150)
                            return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 0);
                        return new Color(0, 0, 0, 0);
                    }
                    if (this.type == 207)
                    {
                        num1 = (int)byte.MaxValue - this.alpha;
                        num2 = (int)byte.MaxValue - this.alpha;
                        num3 = (int)byte.MaxValue - this.alpha;
                    }
                    else
                    {
                        if (this.type == 242)
                        {
                            if (this.alpha < 140)
                                return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 100);
                            return Color.Transparent;
                        }
                        if (this.type == 638)
                            return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 100) * this.Opacity;
                        if (this.type == 209)
                        {
                            num1 = (int)newColor.R - this.alpha;
                            num2 = (int)newColor.G - this.alpha;
                            num3 = (int)newColor.B - this.alpha / 2;
                        }
                        else
                        {
                            if (this.type == 130)
                                return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 175);
                            if (this.type == 182)
                                return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 200);
                            if (this.type == 226)
                            {
                                int num4 = (int)byte.MaxValue;
                                int num5 = (int)byte.MaxValue;
                                int num6 = (int)byte.MaxValue;
                                float num7 = (float)((double)Main.mouseTextColor / 200.0 - 0.300000011920929);
                                int num8 = (int)((double)num4 * (double)num7);
                                int num9 = (int)((double)num5 * (double)num7);
                                int num10 = (int)((double)num6 * (double)num7);
                                int r = num8 + 50;
                                if (r > (int)byte.MaxValue)
                                    r = (int)byte.MaxValue;
                                int g = num9 + 50;
                                if (g > (int)byte.MaxValue)
                                    g = (int)byte.MaxValue;
                                int b = num10 + 50;
                                if (b > (int)byte.MaxValue)
                                    b = (int)byte.MaxValue;
                                return new Color(r, g, b, 200);
                            }
                            if (this.type == 227)
                            {
                                int num4;
                                int num5 = num4 = (int)byte.MaxValue;
                                int num6 = num4;
                                int num7 = num4;
                                float num8 = (float)((double)Main.mouseTextColor / 100.0 - 1.60000002384186);
                                int num9 = (int)((double)num7 * (double)num8);
                                int num10 = (int)((double)num6 * (double)num8);
                                int num11 = (int)((double)num5 * (double)num8);
                                int a = (int)(100.0 * (double)num8);
                                int r = num9 + 50;
                                if (r > (int)byte.MaxValue)
                                    r = (int)byte.MaxValue;
                                int g = num10 + 50;
                                if (g > (int)byte.MaxValue)
                                    g = (int)byte.MaxValue;
                                int b = num11 + 50;
                                if (b > (int)byte.MaxValue)
                                    b = (int)byte.MaxValue;
                                return new Color(r, g, b, a);
                            }
                            if (this.type == 114 || this.type == 115)
                            {
                                if ((double)this.localAI[1] >= 15.0)
                                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, this.alpha);
                                if ((double)this.localAI[1] < 5.0)
                                    return Color.Transparent;
                                int num4 = (int)(((double)this.localAI[1] - 5.0) / 10.0 * (double)byte.MaxValue);
                                return new Color(num4, num4, num4, num4);
                            }
                            if (this.type == 83 || this.type == 88 || (this.type == 89 || this.type == 90) || (this.type == 100 || this.type == 104 || this.type == 279) || this.type >= 283 && this.type <= 287)
                            {
                                if (this.alpha < 200)
                                    return new Color((int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, (int)byte.MaxValue - this.alpha, 0);
                                return Color.Transparent;
                            }
                            if (this.type == 34 || this.type == 35 || (this.type == 15 || this.type == 19) || (this.type == 44 || this.type == 45))
                                return Color.White;
                            if (this.type == 79)
                            {
                                num1 = Main.DiscoR;
                                num2 = Main.DiscoG;
                                num3 = Main.DiscoB;
                                return new Color();
                            }
                            if (this.type == 9 || this.type == 15 || (this.type == 34 || this.type == 50) || (this.type == 53 || this.type == 76 || (this.type == 77 || this.type == 78)) || (this.type == 92 || this.type == 91))
                            {
                                num1 = (int)newColor.R - this.alpha / 3;
                                num2 = (int)newColor.G - this.alpha / 3;
                                num3 = (int)newColor.B - this.alpha / 3;
                            }
                            else
                            {
                                if (this.type == 18)
                                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, 50);
                                if (this.type == 16 || this.type == 44 || this.type == 45)
                                {
                                    num1 = (int)newColor.R;
                                    num2 = (int)newColor.G;
                                    num3 = (int)newColor.B;
                                }
                                else if (this.type == 12 || this.type == 72 || (this.type == 86 || this.type == 87))
                                    return new Color((int)byte.MaxValue, (int)byte.MaxValue, (int)byte.MaxValue, (int)newColor.A - this.alpha);
                            }
                        }
                    }
                }
            }
            float num12 = (float)((int)byte.MaxValue - this.alpha) / (float)byte.MaxValue;
            int r1 = (int)((double)newColor.R * (double)num12);
            int g1 = (int)((double)newColor.G * (double)num12);
            int b1 = (int)((double)newColor.B * (double)num12);
            int a1 = (int)newColor.A - this.alpha;
            if (a1 < 0)
                a1 = 0;
            if (a1 > (int)byte.MaxValue)
                a1 = (int)byte.MaxValue;
            return new Color(r1, g1, b1, a1);
        }

        public override string ToString()
        {
            return "name:" + (object)this.name + ", active:" + (string)(object)(this.active ? 1 : 0) + ", whoAmI:" + (string)(object)this.whoAmI;
        }
    }
}
